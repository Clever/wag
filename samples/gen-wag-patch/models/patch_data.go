package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

// PatchData patch data
// swagger:model PatchData
type PatchData struct {

<<<<<<< HEAD
	// array field
=======
	/* array field
	 */
>>>>>>> Add generated code
	ArrayField []string `json:"arrayField"`

	// id
	ID *string `json:"id,omitempty"`

	// nested
	Nested *NestedData `json:"nested,omitempty"`

	// num
	Num *int64 `json:"num,omitempty"`
}

// Validate validates this patch data
func (m *PatchData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateArrayField(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateNested(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PatchData) validateArrayField(formats strfmt.Registry) error {

	if swag.IsZero(m.ArrayField) { // not required
		return nil
	}

	return nil
}

func (m *PatchData) validateNested(formats strfmt.Registry) error {

	if swag.IsZero(m.Nested) { // not required
		return nil
	}

	if m.Nested != nil {

		if err := m.Nested.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}
