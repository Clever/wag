// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ThingWithCompositeAttributesRepeated thing with composite attributes repeated
// swagger:model ThingWithCompositeAttributesRepeated
type ThingWithCompositeAttributesRepeated struct {

	// cuatro
	// Required: true
	Cuatro *string `json:"cuatro"`

	// dos
	// Required: true
	Dos *string `json:"dos"`

	// tres
	// Required: true
	Tres *string `json:"tres"`

	// uno
	// Required: true
	Uno *string `json:"uno"`
}

// Validate validates this thing with composite attributes repeated
func (m *ThingWithCompositeAttributesRepeated) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCuatro(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateDos(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTres(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateUno(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ThingWithCompositeAttributesRepeated) validateCuatro(formats strfmt.Registry) error {

	if err := validate.Required("cuatro", "body", m.Cuatro); err != nil {
		return err
	}

	return nil
}

func (m *ThingWithCompositeAttributesRepeated) validateDos(formats strfmt.Registry) error {

	if err := validate.Required("dos", "body", m.Dos); err != nil {
		return err
	}

	return nil
}

func (m *ThingWithCompositeAttributesRepeated) validateTres(formats strfmt.Registry) error {

	if err := validate.Required("tres", "body", m.Tres); err != nil {
		return err
	}

	return nil
}

func (m *ThingWithCompositeAttributesRepeated) validateUno(formats strfmt.Registry) error {

	if err := validate.Required("uno", "body", m.Uno); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ThingWithCompositeAttributesRepeated) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ThingWithCompositeAttributesRepeated) UnmarshalBinary(b []byte) error {
	var res ThingWithCompositeAttributesRepeated
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
