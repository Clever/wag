// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TeacherSetupGuideStep teacher setup guide step
// swagger:model TeacherSetupGuideStep
type TeacherSetupGuideStep struct {

	// content
	Content string `json:"content,omitempty"`

	// header
	Header string `json:"header,omitempty"`

	// screenshot URL
	ScreenshotURL string `json:"screenshotURL,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this teacher setup guide step
func (m *TeacherSetupGuideStep) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var teacherSetupGuideStepTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["accountSyncing","howToUse"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		teacherSetupGuideStepTypeTypePropEnum = append(teacherSetupGuideStepTypeTypePropEnum, v)
	}
}

const (
	// TeacherSetupGuideStepTypeAccountSyncing captures enum value "accountSyncing"
	TeacherSetupGuideStepTypeAccountSyncing string = "accountSyncing"
	// TeacherSetupGuideStepTypeHowToUse captures enum value "howToUse"
	TeacherSetupGuideStepTypeHowToUse string = "howToUse"
)

// prop value enum
func (m *TeacherSetupGuideStep) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, teacherSetupGuideStepTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *TeacherSetupGuideStep) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TeacherSetupGuideStep) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TeacherSetupGuideStep) UnmarshalBinary(b []byte) error {
	var res TeacherSetupGuideStep
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
