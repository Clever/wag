// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SharingRule sharing rule
// swagger:model SharingRule
type SharingRule struct {

	// collection
	Collection string `json:"collection,omitempty"`

	// constraints
	// Min Length: 1
	Constraints []*SharingConstraint `json:"constraints"`
}

// Validate validates this sharing rule
func (m *SharingRule) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCollection(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateConstraints(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var sharingRuleTypeCollectionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["sections","students","teachers","schooladmins"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		sharingRuleTypeCollectionPropEnum = append(sharingRuleTypeCollectionPropEnum, v)
	}
}

const (
	// SharingRuleCollectionSections captures enum value "sections"
	SharingRuleCollectionSections string = "sections"
	// SharingRuleCollectionStudents captures enum value "students"
	SharingRuleCollectionStudents string = "students"
	// SharingRuleCollectionTeachers captures enum value "teachers"
	SharingRuleCollectionTeachers string = "teachers"
	// SharingRuleCollectionSchooladmins captures enum value "schooladmins"
	SharingRuleCollectionSchooladmins string = "schooladmins"
)

// prop value enum
func (m *SharingRule) validateCollectionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, sharingRuleTypeCollectionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SharingRule) validateCollection(formats strfmt.Registry) error {

	if swag.IsZero(m.Collection) { // not required
		return nil
	}

	// value enum
	if err := m.validateCollectionEnum("collection", "body", m.Collection); err != nil {
		return err
	}

	return nil
}

func (m *SharingRule) validateConstraints(formats strfmt.Registry) error {

	if swag.IsZero(m.Constraints) { // not required
		return nil
	}

	for i := 0; i < len(m.Constraints); i++ {

		if swag.IsZero(m.Constraints[i]) { // not required
			continue
		}

		if m.Constraints[i] != nil {

			if err := m.Constraints[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("constraints" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *SharingRule) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SharingRule) UnmarshalBinary(b []byte) error {
	var res SharingRule
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
