// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AppOnboarding Tracks app onboarding data for library apps
// swagger:model AppOnboarding
type AppOnboarding struct {

	// announced
	Announced string `json:"announced,omitempty"`
}

// Validate validates this app onboarding
func (m *AppOnboarding) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAnnounced(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var appOnboardingTypeAnnouncedPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["notScheduled","scheduled","announced"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		appOnboardingTypeAnnouncedPropEnum = append(appOnboardingTypeAnnouncedPropEnum, v)
	}
}

const (
	// AppOnboardingAnnouncedNotScheduled captures enum value "notScheduled"
	AppOnboardingAnnouncedNotScheduled string = "notScheduled"
	// AppOnboardingAnnouncedScheduled captures enum value "scheduled"
	AppOnboardingAnnouncedScheduled string = "scheduled"
	// AppOnboardingAnnouncedAnnounced captures enum value "announced"
	AppOnboardingAnnouncedAnnounced string = "announced"
)

// prop value enum
func (m *AppOnboarding) validateAnnouncedEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, appOnboardingTypeAnnouncedPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *AppOnboarding) validateAnnounced(formats strfmt.Registry) error {

	if swag.IsZero(m.Announced) { // not required
		return nil
	}

	// value enum
	if err := m.validateAnnouncedEnum("announced", "body", m.Announced); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AppOnboarding) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AppOnboarding) UnmarshalBinary(b []byte) error {
	var res AppOnboarding
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
