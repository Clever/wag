// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// OnboardingIntegrationType onboarding integration type
// swagger:model OnboardingIntegrationType
type OnboardingIntegrationType string

const (
	// OnboardingIntegrationTypeInstantLogin captures enum value "instantLogin"
	OnboardingIntegrationTypeInstantLogin OnboardingIntegrationType = "instantLogin"
	// OnboardingIntegrationTypeIos captures enum value "ios"
	OnboardingIntegrationTypeIos OnboardingIntegrationType = "ios"
	// OnboardingIntegrationTypeSecureSyncLite captures enum value "secureSyncLite"
	OnboardingIntegrationTypeSecureSyncLite OnboardingIntegrationType = "secureSyncLite"
	// OnboardingIntegrationTypeSecureSync captures enum value "secureSync"
	OnboardingIntegrationTypeSecureSync OnboardingIntegrationType = "secureSync"
	// OnboardingIntegrationTypeEvents captures enum value "events"
	OnboardingIntegrationTypeEvents OnboardingIntegrationType = "events"
)

// for schema
var onboardingIntegrationTypeEnum []interface{}

func init() {
	var res []OnboardingIntegrationType
	if err := json.Unmarshal([]byte(`["instantLogin","ios","secureSyncLite","secureSync","events"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		onboardingIntegrationTypeEnum = append(onboardingIntegrationTypeEnum, v)
	}
}

func (m OnboardingIntegrationType) validateOnboardingIntegrationTypeEnum(path, location string, value OnboardingIntegrationType) error {
	if err := validate.Enum(path, location, value, onboardingIntegrationTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this onboarding integration type
func (m OnboardingIntegrationType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOnboardingIntegrationTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
