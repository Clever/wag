// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// Version Valid versions
// swagger:model Version
type Version string

const (
	// VersionV11 captures enum value "v1.1"
	VersionV11 Version = "v1.1"
	// VersionV12 captures enum value "v1.2"
	VersionV12 Version = "v1.2"
	// VersionV20 captures enum value "v2.0"
	VersionV20 Version = "v2.0"
	// VersionV21 captures enum value "v2.1"
	VersionV21 Version = "v2.1"
)

// for schema
var versionEnum []interface{}

func init() {
	var res []Version
	if err := json.Unmarshal([]byte(`["v1.1","v1.2","v2.0","v2.1"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		versionEnum = append(versionEnum, v)
	}
}

func (m Version) validateVersionEnum(path, location string, value Version) error {
	if err := validate.Enum(path, location, value, versionEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this version
func (m Version) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateVersionEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
