// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LibraryIntegrationType library integration type
// swagger:model LibraryIntegrationType
type LibraryIntegrationType string

const (
	// LibraryIntegrationTypeLink captures enum value "link"
	LibraryIntegrationTypeLink LibraryIntegrationType = "link"
	// LibraryIntegrationTypePartneredApplication captures enum value "partneredApplication"
	LibraryIntegrationTypePartneredApplication LibraryIntegrationType = "partneredApplication"
)

// for schema
var libraryIntegrationTypeEnum []interface{}

func init() {
	var res []LibraryIntegrationType
	if err := json.Unmarshal([]byte(`["link","partneredApplication"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		libraryIntegrationTypeEnum = append(libraryIntegrationTypeEnum, v)
	}
}

func (m LibraryIntegrationType) validateLibraryIntegrationTypeEnum(path, location string, value LibraryIntegrationType) error {
	if err := validate.Enum(path, location, value, libraryIntegrationTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this library integration type
func (m LibraryIntegrationType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLibraryIntegrationTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
