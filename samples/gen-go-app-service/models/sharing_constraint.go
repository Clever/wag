// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SharingConstraint sharing constraint
// swagger:model SharingConstraint
type SharingConstraint struct {

	// collection
	Collection string `json:"collection,omitempty"`

	// field
	Field string `json:"field,omitempty"`

	// operator
	Operator string `json:"operator,omitempty"`

	// values
	// Min Length: 1
	Values []string `json:"values"`
}

// Validate validates this sharing constraint
func (m *SharingConstraint) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCollection(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateOperator(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateValues(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var sharingConstraintTypeCollectionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["sections","students","teachers","schooladmins"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		sharingConstraintTypeCollectionPropEnum = append(sharingConstraintTypeCollectionPropEnum, v)
	}
}

const (
	// SharingConstraintCollectionSections captures enum value "sections"
	SharingConstraintCollectionSections string = "sections"
	// SharingConstraintCollectionStudents captures enum value "students"
	SharingConstraintCollectionStudents string = "students"
	// SharingConstraintCollectionTeachers captures enum value "teachers"
	SharingConstraintCollectionTeachers string = "teachers"
	// SharingConstraintCollectionSchooladmins captures enum value "schooladmins"
	SharingConstraintCollectionSchooladmins string = "schooladmins"
)

// prop value enum
func (m *SharingConstraint) validateCollectionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, sharingConstraintTypeCollectionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SharingConstraint) validateCollection(formats strfmt.Registry) error {

	if swag.IsZero(m.Collection) { // not required
		return nil
	}

	// value enum
	if err := m.validateCollectionEnum("collection", "body", m.Collection); err != nil {
		return err
	}

	return nil
}

var sharingConstraintTypeOperatorPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Contains","EqualsAnyOf","NotContains","NotEqualsAnyOf","StartsWith"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		sharingConstraintTypeOperatorPropEnum = append(sharingConstraintTypeOperatorPropEnum, v)
	}
}

const (
	// SharingConstraintOperatorContains captures enum value "Contains"
	SharingConstraintOperatorContains string = "Contains"
	// SharingConstraintOperatorEqualsAnyOf captures enum value "EqualsAnyOf"
	SharingConstraintOperatorEqualsAnyOf string = "EqualsAnyOf"
	// SharingConstraintOperatorNotContains captures enum value "NotContains"
	SharingConstraintOperatorNotContains string = "NotContains"
	// SharingConstraintOperatorNotEqualsAnyOf captures enum value "NotEqualsAnyOf"
	SharingConstraintOperatorNotEqualsAnyOf string = "NotEqualsAnyOf"
	// SharingConstraintOperatorStartsWith captures enum value "StartsWith"
	SharingConstraintOperatorStartsWith string = "StartsWith"
)

// prop value enum
func (m *SharingConstraint) validateOperatorEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, sharingConstraintTypeOperatorPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SharingConstraint) validateOperator(formats strfmt.Registry) error {

	if swag.IsZero(m.Operator) { // not required
		return nil
	}

	// value enum
	if err := m.validateOperatorEnum("operator", "body", m.Operator); err != nil {
		return err
	}

	return nil
}

func (m *SharingConstraint) validateValues(formats strfmt.Registry) error {

	if swag.IsZero(m.Values) { // not required
		return nil
	}

	for i := 0; i < len(m.Values); i++ {

		if err := validate.MinLength("values"+"."+strconv.Itoa(i), "body", string(m.Values[i]), 1); err != nil {
			return err
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *SharingConstraint) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SharingConstraint) UnmarshalBinary(b []byte) error {
	var res SharingConstraint
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
