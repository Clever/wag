// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// FieldSchema field schema
// swagger:model FieldSchema
type FieldSchema struct {

	// access type
	AccessType string `json:"accessType,omitempty"`

	// name
	Name string `json:"name,omitempty"`
}

// Validate validates this field schema
func (m *FieldSchema) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccessType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var fieldSchemaTypeAccessTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["required","optional","available","clever_required","clever_generated"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		fieldSchemaTypeAccessTypePropEnum = append(fieldSchemaTypeAccessTypePropEnum, v)
	}
}

const (
	// FieldSchemaAccessTypeRequired captures enum value "required"
	FieldSchemaAccessTypeRequired string = "required"
	// FieldSchemaAccessTypeOptional captures enum value "optional"
	FieldSchemaAccessTypeOptional string = "optional"
	// FieldSchemaAccessTypeAvailable captures enum value "available"
	FieldSchemaAccessTypeAvailable string = "available"
	// FieldSchemaAccessTypeCleverRequired captures enum value "clever_required"
	FieldSchemaAccessTypeCleverRequired string = "clever_required"
	// FieldSchemaAccessTypeCleverGenerated captures enum value "clever_generated"
	FieldSchemaAccessTypeCleverGenerated string = "clever_generated"
)

// prop value enum
func (m *FieldSchema) validateAccessTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, fieldSchemaTypeAccessTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *FieldSchema) validateAccessType(formats strfmt.Registry) error {

	if swag.IsZero(m.AccessType) { // not required
		return nil
	}

	// value enum
	if err := m.validateAccessTypeEnum("accessType", "body", m.AccessType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *FieldSchema) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FieldSchema) UnmarshalBinary(b []byte) error {
	var res FieldSchema
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
