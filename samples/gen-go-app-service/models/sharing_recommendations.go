// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SharingRecommendations The sharing recommendations for an application. Should match the schema used in District Authorizations
// swagger:model SharingRecommendations
type SharingRecommendations struct {

	// rules
	Rules []*SharingRule `json:"rules"`

	// sharing type
	SharingType string `json:"sharingType,omitempty"`
}

// Validate validates this sharing recommendations
func (m *SharingRecommendations) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRules(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateSharingType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SharingRecommendations) validateRules(formats strfmt.Registry) error {

	if swag.IsZero(m.Rules) { // not required
		return nil
	}

	for i := 0; i < len(m.Rules); i++ {

		if swag.IsZero(m.Rules[i]) { // not required
			continue
		}

		if m.Rules[i] != nil {

			if err := m.Rules[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("rules" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var sharingRecommendationsTypeSharingTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["none","district","schools","sections","rules"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		sharingRecommendationsTypeSharingTypePropEnum = append(sharingRecommendationsTypeSharingTypePropEnum, v)
	}
}

const (
	// SharingRecommendationsSharingTypeNone captures enum value "none"
	SharingRecommendationsSharingTypeNone string = "none"
	// SharingRecommendationsSharingTypeDistrict captures enum value "district"
	SharingRecommendationsSharingTypeDistrict string = "district"
	// SharingRecommendationsSharingTypeSchools captures enum value "schools"
	SharingRecommendationsSharingTypeSchools string = "schools"
	// SharingRecommendationsSharingTypeSections captures enum value "sections"
	SharingRecommendationsSharingTypeSections string = "sections"
	// SharingRecommendationsSharingTypeRules captures enum value "rules"
	SharingRecommendationsSharingTypeRules string = "rules"
)

// prop value enum
func (m *SharingRecommendations) validateSharingTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, sharingRecommendationsTypeSharingTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SharingRecommendations) validateSharingType(formats strfmt.Registry) error {

	if swag.IsZero(m.SharingType) { // not required
		return nil
	}

	// value enum
	if err := m.validateSharingTypeEnum("sharingType", "body", m.SharingType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SharingRecommendations) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SharingRecommendations) UnmarshalBinary(b []byte) error {
	var res SharingRecommendations
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
