// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package db is a generated GoMock package.
package db

import (
	context "context"
	models "github.com/Clever/wag/samples/gen-go-app-service/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockInterface is a mock of Interface interface
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// SaveSetupStep mocks base method
func (m_2 *MockInterface) SaveSetupStep(ctx context.Context, m models.SetupStep) error {
	ret := m_2.ctrl.Call(m_2, "SaveSetupStep", ctx, m)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveSetupStep indicates an expected call of SaveSetupStep
func (mr *MockInterfaceMockRecorder) SaveSetupStep(ctx, m interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveSetupStep", reflect.TypeOf((*MockInterface)(nil).SaveSetupStep), ctx, m)
}

// GetSetupStep mocks base method
func (m *MockInterface) GetSetupStep(ctx context.Context, appID, id string) (*models.SetupStep, error) {
	ret := m.ctrl.Call(m, "GetSetupStep", ctx, appID, id)
	ret0, _ := ret[0].(*models.SetupStep)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSetupStep indicates an expected call of GetSetupStep
func (mr *MockInterfaceMockRecorder) GetSetupStep(ctx, appID, id interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSetupStep", reflect.TypeOf((*MockInterface)(nil).GetSetupStep), ctx, appID, id)
}

// GetSetupStepsByAppIDAndID mocks base method
func (m *MockInterface) GetSetupStepsByAppIDAndID(ctx context.Context, input GetSetupStepsByAppIDAndIDInput, fn func(*models.SetupStep, bool) bool) error {
	ret := m.ctrl.Call(m, "GetSetupStepsByAppIDAndID", ctx, input, fn)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetSetupStepsByAppIDAndID indicates an expected call of GetSetupStepsByAppIDAndID
func (mr *MockInterfaceMockRecorder) GetSetupStepsByAppIDAndID(ctx, input, fn interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSetupStepsByAppIDAndID", reflect.TypeOf((*MockInterface)(nil).GetSetupStepsByAppIDAndID), ctx, input, fn)
}

// DeleteSetupStep mocks base method
func (m *MockInterface) DeleteSetupStep(ctx context.Context, appID, id string) error {
	ret := m.ctrl.Call(m, "DeleteSetupStep", ctx, appID, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteSetupStep indicates an expected call of DeleteSetupStep
func (mr *MockInterfaceMockRecorder) DeleteSetupStep(ctx, appID, id interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSetupStep", reflect.TypeOf((*MockInterface)(nil).DeleteSetupStep), ctx, appID, id)
}
