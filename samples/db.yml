swagger: '2.0'
info:
  title: swagger-test
  description: Testing Swagger Codegen
  version: 0.1.0
  x-npm-package: swagger-test
basePath: /v1
schemes:
  - http
produces:
  - application/json
consumes:
  - application/json
responses:
  BadRequest:
    description: "Bad Request"
    schema:
      $ref: "#/definitions/BadRequest"
  InternalError:
    description: "Internal Error"
    schema:
      $ref: "#/definitions/InternalError"
paths:
  /health/check:
    get:
      operationId: healthCheck
      tags:
        - Infra
      responses:
        200:
          description: OK response

definitions:
  BadRequest:
    type: object
    properties:
      message:
        type: string
  InternalError:
    type: object
    properties:
      message:
        type: string

  Thing:
    x-db:
      AllowOverwrites: false
      AllowPrimaryIndexScan: true
      AllowSecondaryIndexScan:
        - thingID
        - name-createdAt
      DynamoDB:
        KeySchema:
          - AttributeName: name
            KeyType: HASH
          - AttributeName: version
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: thingID # "id" is two chars, min IndexName length is 3
            Projection:
              ProjectionType: ALL
            KeySchema:
              - AttributeName: id
                KeyType: HASH
          - IndexName: name-createdAt
            Projection:
              ProjectionType: ALL
            KeySchema:
              - AttributeName: name
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      version:
        type: integer
      createdAt:
        type: string
        format: date-time
      category:
        $ref: '#/definitions/Category'
      nestedObject:
        $ref: '#/definitions/Object'

  Category:
    type: string
    enum:
      - "a"
      - "b"

  Object:
    type: object
    properties:
      foo:
        type: string
      bar:
        type: string

  SimpleThing:
    x-db:
      AllowOverwrites: false
      AllowPrimaryIndexScan: true
      DynamoDB:
        KeySchema:
          - AttributeName: name
            KeyType: HASH
    type: object
    properties:
      id:
        type: string
      name:
        type: string

  ThingWithRequiredFields:
    x-db:
      AllowOverwrites: false
      AllowPrimaryIndexScan: true
      DynamoDB:
        KeySchema:
          - AttributeName: name
            KeyType: HASH
    type: object
    required:
    - id
    - name
    properties:
      id:
        type: string
      name:
        type: string

  ThingWithRequiredFields2:
    x-db:
      AllowOverwrites: false
      AllowPrimaryIndexScan: true
      DynamoDB:
        KeySchema:
          - AttributeName: name
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
    type: object
    required:
    - id
    - name
    properties:
      id:
        type: string
      name:
        type: string

  ThingWithDateRange:
    x-db:
      AllowOverwrites: true
      AllowPrimaryIndexScan: true
      DynamoDB:
        KeySchema:
          - AttributeName: name
            KeyType: HASH
          - AttributeName: date
            KeyType: RANGE
    type: object
    properties:
      name:
        type: string
      date:
        type: string
        format: date-time

  ThingWithUnderscores:
    x-db:
      AllowOverwrites: true
      DynamoDB:
        KeySchema:
          - AttributeName: id_app
            KeyType: HASH
    type: object
    properties:
      id_app:
        type: string

  # Composite hash keys
  ThingWithCompositeAttributes:
    x-db:
      AllowOverwrites: false
      AllowPrimaryIndexScan: true
      AllowSecondaryIndexScan:
        - nameVersion
      CompositeAttributes:
      - AttributeName: name_branch
        Properties: [ name, branch ]
        Separator: "@"
      - AttributeName: name_version
        Properties: [ name, version ]
        Separator: ":"
      DynamoDB:
        KeySchema:
        - AttributeName: name_branch
          KeyType: HASH
        - AttributeName: date
          KeyType: RANGE
        GlobalSecondaryIndexes:
        - IndexName: nameVersion
          Projection:
            ProjectionType: ALL
          KeySchema:
          - AttributeName: name_version
            KeyType: HASH
          - AttributeName: date
            KeyType: RANGE
    type: object
    required:
    - name
    - branch
    - date
    properties:
      name:
        type: string
      branch:
        type: string
      version:
        type: integer
      date:
        type: string
        format: date-time

  # Composite range keys + three part composites
  TeacherSharingRule:
    x-db:
      AllowOverwrites: true
      AllowPrimaryIndexScan: true
      AllowSecondaryIndexScan:
        - district_school_teacher_app
      CompositeAttributes:
      - AttributeName: school_app
        Properties: [ school, app ]
        Separator: "_"
      - AttributeName: school_teacher_app
        Properties: [ school, teacher, app ]
        Separator: "_"
      DynamoDB:
        KeySchema:
        - AttributeName: teacher
          KeyType: HASH
        - AttributeName: school_app
          KeyType: RANGE
        GlobalSecondaryIndexes:
        - IndexName: district_school_teacher_app
          Projection:
            ProjectionType: KEYS_ONLY
          KeySchema:
          - AttributeName: district
            KeyType: HASH
          - AttributeName: school_teacher_app
            KeyType: RANGE
    type: object
    properties:
      id:
        type: string
      district:
        type: string
      school:
        type: string
      teacher:
        type: string
      app:
        type: string
      sections:
        type: array
        items:
          type: string

  # enum hash key, regular range key
  ThingWithEnumHashKey:
    x-db:
      AllowOverwrites: false
      AllowPrimaryIndexScan: true
      AllowSecondaryIndexScan:
        - byBranch
      DynamoDB:
        KeySchema:
        - AttributeName: branch
          KeyType: HASH
        - AttributeName: date
          KeyType: RANGE
        GlobalSecondaryIndexes:
        - IndexName: byBranch
          Projection:
            ProjectionType: ALL
          KeySchema:
          - AttributeName: branch
            KeyType: HASH
          - AttributeName: date2
            KeyType: RANGE
    type: object
    properties:
      branch:
        $ref: "#/definitions/Branch"
      date:
        type: string
        format: date-time
      date2:
        type: string
        format: date-time

  # Composite enum hash keys
  ThingWithCompositeEnumAttributes:
    x-db:
      AllowOverwrites: false
      AllowPrimaryIndexScan: true
      CompositeAttributes:
      - AttributeName: name_branch
        Properties: [ name, branchID ]
        Separator: "@"
      DynamoDB:
        KeySchema:
        - AttributeName: name_branch
          KeyType: HASH
        - AttributeName: date
          KeyType: RANGE
    type: object
    required:
    - name
    - branchID
    - date
    properties:
      name:
        type: string
      branchID:
        $ref: "#/definitions/Branch"
      date:
        type: string
        format: date-time

  Branch:
    type: string
    enum:
      - master
      - DEV_BRANCH
      - test

  ThingWithDateTimeComposite:
    type: object
    x-db:
      AllowOverwrites: true
      AllowPrimaryIndexScan: true
      CompositeAttributes:
      - AttributeName: typeID
        Properties: [ type, id ]
        Separator: "|"
      - AttributeName: createdResource
        Properties: [ created, resource ]
        Separator: "|"
      DynamoDB:
        KeySchema:
        - AttributeName: typeID
          KeyType: HASH
        - AttributeName: createdResource
          KeyType: RANGE
    properties:
      type:
        type: string
      id:
        type: string
      created:
        type: string
        format: date-time
      resource:
        type: string

  # Composite hash keys - no primary range key
  NoRangeThingWithCompositeAttributes:
    x-db:
      AllowOverwrites: false
      AllowPrimaryIndexScan: true
      AllowSecondaryIndexScan:
        - nameVersion
      CompositeAttributes:
      - AttributeName: name_branch
        Properties: [ name, branch ]
        Separator: "@"
      - AttributeName: name_version
        Properties: [ name, version ]
        Separator: ":"
      DynamoDB:
        KeySchema:
        - AttributeName: name_branch
          KeyType: HASH
        GlobalSecondaryIndexes:
        - IndexName: nameVersion
          Projection:
            ProjectionType: ALL
          KeySchema:
          - AttributeName: name_version
            KeyType: HASH
          - AttributeName: date
            KeyType: RANGE
    type: object
    required:
    - name
    - branch
    - date
    properties:
      name:
        type: string
      branch:
        type: string
      version:
        type: integer
      date:
        type: string
        format: date-time

  ThingWithMatchingKeys:
    type: object
    x-db:
      AllowOverwrites: true
      AllowPrimaryIndexScan: true
      AllowSecondaryIndexScan:
        - byAssoc
      CompositeAttributes:
      - AttributeName: assocTypeID
        Properties: [ assocType, assocID ]
        Separator: "^"
      - AttributeName: createdBear
        Properties: [ created, bear ]
        Separator: "^"
      DynamoDB:
        KeySchema:
        - AttributeName: bear
          KeyType: HASH
        - AttributeName: assocTypeID
          KeyType: RANGE
        GlobalSecondaryIndexes:
        - IndexName: byAssoc
          Projection:
            ProjectionType: ALL
          KeySchema:
          - AttributeName: assocTypeID
            KeyType: HASH
          - AttributeName: createdBear
            KeyType: RANGE
    properties:
      assocType:
        type: string
      assocID:
        type: string
      created:
        type: string
        format: date-time
      bear:
        type: string

  Deployment:
    x-db:
      AllowOverwrites: true
      AllowPrimaryIndexScan: true
      AllowSecondaryIndexScan:
        - byDate
        - byEvironment
        - byVersion
      CompositeAttributes:
      - AttributeName: envApp
        Properties: [ environment, application ]
        Separator: "--"
      DynamoDB:
        KeySchema:
        - AttributeName: envApp
          KeyType: HASH
        - AttributeName: version
          KeyType: RANGE
        GlobalSecondaryIndexes:
        - IndexName: byDate
          Projection:
            ProjectionType: ALL
          KeySchema:
          - AttributeName: envApp
            KeyType: HASH
          - AttributeName: date
            KeyType: RANGE
        - IndexName: byEnvironment
          Projection:
            ProjectionType: ALL
          KeySchema:
          - AttributeName: environment
            KeyType: HASH
          - AttributeName: date
            KeyType: RANGE
        - IndexName: byVersion
          Projection:
            ProjectionType: ALL
          KeySchema:
          - AttributeName: version
            KeyType: HASH
    type: object
    properties:
      application:
        type: string
      date:
        type: string
        format: date-time
      environment:
        type: string
        format: "^[a-zA-Z0-9-]+$"
      version:
        type: string

  Event:
    type: object
    x-db:
      AllowOverwrites: true
      AllowPrimaryIndexScan: true
      AllowSecondaryIndexScan:
        - bySK
      DynamoDB:
        AttributeDefinitions:
        - AttributeName: "pk"
          AttributeType: "S"
        - AttributeName: "sk"
          AttributeType: "S"
        - AttributeName: "data"
          AttributeType: "B"
        KeySchema:
        - AttributeName: "pk"
          KeyType: HASH
        - AttributeName: "sk"
          KeyType: RANGE
        GlobalSecondaryIndexes:
        - IndexName: bySK
          Projection:
            ProjectionType: ALL
          KeySchema:
          - AttributeName: sk
            KeyType: HASH
          - AttributeName: data
            KeyType: RANGE
        TimeToLiveSpecification:
          AttributeName : ttl
          Enabled: true
    properties:
      pk:
        type: string
      sk:
        type: string
      data:
        type: string
        format: byte
      ttl:
        type: integer

  ThingWithRequiredCompositePropertiesAndKeysOnly:
    type: object
    properties:
      propertyOne:
        type: string
      propertyTwo:
        type: string
      propertyThree:
        type: string
    required:
      - propertyOne
      - propertyTwo
      - propertyThree
    x-db:
      AllowOverwrites: true
      AllowPrimaryIndexScan: true
      AllowSecondaryIndexScan:
        - propertyOneAndTwo_PropertyThree
      CompositeAttributes:
      - AttributeName: propertyOneAndTwo
        Properties: [ propertyOne, propertyTwo ]
        Separator: "_"
      DynamoDB:
        KeySchema:
        - AttributeName: propertyThree
          KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: propertyOneAndTwo_PropertyThree
            KeySchema:
              - AttributeName: propertyOneAndTwo
                KeyType: HASH
              - AttributeName: propertyThree
                KeyType: RANGE
            Projection:
              ProjectionType: KEYS_ONLY
          
  ThingWithMultiUseCompositeAttribute:
    type: object
    properties:
      one:
        type: string
      two:
        type: string
      three:
        type: string
      four:
        type: string
    required:
      - one
      - two
      - three
      - four
    x-db:
      AllowOverwrites: true
      AllowPrimaryIndexScan: true
      AllowSecondaryIndexScan:
        - threeIndex
        - fourIndex
      CompositeAttributes:
      - AttributeName: one_two
        Properties: [ one, two ]
        Separator: "_"
      DynamoDB:
        KeySchema:
        - AttributeName: one
          KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: threeIndex
            KeySchema:
              - AttributeName: three
                KeyType: HASH
              - AttributeName: one_two
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: fourIndex
            KeySchema:
              - AttributeName: four
                KeyType: HASH
              - AttributeName: three
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
