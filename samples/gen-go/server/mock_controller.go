// Automatically generated by MockGen. DO NOT EDIT!
// Source: interface.go

package server

import (
	context "context"
	models "github.com/Clever/wag/samples/gen-go/models"
	gomock "github.com/golang/mock/gomock"
)

// Mock of Controller interface
type MockController struct {
	ctrl     *gomock.Controller
	recorder *_MockControllerRecorder
}

// Recorder for MockController (not exported)
type _MockControllerRecorder struct {
	mock *MockController
}

func NewMockController(ctrl *gomock.Controller) *MockController {
	mock := &MockController{ctrl: ctrl}
	mock.recorder = &_MockControllerRecorder{mock}
	return mock
}

func (_m *MockController) EXPECT() *_MockControllerRecorder {
	return _m.recorder
}

func (_m *MockController) GetAuthors(ctx context.Context, i *models.GetAuthorsInput) (*models.AuthorsResponse, string, error) {
	ret := _m.ctrl.Call(_m, "GetAuthors", ctx, i)
	ret0, _ := ret[0].(*models.AuthorsResponse)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockControllerRecorder) GetAuthors(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetAuthors", arg0, arg1)
}

func (_m *MockController) GetBooks(ctx context.Context, i *models.GetBooksInput) ([]models.Book, int64, error) {
	ret := _m.ctrl.Call(_m, "GetBooks", ctx, i)
	ret0, _ := ret[0].([]models.Book)
	ret1, _ := ret[1].(int64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockControllerRecorder) GetBooks(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetBooks", arg0, arg1)
}

func (_m *MockController) CreateBook(ctx context.Context, i *models.Book) (*models.Book, error) {
	ret := _m.ctrl.Call(_m, "CreateBook", ctx, i)
	ret0, _ := ret[0].(*models.Book)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockControllerRecorder) CreateBook(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateBook", arg0, arg1)
}

func (_m *MockController) GetBookByID(ctx context.Context, i *models.GetBookByIDInput) (*models.Book, error) {
	ret := _m.ctrl.Call(_m, "GetBookByID", ctx, i)
	ret0, _ := ret[0].(*models.Book)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockControllerRecorder) GetBookByID(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetBookByID", arg0, arg1)
}

func (_m *MockController) GetBookByID2(ctx context.Context, id string) (*models.Book, error) {
	ret := _m.ctrl.Call(_m, "GetBookByID2", ctx, id)
	ret0, _ := ret[0].(*models.Book)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockControllerRecorder) GetBookByID2(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetBookByID2", arg0, arg1)
}

func (_m *MockController) HealthCheck(ctx context.Context) error {
	ret := _m.ctrl.Call(_m, "HealthCheck", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockControllerRecorder) HealthCheck(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "HealthCheck", arg0)
}
