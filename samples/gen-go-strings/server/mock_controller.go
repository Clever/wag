// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package server is a generated GoMock package.
package server

import (
	context "context"
	reflect "reflect"

	models "github.com/Clever/wag/samples/gen-go-strings/models/v9"
	gomock "github.com/golang/mock/gomock"
)

// MockController is a mock of Controller interface.
type MockController struct {
	ctrl     *gomock.Controller
	recorder *MockControllerMockRecorder
}

// MockControllerMockRecorder is the mock recorder for MockController.
type MockControllerMockRecorder struct {
	mock *MockController
}

// NewMockController creates a new mock instance.
func NewMockController(ctrl *gomock.Controller) *MockController {
	mock := &MockController{ctrl: ctrl}
	mock.recorder = &MockControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockController) EXPECT() *MockControllerMockRecorder {
	return m.recorder
}

// GetDistricts mocks base method.
func (m *MockController) GetDistricts(ctx context.Context, i *models.GetDistrictsInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDistricts", ctx, i)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetDistricts indicates an expected call of GetDistricts.
func (mr *MockControllerMockRecorder) GetDistricts(ctx, i interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDistricts", reflect.TypeOf((*MockController)(nil).GetDistricts), ctx, i)
}
