// Code generated by go-bindata. DO NOT EDIT.
//  memcopy: true
//  compress: true
//  decompress: once
//  metadata: true
//  asset-dir: true
//  restore: true
// sources:
//  /home/ubuntu/go/src/github.com/Clever/wag/server/gendb/dynamodb-local.sh.tmpl
//  /home/ubuntu/go/src/github.com/Clever/wag/server/gendb/dynamodb.go.tmpl
//  /home/ubuntu/go/src/github.com/Clever/wag/server/gendb/dynamodb_test.go.tmpl
//  /home/ubuntu/go/src/github.com/Clever/wag/server/gendb/interface.go.tmpl
//  /home/ubuntu/go/src/github.com/Clever/wag/server/gendb/table.go.tmpl
//  /home/ubuntu/go/src/github.com/Clever/wag/server/gendb/tests.go.tmpl

package gendb

import (
	"bytes"
	"compress/flate"
	"io"
	"os"
	"path/filepath"
	"strings"
	"sync"
	"time"

	"github.com/tmthrgd/go-bindata/restore"
)

type asset struct {
	name string
	data string
	size int64
	mode os.FileMode
	time time.Time

	once  sync.Once
	bytes []byte
	err   error
}

func (a *asset) Name() string {
	return a.name
}

func (a *asset) Size() int64 {
	return a.size
}

func (a *asset) Mode() os.FileMode {
	return a.mode
}

func (a *asset) ModTime() time.Time {
	return a.time
}

func (*asset) IsDir() bool {
	return false
}

func (*asset) Sys() interface{} {
	return nil
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]*asset{
	"dynamodb-local.sh.tmpl": &asset{
		name: "dynamodb-local.sh.tmpl",
		data: "" +
			"\x84\x91\xc1\x6e\xdb\x30\x10\x44\xcf\xe6\x57\x4c\xe4\x22\xb7\x95\x82\xf4\x52\xb4\xc8\xa5\xf5\x31" +
			"\xfd\x82\x22\x48\x56\xe2\xca\xa2\x4a\x91\x02\xb9\xb2\x62\x7f\x7d\x11\xca\x28\xe0\x4b\x7b\xdb\x25" +
			"\x1f\x67\x88\x99\xfd\x5d\xb3\xe4\xd4\xb4\x2e\x34\x12\x4e\x68\x39\x0f\xc6\x64\x51\x90\x18\x33\x72" +
			"\x7a\x6a\x74\x9a\x9b\xc3\x39\xf0\x14\x0f\xdf\x9f\x63\xc7\xbe\x1e\x39\x19\xb3\x87\x8d\x6b\xf0\x91" +
			"\x2d\x74\x10\xd8\x42\x60\xe4\x04\xd7\x23\x48\x27\x39\x73\x3a\x1b\xd7\xe3\x17\xee\x40\x82\xea\xd3" +
			"\xc8\xa9\xc2\x8b\xd1\x41\x82\x01\x80\x72\xf7\xb6\x04\x9e\xe4\x0d\x4f\xa8\x0e\x9c\x56\x17\x2a\xbc" +
			"\xe0\x1b\x0a\xb4\xdb\x43\x07\x97\xb1\x3a\xef\x31\xa7\x38\xcd\x8a\x3e\x26\x8c\x7c\x62\x68\x44\x2b" +
			"\x70\x21\x2b\x7b\x2f\xf6\xd6\x76\x57\x10\x3a\x49\xca\x2e\x6e\x6e\xe2\xb3\x94\x61\x97\x17\x1b\xc1" +
			"\xb3\xd2\x51\x14\xcb\x6c\x59\x05\xf7\xf7\xb8\x39\xbe\xea\x82\xce\xb0\xd2\xf3\xe2\x95\xc6\xb4\xbd" +
			"\xef\xdd\xa6\xd7\x0d\x11\xd5\xe1\x1a\x82\x0b\xc7\x6b\x06\xb6\x25\x5f\x62\xaa\xeb\xaa\x80\xdd\x92" +
			"\x3c\xe8\x19\xf4\x1b\x44\x1f\xf3\xa0\x3a\xe7\xaf\x4d\x93\x3f\xd3\x92\x69\x95\xac\xf4\x58\xf3\xc4" +
			"\x97\x18\x78\xcd\x75\x17\xa7\xe6\x56\xea\xef\xfa\x5a\xd6\x57\xcf\x2a\x59\x6b\xe5\x54\x1f\x2f\xa0" +
			"\x88\x52\xd2\xbf\xa0\xf2\x11\xe5\x04\xba\xbc\x9f\xfa\xff\xf3\xa0\x1f\x1b\x64\x7a\x67\x8c\xbc\x4b" +
			"\xb7\x85\x4e\x1f\x05\x5f\x9b\xa4\x3c\x70\x12\x7b\x68\x41\x2e\xfc\x94\x29\xa6\x33\x68\x8e\x49\xf1" +
			"\xe5\xe1\xe1\xd1\xfc\x09\x00\x00\xff\xff",
		size: 602,
		mode: 0775,
		time: time.Unix(1522879448, 752380614),
	},
	"dynamodb.go.tmpl": &asset{
		name: "dynamodb.go.tmpl",
		data: "" +
			"\xe4\x57\xdf\x8b\xdb\x46\x10\x7e\xb6\xfe\x8a\xa9\x38\x8a\x1d\x6c\xa9\x81\xd2\x87\x2b\x7a\x88\x4f" +
			"\x50\x8e\x40\x38\x9a\x0b\xed\x5b\x58\x69\x47\xf2\xf6\xa4\x5d\x75\x77\x65\x9f\x6b\xf4\xbf\x97\xdd" +
			"\x95\x6d\x29\x92\x7d\xf6\xb5\x0d\x81\x06\x42\x1c\x69\x7e\x7c\x33\xf3\x7d\x3b\xab\x8a\xa4\x4f\x24" +
			"\x47\xa0\x5b\x4e\x4a\x41\x13\xcf\x63\x65\x25\xa4\x86\xa9\x37\xf1\x53\xc1\x35\x3e\x6b\xdf\x9b\xf8" +
			"\x28\xa5\x90\xca\xf7\xbc\x89\xbf\xdb\x41\xf0\xe0\xdc\x3e\x90\x12\xa1\x69\xc2\x52\x50\x2c\x94\x3f" +
			"\xfe\x52\xa1\x5c\xa3\x0c\x69\x62\xde\xe7\x4c\xaf\xea\x24\x48\x45\x19\x92\x8d\x32\x7f\x17\x8a\x3e" +
			"\x2d\x72\x61\xcd\x58\x8a\xe1\x1e\xc9\xe1\x07\xcb\x48\x8a\xbe\x37\xd9\xed\x16\xc0\x32\x20\x7c\xfb" +
			"\x20\x59\x49\xe4\xf6\x3d\x6e\x3f\x29\x54\x31\xd1\xf8\xc8\x4a\x84\xe0\xf7\x78\x79\x27\x78\xc6\x72" +
			"\x05\x4d\xd3\x4f\x96\x8b\x85\xa8\x90\x93\x8a\x85\x4a\xcb\xac\xd4\xbe\x07\xed\x1f\x13\x17\x39\x85" +
			"\x45\xd3\x78\x33\xcf\x0b\x43\x70\x41\x80\x29\xa8\x15\x52\xd0\x02\x52\x89\x44\x23\x10\xe0\xb8\x81" +
			"\x78\x09\x4a\xcb\x3a\xd5\x81\xa7\xb7\x15\xee\xcd\xdd\x33\xd8\x79\x93\x30\x84\xd8\x82\x8f\x97\xef" +
			"\x1e\xee\x7b\x71\x44\x59\xd6\x9c\xa5\x26\xd8\x86\xe9\xd5\xc1\x2e\x80\x7b\x6d\x0c\x25\xfe\x59\x33" +
			"\x89\x34\xb0\x51\xee\x35\xa4\x84\x43\x82\x20\xd6\x28\x25\xa3\xc8\x41\x70\x20\xa0\x49\x52\xe0\x22" +
			"\xd9\x2e\xec\x0f\x48\x88\x62\x2a\xf0\x26\xdd\xac\xbd\xf6\x05\x9d\x37\x9e\x03\x88\x19\xa9\x0b\xfd" +
			"\x20\x31\x63\xcf\x90\xda\x12\x6a\x89\x0a\x08\x54\xee\x99\x49\x54\x14\x2e\x15\x70\x52\xa2\xfa\x97" +
			"\x40\xf6\x32\x2b\x2d\x19\xcf\x7b\x98\x7e\x93\x4c\xe3\x1d\xa9\x48\xca\xf4\xf6\x13\x67\x5a\xf5\xf1" +
			"\x51\x67\x06\x1b\x63\x07\x69\x6b\x08\x9b\x15\x72\x37\x28\xc6\x73\x97\xdc\x21\x6e\xed\x95\x19\xc0" +
			"\xdb\x7f\x84\x79\x04\x19\xe3\xfa\xa7\x1f\x7b\xf0\x7f\x45\x42\x2f\x40\x2f\x91\xd0\xaf\x0a\x7e\x88" +
			"\x6b\x8f\xdd\x28\x40\x12\x9e\x23\xdc\x3c\xd3\xa4\xa5\xf3\x6d\x34\x10\x94\xb1\xbb\xb1\x5a\xb7\xda" +
			"\xbe\x8d\xa0\x22\x2a\x25\x05\xfb\xab\xeb\x19\x7c\x4c\x57\x58\x92\x56\xfe\x16\xf1\x6e\xd7\xf5\x6b" +
			"\x9a\x47\x8b\x6f\xdf\x16\xa2\x99\xe0\x81\x09\x3f\x66\x35\xfa\xd4\x61\x31\xaa\x6d\x1a\xaf\xb1\xa2" +
			"\xfd\x80\x9b\x56\xa6\xea\xa8\x53\x91\xfc\x81\x46\xa7\x59\xcd\x53\x63\x31\x75\x39\x5b\xc9\xce\x60" +
			"\xfa\x26\x5e\xce\xc1\x1e\x6e\x33\xa3\x5c\x96\xb5\xa8\xba\x82\x81\x28\x02\xce\x0a\xf3\x7e\x22\x51" +
			"\xd7\x92\x9b\xff\xb6\x6e\x2a\x30\x61\xfd\xb2\x56\x1a\x54\x85\x29\xcb\xb6\x5d\xf1\xfb\x33\x6f\xd2" +
			"\xf4\xe2\xf6\xd8\x1f\x45\xe0\xfb\x57\x04\xee\x3a\xbb\xd0\x23\xb1\x47\x58\x1a\x45\xf0\x83\x4d\xf3" +
			"\xb2\x25\xbc\x1d\x47\x3c\xa4\xcf\x89\xa0\x23\x86\x2e\xe6\x7f\x4d\xb4\xbe\xd7\x1d\x29\xb1\x30\xae" +
			"\xa9\xf9\x61\x3d\xbb\x34\xb2\xbc\x3c\x08\x73\xc0\x32\xa7\xa5\x2f\x38\xe9\x42\xee\x89\x69\x42\x3b" +
			"\x1c\x27\x28\xca\x32\x38\xed\x7e\x8a\x60\x97\x7a\x8c\xf0\x74\x3f\xb7\x33\x21\x06\xb4\xbb\xc0\x76" +
			"\x94\xb9\x17\xe4\x3a\x43\x98\xeb\xbc\x5e\x22\xe2\x05\x58\xce\x49\xe2\x4a\xb7\x17\xc5\x66\xe1\x74" +
			"\x8e\x27\x6f\xaf\xed\xef\xe3\xa5\xcb\x77\x99\x08\x5e\xa9\x82\x6b\x65\x70\xa6\xfe\xdb\x33\x2d\x9d" +
			"\xb7\x99\xda\x22\x27\xcd\xdc\x50\xb8\x3d\x8b\xe3\x25\xb0\xb2\x2a\xb0\x44\x6e\x36\xd7\x0a\x81\x12" +
			"\x4d\x12\xa2\xd0\xec\x1c\x94\xe6\x4a\x02\xb5\x32\xab\x6e\xcf\x5f\xb3\xdf\x94\x16\xd2\x99\xb6\x37" +
			"\xab\xc3\x4d\xcb\x0c\xea\x9b\x3a\x3c\xce\x9c\x0b\x17\x2d\xac\x35\x91\xf0\x19\x68\x12\xdc\x1f\xfa" +
			"\x11\x41\xbc\xdc\xb9\xfe\xdd\xd9\x3d\x66\x1d\xd5\x71\xa9\xed\x2f\x63\xaa\xdd\x67\x53\x0a\xf1\x72" +
			"\xd6\x33\x9e\xa6\xda\x5e\xe6\xcc\xb5\x3d\xb8\x73\xff\xce\xdc\x3e\xf9\xe6\x5a\xc8\x32\x03\xcc\x58" +
			"\xd0\xe0\x8c\x06\x5d\xf9\xa6\xb0\xd9\xcf\xd6\xe1\xbb\xc1\x36\x46\x29\xbf\x14\x5d\x67\x9f\x9a\x76" +
			"\x5f\x58\xf8\xab\xea\xbe\xae\xec\x30\x84\x8f\x64\x8d\x83\x7d\xa3\xc8\xda\x5e\x5c\x86\x8b\x48\xf4" +
			"\x04\xd4\x9f\xfd\x58\xa8\x31\x0e\xcc\xa1\x04\xf7\x91\x36\x58\x56\x1d\x7a\xb4\x3d\x3b\x3b\x0e\x75" +
			"\x22\xe3\x1c\xca\x59\xab\xfe\x5f\x50\x0f\xaa\x90\xa8\x25\xc3\x13\x25\x66\x52\x94\x67\x8a\x1c\x89" +
			"\x37\x5e\x63\x8f\xe0\x9f\xe7\x70\x53\x3d\x99\x49\x74\x26\x77\xf8\xdc\x7a\x8f\x5b\x37\xc5\x23\x73" +
			"\xab\xa7\x77\x5a\xcb\xf6\xe9\x6d\x04\x8c\x53\x7c\x1e\x8e\x3d\x78\x90\xa2\x42\xa9\x19\x2a\xe3\x13" +
			"\x18\x27\x96\xd4\x1a\x7b\x3a\x38\x4e\x7f\xc4\xc4\x74\x20\x17\x8f\xe6\x84\xeb\x67\x6d\x9a\xf9\x91" +
			"\xc5\xf6\x7b\x14\xa6\x6f\x4e\xcc\xad\x7b\x6d\xbd\x64\x70\xf9\x78\x17\xe7\xfd\x8d\x74\x4d\xd7\x5e" +
			"\x2e\xb4\xbb\x24\xdc\xe7\x75\xbb\x1f\xb0\x40\x3d\xd4\x00\xb5\x8f\x5f\x43\x91\xf1\x80\xff\x1f\x96" +
			"\x5c\x25\x61\x7a\xb2\x59\x5f\x95\x0c\x00\x00\x86\x10\x9d\x53\xfb\xef\x00\x00\x00\xff\xff",
		size: 4750,
		mode: 0664,
		time: time.Unix(1523318135, 840072000),
	},
	"dynamodb_test.go.tmpl": &asset{
		name: "dynamodb_test.go.tmpl",
		data: "" +
			"\x94\x54\xc1\x6e\xe3\x36\x10\x3d\x93\x5f\x31\xab\xc3\x42\x0a\x1c\x6a\xb7\xa7\xc2\x45\x0e\x8d\xdd" +
			"\xa2\x01\x76\xb3\x41\x9c\x62\x8f\x05\x4d\x8e\x64\x22\x12\x29\x90\xa3\x75\xd2\xc0\xff\x5e\x90\x92" +
			"\x65\xc5\xdd\x36\xad\x00\x09\x14\xf9\x66\x38\xef\xf1\x0d\x3b\xa9\x1e\x65\x8d\xa0\x9f\xad\x6c\x9d" +
			"\xde\x72\x6e\xda\xce\x79\x82\x9c\xb3\x6c\xfb\x4c\x18\x32\xce\x32\xe5\x2c\xe1\x13\xc5\xa1\x71\xf1" +
			"\xeb\xc2\xf0\x2d\xf1\x09\x55\x1c\x06\xf2\xc6\xd6\x69\x96\x30\x90\xb1\x75\x1a\x9a\x16\x33\xce\x59" +
			"\xf6\xf2\x02\xe2\x6e\xd8\xea\x56\xb6\x08\x87\x43\x19\xd0\x7f\x43\x5f\xea\x6d\xf6\xc6\x7a\x19\x13" +
			"\xa6\xcc\xb5\xa1\x5d\xbf\x15\xca\xb5\xa5\xdc\x87\xf8\x5e\x06\xfd\x78\x59\xbb\x38\x7c\x13\x50\x2a" +
			"\x8f\x1a\x2d\x19\xd9\xfc\x07\x70\xc0\x10\x8c\xb3\xff\x0e\x8c\x35\x1a\x85\xe5\x51\xbd\x8c\x17\x9c" +
			"\x57\xbd\x55\xf0\x80\x81\xd6\x69\x76\x7d\xbd\x21\xe7\x31\x27\xb8\x18\x95\x11\x0f\x05\xbc\x70\x56" +
			"\x96\x10\x3a\x63\xa1\xef\x26\xf5\xa1\x71\x4a\x36\x9c\x45\xe0\x8a\x9e\x16\xa0\xa4\x55\xd8\xc0\xf2" +
			"\x0a\xc6\x23\x10\x5f\x0d\xed\x56\x69\x36\x3f\x4e\x5d\x4b\xf5\x58\x7b\xd7\x5b\x9d\x17\x05\x67\x1a" +
			"\x2b\xf4\x63\x64\x5e\x70\xa6\x5a\x1d\x13\xc4\x93\x12\x2b\xd7\xb6\xd2\xea\xd5\x10\x99\x4f\xfb\x64" +
			"\x62\xe2\x70\x99\x6a\x10\x61\x97\x15\x9c\x7d\x93\x1e\xb4\xde\x7e\x8a\x53\x5f\x7a\xea\x7a\x82\x64" +
			"\x0a\x71\xdd\x57\x15\xfa\x94\x5c\x6c\x48\xbb\x9e\xe0\x0a\x8c\x13\x9f\xfb\x86\xcc\x57\x6f\x08\x7d" +
			"\xee\xc2\xb8\xb4\x80\xf7\xaf\x93\x14\x53\x20\x7a\xff\x4f\x81\xe8\xfd\xf7\x02\x4d\x05\x31\x28\x4a" +
			"\x92\x52\x48\x4f\x79\xf1\x53\x9a\x7b\x77\x05\xd6\x34\x51\x5b\x46\xe2\x57\x49\xb2\xc9\xd1\xfb\x82" +
			"\xb3\x03\x4f\x72\xef\xa5\x21\xa8\x9c\x3f\xd3\x1b\xc8\x81\x1b\xc8\xd1\x0e\x41\x39\xef\x51\x11\x84" +
			"\x98\xba\xef\xa0\x71\x35\x67\x31\xea\xdd\x68\x72\x11\xe5\x93\xc6\x86\xfc\x75\x71\x62\x93\xd6\xf3" +
			"\x62\x01\xd9\x8d\x35\xd1\x68\xe6\x4f\x63\x6b\x38\x1a\x01\x12\x18\xf6\x86\x76\x69\xa7\xca\x35\x8d" +
			"\xdb\x47\x84\x72\xb6\x32\x75\xef\x25\x45\xcf\x15\x03\x05\xd3\xa2\xd8\x34\x88\x5d\xfe\x11\x2e\x60" +
			"\xf8\x45\xe5\xac\x1e\x19\xe9\x31\xed\xcf\x77\x37\x51\x8e\x23\x29\x71\x8b\xfb\x7c\xb4\xaf\xf8\xdc" +
			"\x07\x9a\x7e\x6e\x71\xbf\x19\x86\xd1\x45\x5f\xba\xb8\x59\x98\x56\xc7\xff\xb8\xf5\x2a\x95\xb3\x04" +
			"\xb9\x4f\x64\x2b\x53\xc7\x59\x76\x8f\xb5\x71\x76\x09\xe9\x89\x6b\x23\xe1\x4c\x3b\x0c\x96\x5a\x49" +
			"\x84\x3e\x2b\x16\x11\xfb\x8b\xd5\x9d\x33\x96\x96\xe7\xd8\x1d\x51\xb7\x2c\xcb\xa4\xfc\xce\x05\x5a" +
			"\xfe\xf8\xe1\xc3\x0f\x19\x94\x17\xa0\xb1\x92\x7d\x43\xf0\xda\x89\x90\xae\xa3\x8b\x72\x48\xbb\x3a" +
			"\xf5\xf0\x12\x66\x0d\x9d\xb8\x91\x24\xa3\x66\x88\x3c\x33\x3a\x5b\x40\x16\x50\x79\xa4\x38\x22\xf7" +
			"\x88\x76\xa8\xf0\xb0\xe0\xec\x50\x14\x05\x1f\xda\x2d\x88\xfb\xde\xae\xaf\x63\xdf\x86\x9c\x16\x10" +
			"\xbb\x38\x2f\x40\x6f\xc5\x8d\x25\xf4\x95\x54\x98\x4e\xa5\xf3\x58\x99\xa7\xa8\x77\x26\x7b\x72\xad" +
			"\x24\xd4\x97\xa7\x2b\x8f\x35\x26\xd0\x83\xdc\x36\x18\x06\x53\x2c\x8e\x6e\x9d\x9d\x96\xf8\x34\x81" +
			"\x52\x3b\x9f\x77\xe3\xfb\xe9\x28\x4f\xc0\x1b\xdb\xf5\xf4\x72\x28\x38\x3b\x76\xc0\xcc\xed\x67\x76" +
			"\x67\x07\xce\x92\x63\xff\x58\x00\xc5\xe8\x74\xa7\x2e\xaf\xc0\x4b\x5b\x23\x9c\x97\x28\x1e\x8e\x98" +
			"\x30\x64\x33\x15\x1c\xad\xfe\x9b\x0c\x77\x89\x71\x7e\x31\x65\x5a\xc0\x20\xc2\x60\x53\x36\xf7\xa1" +
			"\x58\x63\x83\x84\x29\xe1\x1b\xd4\x66\xc8\x81\x5b\xca\xc5\xa6\x5a\x96\xa7\xd2\xd3\xc9\xb3\xc4\x3d" +
			"\x51\x8b\xaf\x9e\x84\x8d\x76\x9f\x99\x74\x7d\xaa\x66\x74\xea\xf4\xcc\x0a\x4d\x29\xd7\x83\xe1\x06" +
			"\x82\xaf\xc1\x03\xc3\x39\xea\x1e\xa5\x5e\xc9\x4e\x2a\x43\xcf\xbf\x5b\x43\x61\x09\xf0\xf1\xc3\x1c" +
			"\x91\x6e\xaf\x33\xc8\x80\xf8\x1f\xc7\x76\xba\xde\xb4\x58\x79\x94\xa3\x44\xe1\x28\xe1\xdf\xaf\xba" +
			"\xef\x65\xf1\x48\xbd\xb7\xa0\xa3\xc5\xf9\x81\xff\x15\x00\x00\xff\xff",
		size: 2022,
		mode: 0664,
		time: time.Unix(1522879448, 752380614),
	},
	"interface.go.tmpl": &asset{
		name: "interface.go.tmpl",
		data: "" +
			"\xe4\x55\xc1\x6e\xdb\x38\x10\x3d\x9b\x5f\x31\x10\x5c\xc0\x5e\xc4\xd2\xdd\x80\x0f\x69\x9d\x66\x8b" +
			"\x2e\x9a\x00\xc9\x02\x7b\x0b\x68\x6a\x24\x13\x91\x48\x81\x1c\x39\xd6\x0a\xfc\xf7\x05\x45\x69\xa3" +
			"\xd8\x4a\xd0\x14\xbd\xc5\x17\x4b\xe2\xf0\x71\xe6\xbd\x37\xc3\x8a\x8b\x47\x9e\x23\xa4\x3b\xc6\x64" +
			"\x59\x69\x43\xb0\x60\xb3\x48\x68\x45\x78\xa4\x88\xcd\xa2\xac\xa4\x88\xb1\x59\xd4\xb6\x10\xdf\x86" +
			"\xe8\x1f\xbc\x44\x70\x2e\x29\x75\x8a\x85\x8d\xd8\xac\x6d\x57\x20\x33\xe0\xaa\xb9\x35\xb2\xe4\xa6" +
			"\xf9\x8e\xcd\xdf\x16\xed\x96\x13\xde\xcb\x12\x21\xfe\x67\xfb\xf9\x8b\x56\x99\xcc\x2d\x38\xc7\x66" +
			"\x51\x2e\x69\x5f\xef\x62\xa1\xcb\x24\xd7\x2b\x5d\xa1\xe2\x95\x4c\x2c\x99\xee\x38\xe8\x7f\x1e\x17" +
			"\x55\x0a\x2b\xe7\xd8\x92\xb1\x24\xc9\xf5\x3a\x47\x85\x86\x13\xc2\xfc\xfa\xe6\xf6\xf2\xfe\xcf\x64" +
			"\x27\x55\x52\x6a\xf1\x98\xa3\x82\x95\xd5\xb5\x11\xb8\x99\x5f\xdf\x7c\xfd\xf6\xd7\x15\xac\x52\xb4" +
			"\x24\x15\x27\xa9\xd5\xc6\x07\x3d\xa4\xbb\x38\xd7\xb0\xea\xeb\xde\xf8\xba\x93\x04\xbe\x29\x42\x93" +
			"\x71\x81\x90\x69\x03\xd2\xbf\x71\x41\x52\xe5\xf0\x24\x69\x0f\xb4\x47\x68\xdb\xf8\x0e\xcd\x41\x8a" +
			"\xae\x7c\xe7\x20\xe5\xc4\x77\xdc\x62\xcc\xa8\xa9\x70\x04\x21\xff\x7f\x6a\xd9\x50\x85\xe1\x2a\x47" +
			"\x98\x1f\xd3\x5d\xa0\x01\xd6\x9b\x53\x52\x86\xd0\x79\x47\x6b\xc7\xf1\x7a\x03\x15\xb7\x82\x17\xf2" +
			"\xdf\xf1\xe6\xf8\x4e\xec\xb1\xe4\xbd\x0c\xdd\xc6\x24\x81\x3b\x7e\xc0\xb6\x1d\x6f\x77\x0e\x2c\x3f" +
			"\xa0\x05\x0e\x67\x0b\xa4\xbb\xaa\x9e\x8b\xf0\x28\x53\x10\x0b\x41\x47\xe8\xfd\x10\x7f\x09\xff\x17" +
			"\x50\x42\x10\x3f\x3e\x0d\x5f\x02\x1a\xa3\xcd\x90\xd4\x35\xd2\xd9\xd1\x06\xc9\x48\x7c\x25\xaf\xcc" +
			"\xe8\x72\x22\xb3\x09\x9c\xc9\xc4\xd8\xb3\x71\x7a\xca\x1f\x2e\x60\x5e\x3d\x7a\x2a\x47\x04\x6e\x1b" +
			"\xc5\x4b\xbd\xfd\x1c\x7f\xc7\x26\x90\x39\x10\xd9\x6b\x50\x3d\x5e\x12\x99\x7e\x69\xbd\x01\xa9\x52" +
			"\x3c\x9e\x4b\x10\xdf\x1a\x5d\xa1\x21\x89\xd6\xef\x89\xfd\x26\xb9\xab\x09\xc7\xda\x04\x48\xc1\x4b" +
			"\x0c\x3a\x4e\xc4\x79\x1e\x72\x7d\xef\x7d\xf4\xf2\x68\xe7\xc6\x25\x0d\xbd\xe0\xdf\x97\xb0\xf8\xe3" +
			"\x15\x0d\x2e\x82\x06\xcb\x41\x84\x2d\x16\x48\xe7\xde\x48\xbb\xcf\xef\x51\x61\x1a\xe8\xc3\x0b\x11" +
			"\x1c\xdf\x37\x70\xb7\xe6\x1c\x73\x8c\xfd\x64\xe3\xff\x52\xd3\x27\x09\x5c\x19\xf3\x42\x0a\xe7\x7e" +
			"\x68\xfa\xaa\x6b\x95\x82\xb4\xbe\xcb\x6a\xa3\x30\x85\xa7\x3d\xaa\x17\x5a\x42\xc6\x65\x61\xfd\x04" +
			"\xc8\xa4\x4a\x4f\xe5\x77\xae\x1f\x68\x6f\xc0\x5b\x32\xb5\x20\x68\xc3\xe4\x7f\xbf\xbe\xb3\xdf\x2a" +
			"\xed\xac\x6d\xc7\x8c\xbd\x4f\xd5\x90\xcb\xb3\x66\x07\x6e\xe0\x21\x28\x0a\x9b\x37\x38\x68\x1d\xeb" +
			"\x35\xd0\xa6\xe7\xda\x77\x52\x8a\x56\x18\x59\xf9\xfb\x06\x74\xd6\xd1\xde\x61\xc5\x2c\xab\x95\x80" +
			"\xc5\x5b\xb4\x2e\x03\xda\x62\xe9\xf9\xf5\x77\x4f\xcb\x66\x01\x19\xb2\x92\xe2\xbb\xca\x48\x45\xd9" +
			"\x22\x12\xba\x2e\x52\x50\x9a\x82\x7e\x27\x68\x6b\xf8\xf4\xe9\x10\x5d\x00\x2e\x07\x0b\xca\xac\x0b" +
			"\x1e\x11\x7b\x59\x14\xfa\xe9\xe6\x80\xe6\xc9\x48\x3f\x01\xa6\xfd\x04\xce\x5d\x16\x06\x79\xda\x5c" +
			"\x1d\xa5\x25\x3b\xe1\x2a\xd3\xf8\x3c\x49\x83\x1e\xc0\x26\xa6\xc9\x2b\x7e\x3a\x83\xff\xb0\xae\x3a" +
			"\x65\xe2\xb7\x79\xeb\x14\xf8\x67\x1d\x76\x76\x1f\xf0\x80\x02\xd8\xc1\xbc\xb0\xd8\xa8\xd0\xd1\xe3" +
			"\x7f\x01\x00\x00\xff\xff",
		size: 2648,
		mode: 0664,
		time: time.Unix(1523318012, 580072000),
	},
	"table.go.tmpl": &asset{
		name: "table.go.tmpl",
		data: "" +
			"\xec\x58\x5b\x6f\xdb\x3a\x12\x7e\x96\x7e\xc5\xac\x36\xa7\xb0\x03\x47\x3e\x0f\x8b\x7d\xf0\x41\x1e" +
			"\xdc\x24\x6d\x83\xa2\xd9\xa0\x49\xb7\x0b\x14\x45\xca\x48\x63\x9b\xb0\x44\x6a\x49\xca\xb1\xd7\xf0" +
			"\x7f\x5f\x0c\x75\xb1\x64\x49\xb6\x1b\xb4\x9b\x02\x7b\x0c\xa4\x76\xc9\x99\xe1\x5c\xbe\xb9\x90\xeb" +
			"\xf5\x19\x9c\xc4\x32\xc4\xe8\x86\xc5\x08\xa3\x73\x48\x98\x0e\x58\xc4\xff\x83\xe0\xff\xeb\xf2\xf5" +
			"\x85\x14\x13\x3e\xf5\xef\x82\x19\xc6\xcc\x92\x6c\x36\xae\x65\x5a\x86\x8f\xd9\x26\x31\x6d\x49\x69" +
			"\x3f\x61\xc1\x9c\x4d\x11\xc2\x95\x60\xb1\x0c\x1f\x5d\x97\xc7\x89\x54\x06\x7a\xae\xe3\x05\x52\x18" +
			"\x5c\x1a\xcf\x75\xbc\x49\x6c\x3c\xd7\x75\xbc\xf5\x1a\xfc\xdb\x8c\x27\x3f\x62\x68\x55\xd2\x5e\xfb" +
			"\xa6\x46\xb5\x40\x35\x0c\x1f\x69\x7f\xca\xcd\x2c\x7d\xf4\x03\x19\x0f\xd9\x93\xa6\xbf\x33\x1d\xce" +
			"\xcf\xa6\x92\x7e\x7a\x2e\xe4\x1f\xd2\x99\x4f\x40\x48\x53\x51\xdd\x1f\x47\x91\x7c\xfa\xc7\x02\xd5" +
			"\x93\xe2\x06\x35\x29\x7f\x40\x22\xfd\xa1\x52\x75\xc1\x28\xc2\x43\xac\xa4\x33\x0f\x70\x58\xf8\xc4" +
			"\xfb\x2e\xea\xf2\x07\x33\x46\xf1\xc7\xd4\xe0\x33\xf9\xf9\x84\x05\xc4\x9b\xbb\x23\x51\x3c\x66\x6a" +
			"\xf5\x1e\x57\x9f\x34\xea\x4b\x66\xf0\x9e\xc7\x58\x0d\xee\xae\x59\x53\x79\x26\x13\x14\x2c\xe1\x43" +
			"\x6d\x94\x8d\x60\x8b\x27\xfa\xae\x3b\x1c\xc2\x7a\x5d\xc5\xd6\x66\x73\xcf\x1e\x23\x04\x85\x89\x42" +
			"\x8d\xc2\x68\x30\x33\x84\x54\xa3\x3a\x0b\xec\x61\xa9\xb2\x04\x89\x92\x09\x2a\xc3\x51\x83\x9c\x58" +
			"\x9a\x5d\x41\x60\x88\xd0\x77\xcd\x2a\xc1\x8e\x53\xb4\x51\x69\x60\x60\xed\x3a\x97\xd6\xf4\xcb\xd7" +
			"\xe3\xdb\xeb\x42\xd3\x9a\x37\xfc\x0a\x81\xeb\xdc\x2a\x9c\xf0\x25\x54\x3f\xda\x28\x2e\xa6\xae\xf3" +
			"\x11\x59\x78\xc1\x12\x16\x70\xb3\xfa\x24\xb8\xd1\x00\x5c\x98\xbf\xff\xcd\x75\x3e\x13\x7a\xea\x5b" +
			"\xd9\xce\xc6\xfa\x21\x0c\x1f\x77\x95\xbc\x2d\x1d\xbf\xeb\x8f\x3c\x24\x30\xc7\x15\x99\xcf\x9a\xc6" +
			"\x73\x01\x85\xca\xb9\x0b\xf6\x1f\xb0\x75\x05\x45\x68\x78\x0a\x91\x94\x09\xc8\x05\xaa\xda\x61\x25" +
			"\xb4\x34\x30\x11\x02\x0b\x43\xd2\x27\x06\xa6\x61\xc2\x31\x0a\xc9\x26\xab\x61\x2e\xef\x74\x48\xd8" +
			"\x20\x91\x8a\x89\x29\xc2\xc9\xc3\x00\x4e\x92\x39\x95\x83\x4a\x86\x95\x9a\xbe\xc7\x55\x56\x45\xa0" +
			"\x60\x3b\x49\xe6\x63\x63\x54\xbe\x3a\x3a\x07\x2e\x42\x5c\x56\x99\xb3\x2d\xff\x76\x0b\x88\x93\x64" +
			"\xee\x8f\x0b\x45\x8b\x7a\xe4\xac\xd7\x95\xb2\xd5\x46\x42\x4e\x9c\xca\x7b\xf2\x55\xfd\xd4\xcd\x06" +
			"\xbe\x95\xb9\xb5\x18\x51\xb5\x69\xe3\xf7\xbe\x65\x2a\x13\xbc\xcf\x36\x9b\xee\xb8\x56\xa3\xd9\x12" +
			"\x3a\xa6\x41\x1b\xa9\x30\x3c\x2e\x88\x95\xd0\xed\x0d\xb1\xf5\x40\x9d\x33\x2b\xa0\x7e\x63\x7d\xd7" +
			"\xda\x90\xe9\x19\x2a\xeb\xb7\x2a\x9d\xf7\x8d\x6c\x9c\xa4\x22\x80\x9e\x69\x4f\xb1\x3e\x08\x16\x63" +
			"\xaf\x9f\xe7\x07\x29\xa9\xd0\xa4\x4a\xc0\x24\x36\xfe\x5d\xa2\xb8\x30\x93\x9e\xf7\xdb\x6f\xfa\xac" +
			"\xfb\x1c\xed\x0d\xc0\xf8\x59\xd2\xf5\x8f\x38\x32\x50\xc8\x0c\xf6\x02\xb3\x84\xbc\x91\xf8\x17\xd9" +
			"\x77\x1f\x50\x29\xa9\x48\x0d\x3e\x81\x87\x01\xfd\x97\x40\x65\xaa\xf9\xed\x5f\x58\x7e\x2b\xec\x33" +
			"\x37\xb3\x9c\x97\xe4\x0d\xe0\x55\xe1\x9a\x2a\xd5\xb5\x48\x52\xb3\x76\x1d\xa7\x84\xc4\x25\x4e\xb8" +
			"\xe0\x86\x4b\xa1\x47\xf0\xe5\xeb\x69\xc9\xd5\x42\xb1\x76\xa1\xe3\xf3\xbc\xbc\xd9\x27\xed\x87\xa5" +
			"\xd3\xd1\x87\xd8\x7c\xda\x1e\x54\xdd\xf2\xed\xde\xef\x87\xc4\xf1\x09\xe0\xbf\x5b\x84\x7a\x19\xa6" +
			"\x3c\x9b\xdd\x8e\x43\xfe\xaf\x44\x80\x14\x1d\x01\x7b\xd2\xfe\x9d\x25\xeb\x79\xb9\x6a\xcd\xbc\xed" +
			"\x0f\xea\xac\x24\xbd\xc6\x5a\x46\xef\x2e\x60\x11\x53\x35\xc2\xbb\x8c\x7b\x33\xd8\x6b\x03\x46\x1a" +
			"\xbb\x0d\xe1\xc2\xe0\x14\xd5\x0b\x5b\x72\x73\x9c\x25\x79\x75\x3b\x44\x63\x4d\xd9\x90\xc4\x12\x9c" +
			"\xf5\x4c\x28\x97\xaf\x22\x8c\x51\x98\xff\x65\x1a\x94\x91\x20\x96\x2c\x06\xef\xc6\x77\xef\x7e\x58" +
			"\x00\x72\xa9\xa3\xfc\xc8\xb6\x00\xe4\x24\xef\x98\x9e\x3d\x03\x41\x5b\xbd\x3f\x8e\x6f\xde\x5e\xbd" +
			"\x80\xe2\x1f\x29\x20\x3f\x09\x31\xb7\x4a\x2e\xb8\xe6\x52\x60\x78\x3f\x53\x32\x9d\xce\x92\xd4\x8c" +
			"\x2a\xb5\xb7\x95\xc0\x1a\xdf\x98\xbf\x46\x99\x15\xd7\x34\x6a\xf5\x8c\xdf\xd8\xcf\x4c\x68\x0e\x67" +
			"\xa3\x1a\x5b\x73\xdf\xf2\x59\x6d\x6d\x0b\x68\xb8\xda\xf8\x59\xe7\x23\xba\x4d\xff\x0f\xdb\x69\xfe" +
			"\x72\x0e\x82\x47\xd4\x7d\x8a\x2e\x88\x4a\xb9\xce\xa6\x6c\x8a\x82\x47\x47\xf4\x37\xcd\x16\xb8\xbb" +
			"\xd5\xd6\xed\x06\x10\x77\xb5\xf8\x4a\x23\x0c\x99\x61\x65\x23\x44\x11\xc8\xb0\x29\x3c\xee\xdb\x86" +
			"\xb9\xd7\x86\x9d\xfc\x3a\x70\x81\xca\x7b\xef\x6e\xeb\xbd\x4d\xcd\xb5\xc1\x78\x4f\xdb\xcd\x29\xca" +
			"\x96\x7b\xd8\xfb\x0e\xd1\xe7\x88\xb6\xc6\x52\x40\xdc\xaa\xf6\x8d\x3c\x7b\x79\x0d\x9d\xab\x25\xcd" +
			"\x88\x84\xf1\x5a\xae\xea\x11\xc4\x2c\xf9\x92\xb5\xbe\xaf\xa7\xd9\xb7\x45\xfe\x33\x87\x6c\xc7\xf1" +
			"\xfe\xba\x5e\x43\x9a\x24\xa8\xda\x4b\xc3\x6e\x05\xd9\x57\x40\x9a\xb9\x7c\x21\x45\x68\xc7\x9c\xad" +
			"\x41\x75\x81\x8d\xba\x50\xb5\x84\x1f\x69\x49\x5b\x7d\x29\xee\xaf\x82\xe4\xd8\x31\x03\xc6\x37\x97" +
			"\x94\x54\x5d\x15\xc9\x29\xaf\x37\x0f\x42\x9a\x07\x5c\x72\x6d\x74\x6f\xbf\x7b\xfa\xed\xe7\x1e\x2a" +
			"\x7a\x5e\x3f\x87\x61\x33\xad\xf8\x84\xfc\x73\xa5\xd4\x00\xa4\x35\x1d\x95\xf2\x7b\xd9\x93\x82\x7f" +
			"\x45\x69\xdb\xff\x83\x76\x6c\xd4\x4b\x62\xff\x42\x86\x34\x68\x9f\x9f\x97\x37\x57\x22\xa6\xd5\x32" +
			"\x04\x2c\xba\x98\x61\x30\x7f\xc3\x78\x84\xe1\xd5\x32\xc0\x84\x56\x33\x41\x45\x3e\x64\x6c\xbb\x15" +
			"\x60\x1c\x29\x64\xe1\xea\xca\x7a\x24\xa3\x7f\x3e\xe0\x9c\xc3\x77\xb1\x11\xc4\xfe\x41\xa2\xc1\x56" +
			"\x8f\x12\x73\x8e\x63\xff\xb5\xf0\xdb\x5b\x66\x5b\xba\xcf\xe1\xca\x3b\x45\x73\x54\xe1\xfd\x65\xae" +
			"\xbc\x3b\xd2\xde\xca\x62\x1c\xef\xb8\xe8\x66\x3c\x01\x8b\x71\xef\x35\xb9\x4d\xa8\x8d\x47\x15\xfa" +
			"\x7d\xe8\x9d\x76\xb4\x9f\x41\xd6\x7e\xfa\x04\xbd\x39\xae\xca\xf6\xd3\x78\xc1\xf2\x3f\x30\xa5\x67" +
			"\x2c\xfa\xc0\x92\xde\xde\xdb\x2d\x61\xf2\xb9\x80\x3c\x02\x8d\xeb\xf5\x7e\xa7\x0c\xdc\x3a\x0e\x37" +
			"\xfb\x1a\xa6\xe0\xd1\xa0\x02\x49\xdd\x71\x0d\x7d\x8b\x87\x3a\x4d\x4e\x51\x76\x9a\xf7\xb8\x2a\x26" +
			"\x37\xf2\xea\x91\xb3\xc9\x91\x9a\x5a\xb2\x08\x45\x4f\xa1\xf6\xe9\x58\x5b\x6b\x7e\x6f\x90\xb7\x17" +
			"\x90\x1b\x69\xde\xc8\x54\x84\xbf\x58\x9c\x28\x02\x64\xda\x82\xa9\xee\x61\xa9\x74\x10\x21\x14\x5b" +
			"\x07\xa4\xc2\x27\x03\x78\x15\x77\x0e\x7b\x75\x6f\xe6\x8b\xaf\xe2\xc1\x91\x63\x5f\x88\x11\x1a\xfc" +
			"\xb3\xfe\x1c\x5f\x7f\xca\x19\xf7\xff\xaf\xc6\x14\xe5\xa5\x63\x8a\xbd\xb4\x58\x3a\x50\x5e\xb6\x44" +
			"\x3f\xaf\xc2\xb4\x5f\x80\x86\xc3\x8e\x9b\x48\xbe\xdc\xf5\x6e\xca\xca\xf7\x52\x9a\x92\xed\xd3\x78" +
			"\xe1\x44\x58\xb0\x28\x45\xed\x67\x59\xd6\x75\xcf\xe9\xbe\x2f\xf5\xaa\x63\x77\xf3\x39\xef\x9f\x24" +
			"\xbd\xda\xd6\x8a\x71\xea\x3b\xd1\x46\xae\xd9\x0b\xc2\x11\xbc\x24\x46\x8f\x9c\xca\x9a\xd7\x80\x5d" +
			"\x8d\x47\x10\x67\xd0\xc8\x5f\xc9\x5b\xcb\x2a\x18\xc5\x84\x8e\x98\x69\x0f\x78\xf3\x95\x1c\x8c\x6c" +
			"\x27\x54\x69\x60\xf2\xd0\x77\x54\xf0\x18\x8e\x0a\xb0\x4c\x0d\x9c\x1e\xbe\x54\x53\x3f\x69\x7b\xab" +
			"\x6f\x59\xab\x75\x97\x06\x5a\x3e\x89\x78\x8b\x17\x6a\x2f\x2d\x12\x0e\xbe\x2e\x9c\x92\xd6\xe7\x6d" +
			"\x87\xb7\xf4\xba\x5a\x26\xfe\x37\x00\x00\xff\xff",
		size: 7675,
		mode: 0664,
		time: time.Unix(1523318075, 720072000),
	},
	"tests.go.tmpl": &asset{
		name: "tests.go.tmpl",
		data: "" +
			"\xec\x56\xd1\x6b\xfb\x36\x10\x7e\xb6\xff\x0a\x61\xf2\x60\x0f\x47\x61\x7d\x0c\xf4\xa1\x59\xda\x52" +
			"\x0a\x5d\x69\xb3\xb1\xb7\xa2\xd8\x17\x57\xc4\x96\x5c\xe9\xdc\xc6\x33\xfe\xdf\x87\x6c\x27\x73\x1c" +
			"\x65\x6b\x43\xf6\xb0\x1f\x35\x04\x82\x4e\x77\xfa\xee\xfb\xee\x4e\xca\x59\xb4\x66\x09\x10\x04\x8d" +
			"\xda\x75\x79\x96\x4b\x85\xc4\x77\x1d\x2f\x92\x02\x61\x83\x9e\xeb\x78\xc6\xc8\x45\xe2\xb9\x4e\x55" +
			"\x8d\x09\x5f\x11\x26\xca\x47\xc5\x33\xa6\xca\x7b\x28\x7f\xd3\xa0\xe7\x0c\x61\xc1\x33\x20\xf4\x8f" +
			"\xf9\xec\x17\x29\x56\x3c\xd1\xa4\xae\x8d\x2f\xcf\xc0\x73\x49\xf7\x19\x7f\x10\xb1\x31\xb9\x8e\x57" +
			"\x55\x84\x3e\xb6\x00\x1e\x58\x06\xa4\xae\x27\x99\x8c\x21\xd5\x9e\xdd\xa8\x41\xbd\x83\x9a\xc4\x4b" +
			"\x63\x4f\x38\xbe\x16\x4b\x1a\xc9\x6c\xa2\x51\x01\x46\xaf\x6a\xd2\x00\x5d\x95\x13\x05\x6f\x05\x57" +
			"\x70\x12\xe0\x5e\xdc\x44\x8e\x65\x0e\x82\xe5\xdc\x1c\xb1\xca\xd0\x9a\x48\xe0\xba\xab\x42\x44\xe4" +
			"\xa9\x10\xf3\xd9\xc2\xf0\xe8\x23\xf9\xa9\xe3\x8c\x2e\x42\x12\x2f\x6f\x58\x84\x52\x95\xc4\xec\xf3" +
			"\x03\x12\x2f\xe9\x9d\x40\x50\x2b\x16\x41\x40\xaa\x16\xa5\x62\x22\x01\x32\xda\xc4\xcb\x16\x0e\x99" +
			"\x5e\x1e\x80\x33\xfb\x46\x0d\x45\x0d\x25\xd3\x4b\x92\x33\x1d\xb1\x94\xff\xd9\xf7\xa4\xcf\xd1\x2b" +
			"\x64\xac\x63\xcd\x75\x90\x3e\x15\xc2\xf7\x6e\x01\xab\xaa\xef\x5e\xd7\x5e\x48\x2c\xab\xfe\x0e\xb0" +
			"\x1f\x84\x04\x83\x60\x17\xe2\x99\xbd\x83\x25\x86\x6d\xf9\x78\x90\x39\xa4\x80\xb6\x30\x76\xc3\x61" +
			"\x20\x8b\x06\xb5\xeb\x7e\x92\xc3\x93\x28\x6c\xf4\xb5\x31\xa5\xf7\xb4\x0c\x49\x5f\xf8\xa0\x95\x7b" +
			"\x7f\xa9\x72\x1d\x05\x58\x28\x61\x37\x76\x99\x39\x4e\x84\x1b\x83\xad\x6b\x42\x3a\x63\xd1\x3a\x51" +
			"\xb2\x10\xb1\x1f\xb8\x8e\x93\x19\x5b\xdb\x2a\x74\x88\xa9\x72\x1d\xa7\x5f\x50\x2f\x21\x19\xe5\x6b" +
			"\xe3\xd0\x4b\x6f\x5e\x0a\x96\xc9\xf9\x8c\xde\x43\xd9\xa6\xda\x54\x4a\xeb\x38\xca\xd7\x57\x88\xaa" +
			"\x5b\x9f\x5e\x12\x2e\x62\xd8\x1c\xb2\x43\x1f\x95\xcc\x41\x21\x07\x6d\x7c\xa8\x71\xe2\xcb\x02\x61" +
			"\x57\x79\x26\x5e\x9f\x5f\xcb\xa6\x29\xa9\x2a\x02\x1b\x96\xe5\x29\xfc\xce\xd2\x02\x7e\x1e\x9c\x5f" +
			"\xd7\xe1\x16\x58\x27\xb6\xe3\x98\x5f\xd7\xe3\xf4\x81\xa7\x3e\x86\x44\x53\x6b\x15\x46\xb8\x09\x49" +
			"\x16\x34\xa4\x5d\x84\x04\x94\x32\x09\x69\x6a\x13\xb3\xd9\x5b\x55\x5f\x27\x2e\xa3\xff\x9a\x66\x68" +
			"\xb2\x6c\xe0\x07\x87\xd8\x41\x29\xb3\x7a\xaa\x68\x67\xd5\x8c\x0c\xbe\x83\xe0\xb7\x72\x51\xe6\x4d" +
			"\xe3\x24\xed\xbf\xa1\x5c\xd6\x10\x7c\x45\xe0\xcd\x1a\xc8\x6b\x47\x2b\xdd\x4e\x64\xaf\x4d\x6a\x4b" +
			"\xd1\xf5\x5b\xc1\x1a\x92\x3e\x41\x32\x7d\x46\xc5\x45\x62\xe6\x44\x76\xf1\x85\xed\x81\x15\x32\xa4" +
			"\x1a\x4e\xc7\xf2\x39\x08\x5b\xd9\x77\x95\xbd\x77\x41\x3a\x2f\x6d\xc5\xfe\x53\xc1\x9e\xd8\xed\xe3" +
			"\x73\xb7\x7b\x2f\x60\xbf\x9b\x2f\x06\xe1\xc7\x83\x76\x1e\x5b\xea\xe5\x50\x8e\x5d\xbf\x48\xdc\x6f" +
			"\x99\xad\xe1\x4e\x9b\x5a\xea\x0c\xe6\xc6\xa5\xd7\x4a\x0d\xf9\x7a\x90\x78\x63\x46\x68\x65\x68\x6f" +
			"\xee\x8c\x66\xae\x5b\xe7\xc6\xb9\x07\xfb\xf7\x44\x3f\xfb\x44\x3f\x32\x66\x84\xc4\x7e\x62\x57\x69" +
			"\x2a\x3f\x7e\x7d\x07\xf5\xa1\x38\x82\x3e\xd2\xd0\xf6\x82\xb9\x4a\x15\xb0\xb8\xbc\xde\x70\x8d\xfa" +
			"\xc7\x57\x61\x48\x68\x7d\x9a\x06\x5b\x4d\xff\xee\xb0\x23\x0f\xbb\xef\x1e\xfb\x1f\xbc\x9a\x0e\x1c" +
			"\x8e\x88\xd9\x3d\x9e\xc6\xff\xd5\xeb\x69\x77\x5d\x04\xdd\xf0\xee\xa5\xf6\x57\x00\x00\x00\xff\xff" +
			"",
		size: 3781,
		mode: 0664,
		time: time.Unix(1522879448, 752380614),
	},
}

// AssetAndInfo loads and returns the asset and asset info for the
// given name. It returns an error if the asset could not be found
// or could not be loaded.
func AssetAndInfo(name string) ([]byte, os.FileInfo, error) {
	a, ok := _bindata[filepath.ToSlash(name)]
	if !ok {
		return nil, nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
	}

	a.once.Do(func() {
		fr := flate.NewReader(strings.NewReader(a.data))

		var buf bytes.Buffer
		if _, a.err = io.Copy(&buf, fr); a.err != nil {
			return
		}

		if a.err = fr.Close(); a.err == nil {
			a.bytes = buf.Bytes()
		}
	})
	if a.err != nil {
		return nil, nil, &os.PathError{Op: "read", Path: name, Err: a.err}
	}

	return a.bytes, a, nil
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	a, ok := _bindata[filepath.ToSlash(name)]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
	}

	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	data, _, err := AssetAndInfo(name)
	return data, err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}

	return names
}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	return restore.Asset(dir, name, AssetAndInfo)
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	return restore.Assets(dir, name, AssetDir, AssetAndInfo)
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree

	if name != "" {
		var ok bool
		for _, p := range strings.Split(filepath.ToSlash(name), "/") {
			if node, ok = node[p]; !ok {
				return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
			}
		}
	}

	if len(node) == 0 {
		return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
	}

	rv := make([]string, 0, len(node))
	for name := range node {
		rv = append(rv, name)
	}

	return rv, nil
}

type bintree map[string]bintree

var _bintree = bintree{
	"dynamodb-local.sh.tmpl": bintree{},
	"dynamodb.go.tmpl":       bintree{},
	"dynamodb_test.go.tmpl":  bintree{},
	"interface.go.tmpl":      bintree{},
	"table.go.tmpl":          bintree{},
	"tests.go.tmpl":          bintree{},
}
