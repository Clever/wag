v9.1.8

v9.1.8 Bugfix for generated JS client sync forEach method

v9.1.7 Fix a model that's just "type:string" generates invalid code 

v9.1.6 Fix dynamodb codegen for datetime HASH keys in GSIs

v9.1.5 Fix import for transaction codegen

v9.1.4 Fix dynamodb codegen for transactions on multiple tables

v9.1.3 Fix for generated code supporting filtering on an enum

v9.1.2 Fixes for models attributes for DynamoDB generated tests

v9.1.1 Fixes for unused aws import in DynamoDB tests

v9.1.0 Introduce new API for generated go client creation

v9.0.3 Fixed missing include in generated client.

v9.0.2 Separated client and models modules, reduced kv and otel deps.

v8.2.1 Sort attributes list used in v8.2.0 to reduce diffs

v8.2.0 Allow filtering with non key fields on auto generated dynamo db code

v8.1.8: Allow batch read and write for arrays of size 0

v8.1.7: Fix for dynamo batch deletes when using common initialisms in composite index

v8.1.6: Add dynamodb codegen support for batch deleting arrays of objects

v8.1.5: Fixed dynamodb codegen error involving fields marked with x-nullable

v8.1.4: Add dynamodb codegen support for batch writing arrays of objects

v8.1.3: Support TS methods with a single hyphenated header variable

v8.1.2: Improve TS type for close method on js client

v8.1.1: Revert update of open-api spec dependency bump

v8.1.0: Add dynamodb codegen support for same and cross table transactions

v8.0.3: Fix generated TS types (index.d.ts) when fields might not be valid JS identifiers.

v8.0.2: Fix potential nil pointer panic when implementing your own custom RetryPolicy

v8.0.1: Remove the dependency of `wag` on `samples`. This should allow other packages to import
`github.com/Clever/wag/v8` e.g. to use the `swagger` package.

v8.0.0 is a small but breaking release.

- It brings the Go Opentelemetry dependencies up to v0.20.0 - this is breaking compared to the Wag
  v7 on v0.15.0; wag v7 and v8 tracing cannot be used in the same application.
- As a result of the above change, the wag-generated Go code now requires Go 1.16 (since OTel code
  does)
- There are a two minor but breaking changes in the generated Go models in some cases. Here,
  breaking means that any package which commits and exports the generated Go models, for example
  exposing the Go client.

For more information on the changes to generated models, and how to keep your application using the
existing behavior, please see https://github.com/Clever/wag/pull/379.

The OpenTelemetry change ports the existing behavior with no functional changes to the newer OTel
SDK version; see https://github.com/Clever/wag/pull/381. Note that tracing will still be considered
experimental in v8.x. If a new version of wag produces code that cannot be used simultaneously with
v8, we will bump wag's major version as we do here, but the details of the instrumentation, such as
which attributes are set, should not be considered stable.

## v7.x

- v7.1.1: Add close() to TypeScript clients to release outstanding handles
- v7.1.0: Properly generate TypeScript types for allOf
- v7.0.1 bugfix --client-only not generating tracing files
- v7.0.0

v7 removes all references to OpenTracing and begins adding OpenTelemetry to replace it. For now,
OpenTelemetry parts should be considered _unstable_, especially as the OpenTelemetry Go SDKs are
themselves unstable.

Support for the glide package manager for Go is also removed. Previously, wag could update your
Glide dependencies to set up the packages used by the wag generated code. Now, you should follow the
example go.mod file under samples/.

## v6.x and older

- v6.4.5: shutdown-initiated log should be info not critical
- v6.4.4: Catch engineer error for old dependencies during building
- v6.4.3: Patch bump for publishing testing
- v6.4.2: Code cleanup around timeouts for clients
- v6.4.1: Fix generated go clients logging circuit breaker events for other clients
- v6.4.0: Generate server handler with binary request body
- v6.3.0: Generate client with binary request body
- v6.2.0: Add --dynamo-only and --dynamo-path flags
- v6.1.0: Add --client-only and --client-language flags to generate only client code
- v6.0.3: Modify which fields initialized in tests, reduced to bare minimum
- v6.0.2: Fix to allow composite attributes to be used for more than one index range key
- v6.0.1: Add the status code to the client's error message when the status code is not recognized.
- v6.0.0: Revert the breaking changes to go-openapi/swag from 5.0.0.
- v5.0.0: Convert to modules
- v4.1.0: Support limiting the number of items returned by DynamoDB scans.
- v4.0.1: Fix scans on DynamoDB indexes with composite attributes
- v4.0.0: import package with correct module version
- v3.23.0: add forEachAsync method for JS clients
- v3.22.2: Fix for enum hash keys in GSIs
- v3.22.1: Fix for enum hash keys
- v3.22.0: Use http.Server.Shutdown for graceful end of life handling
- v3.21.0: Go client now uses context to control request lifecycle
- v3.20.0: Add dynamodb codegen support for scanning over global secondary indexes.
- v3.19.1: Codegen fix for KEYS_ONLY index with composite property made of required properties
- v3.19.0: JSON with Marshal() instead of MarshalIndent()
- v3.18.0: Generate TypeScript string unions for inputs that are enums.
- v3.17.0: Add support for configuration options and paramatrized settings.
- v3.16.0: Support for binary fields.
- v3.15.0: JS client enable compression
- v3.14.3: Remove unused code.
- v3.14.2: Stricter span checks to prevent tracing errors.
