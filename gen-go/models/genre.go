package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*Genre genre

swagger:model Genre
*/
type Genre string

const (
	GenreScifi   Genre = "scifi"
	GenreMystery Genre = "mystery"
	GenreHorror  Genre = "horror"
)

// for schema
var genreEnum []interface{}

func (m Genre) validateGenreEnum(path, location string, value Genre) error {
	if genreEnum == nil {
		var res []Genre
		if err := json.Unmarshal([]byte(`["scifi","mystery","horror"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			genreEnum = append(genreEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, genreEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this genre
func (m Genre) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateGenreEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
