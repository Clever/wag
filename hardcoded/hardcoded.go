// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../_hardcoded/doer.go (10.391kB)
// ../_hardcoded/middleware.go (1.683kB)
// ../_hardcoded/tracing.go (7.411kB)

package hardcoded

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __hardcodedDoerGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x3a\x7f\x6f\xdb\x46\xb2\x7f\x4b\x9f\x62\x22\xe0\x2e\x64\x22\x53\x72\xee\xdc\x1e\xd4\xe7\x03\x5a\xc7\x7d\x2d\x90\x26\x41\xe5\xbe\x06\x08\x82\xeb\x8a\x1c\x4a\xdb\x2c\x77\xd5\xdd\xa5\x65\xc1\xe7\xef\xfe\x30\xb3\x4b\x8a\xd4\x0f\x27\x77\x2d\x1e\xde\xf9\x0f\x89\xe2\xce\xcc\xce\xcc\xce\xef\xf5\x5a\xe4\x1f\xc5\x12\x21\x57\x12\xb5\x1f\x0e\x65\xb5\x36\xd6\x43\x32\x1c\x8c\x16\x5b\x8f\x6e\x34\x1c\x8c\x72\xa3\x3d\xde\x79\x7a\x44\x9d\x9b\x42\xea\xe5\xe4\x57\x67\x34\xbf\xb0\xd6\x58\x86\x92\x66\x22\x4d\xed\xa5\xa2\x1f\xca\x2c\xe9\xab\x12\x7e\x35\xb1\x42\x17\xf4\x43\xa3\x8f\x5f\x93\x95\xf7\x6b\x7a\x76\x5b\x9d\xd3\xb7\x97\x15\x8e\x86\xc3\x81\x32\xcb\x25\x5a\x18\x2d\xa5\x5f\xd5\x8b\x2c\x37\xd5\xe4\x4a\xe1\x2d\xda\xc9\x46\x2c\x27\x61\xd5\xd1\x73\x78\x24\xd4\x0e\xa8\x28\xf1\x6e\xb2\xda\x3a\x6f\xe5\xdd\xd9\xd2\x34\x8f\x7b\x50\x85\xd1\xe6\x56\xe8\x95\x2c\x70\x82\xb7\xa8\xbd\x33\xb5\xcd\x71\x34\x4c\x87\xc3\xc9\x04\x0a\x83\x16\xa4\x03\xa1\x41\x6a\x8f\xb6\x14\x39\x42\x69\x2c\x8c\x0a\x23\xf5\x72\x04\xc4\x3b\x58\xfc\xad\x46\xe7\x1d\xac\x8d\x73\x72\xa1\xb6\xb0\x91\x7e\x05\x1b\x2b\xd6\x6b\xa9\x97\x43\xbf\x5d\x63\x24\xd5\x12\xb9\x1f\x0e\x5e\x9a\x24\x87\x67\x44\x21\xbb\x62\x85\x8f\xc1\xc6\xdf\x3f\x06\x8a\x29\x24\xcd\x6f\xb7\x36\xda\xe1\x18\x58\xc5\xe9\xf0\x61\x18\xa8\x9a\xf5\x6b\x51\xe1\x95\xbf\x03\xe7\x6d\x9d\xfb\xfb\x07\xe6\x7b\x21\x1c\x46\x1a\xdf\x09\x5d\x28\xb4\xb0\x46\x5b\x1a\x5b\x39\xf0\x2b\xe4\xf5\x1e\xef\x81\x1a\xbd\x7e\x49\x7c\xee\x88\x95\xb5\xce\x21\x29\xda\xa5\x14\x7e\x07\xdb\x24\xb5\x45\x5f\x5b\x0d\x79\xf6\xd2\x24\x36\x1d\x0e\x26\x13\x68\x5e\xf9\x3b\xc6\xa2\x85\xec\x2a\x98\x59\x92\x8e\x21\x1f\x43\x90\x38\x80\xda\x6d\x23\x12\xfd\x90\xe8\xe0\x62\xfa\xae\x7f\x10\x41\x1a\x86\xed\x88\x43\xbb\x17\xb0\xfb\xa3\x13\x61\x7e\xec\xf6\xad\x51\x32\xdf\xc2\x8f\xbb\xe7\xb8\x5f\xe7\x0d\x14\x58\x4a\x8d\x0e\x44\xa0\x0c\x6b\x7e\x9d\x85\xcd\xba\x80\xbd\x53\x9e\x4c\xe0\x1b\x91\x7f\x34\x65\xe9\xa2\xa0\xe1\x08\x74\x5d\x2d\xd0\x82\xd0\x05\x78\x59\x49\xbd\x04\x53\x46\xc2\xc2\x7b\xac\xd6\xde\x65\xc3\x41\x83\x9a\xa4\xf0\xfe\x03\x39\x46\xf6\xb2\xb6\xc2\x4b\xa3\x99\x32\xef\x0a\x16\x73\x94\xb7\x18\xe8\x76\x15\x31\x06\xe1\x60\x83\x4a\xd1\x37\x2d\x5a\x74\xb5\xf2\x60\x4a\xc6\x6e\x9c\x2f\x9e\xe3\x53\x07\xbf\xbc\x34\xbf\x40\x85\x7e\x65\x8a\x6c\x38\x60\xea\x49\xef\x68\xc7\x70\xe2\x64\x17\xc6\xa8\xa8\xb3\xb9\xd4\x4b\x85\x8f\x69\xce\xaf\x84\x6f\x4f\x4f\x34\xdc\x82\xd1\x39\x06\x6d\x1e\x92\xe8\x99\xf7\x11\x85\x0a\x0f\x5b\x53\x83\x5b\x99\x5a\x15\xed\x36\xd8\xd2\x3e\x77\x98\x1b\x5d\x80\x28\x3d\xf9\xa1\x87\x52\x48\xe5\xb2\x68\xdf\x07\xfb\xa5\x70\x5a\xf3\x1d\x2b\xde\x5b\xb9\x3f\x87\x67\xc0\x6f\xe6\xbc\xdb\x43\xd7\x8a\x60\x23\x95\x8a\x9c\x69\xa3\xcf\xde\xbe\x99\xdf\x8c\xc3\xd3\xd7\x37\x57\xdf\xed\xa2\x08\x0b\x73\xf1\xee\x5d\x46\xa8\x37\x6f\x5e\xbe\x99\xc1\xf7\x9e\xac\xd5\x81\x36\x1e\xf2\xda\x5a\xd4\x5e\x6d\x1b\x6b\xd1\xdb\x70\x08\x8d\x3a\xb0\x80\xc5\xf6\xc4\xe1\x3e\x22\x70\x38\x6d\x8b\xbf\xc1\xde\x89\x5b\x74\xeb\x63\xc7\xde\x3d\x7a\xd2\x89\x2c\xf9\xed\x93\x4b\xd0\x52\xc1\x3f\xff\x49\x12\x65\x3f\xb0\x31\xc1\xe5\x25\x8c\x48\xe0\xd1\xb1\xf7\x24\x3e\x2d\x0c\x07\x03\xda\x2b\x9b\x7b\xe1\x6b\x77\x65\x0a\x84\xff\x82\x8b\xe9\x94\x88\x37\x1a\x2f\x85\x72\x38\x1c\x3c\xb4\x47\xe0\x6d\x8d\x51\xcd\xd7\x77\x6b\xa3\x51\x7b\x29\xd4\x51\xeb\xd3\x80\x3b\x88\x9e\x13\x07\xab\x3b\x81\xff\xb8\xe9\x95\xf2\x96\x02\x67\x7c\xcb\x81\xbf\xb3\x8b\xa2\x68\x90\x5b\x14\x8e\x3c\x7c\x23\xa4\x67\xfb\x70\x1c\xa4\xd1\x6f\x10\x75\x7b\xf0\x33\x38\x9f\x4e\xc7\xf0\x82\x3e\xfe\x4a\x1f\x7f\xa3\x0f\x0a\x10\xe7\x5f\x4c\xa7\x50\x49\xa5\x64\xb0\x62\x07\xcf\x27\x67\x50\xaf\xc1\x1b\xb8\xf8\x13\xfc\x2a\xbd\x47\xdb\x1c\xed\x71\x29\x3e\xc3\xa0\x61\x76\x09\x95\xf8\x88\xc9\xde\xf2\x18\x2e\xd2\xe1\x40\xe3\x1d\x43\x9c\x4f\xa7\x8d\x91\xff\xb0\xe3\x68\x38\xb0\xba\xa0\x65\xca\xef\xd9\x6b\xdc\x24\xcd\xc3\x9c\x13\x6a\xc2\x08\xaf\xcd\x26\x49\xb3\x9f\xb4\xbc\x7b\x2d\xb4\x49\xd2\x34\x1d\x0e\x90\xb0\xa6\xd9\xf4\x02\x26\x13\x16\xeb\x82\x52\x55\x8e\xda\x47\xb9\x86\x03\x4a\xb8\x32\x12\x5f\x72\x5c\x6f\x2c\xe2\xbd\xfc\x00\x97\xc0\xac\x3d\x87\x1e\xd3\x49\x92\x58\x5d\x64\xdf\x2a\x23\xfc\x17\x7f\x4d\xd2\x67\x2f\xd2\xb3\xf3\xf4\x19\x3e\x2b\xe3\x1b\x42\xa2\xfd\x83\x60\xcf\x2e\xe1\x45\xd7\xaa\x2c\xfa\xff\xb7\xbe\x7b\xea\x80\xff\xf3\x1d\xf8\xb5\x39\x9e\x35\x82\x93\x52\x82\xd4\x54\xff\x05\xe5\x91\x43\xb5\xb9\x23\x66\xe1\x3e\x81\xc7\x1d\x97\xc2\x41\xb5\xf6\x5b\x70\x4a\xe6\xd8\x28\xb7\x47\xe1\xdf\xcc\x02\xfd\xb0\x2f\xd4\x46\x6c\x3b\xf1\x82\xe4\x3f\xb1\xdb\xbf\x9a\x70\x3b\x3c\x04\xb5\x36\x65\x21\x2b\x28\x96\x50\x7d\x35\xfc\x2c\xfd\xaa\xab\xa3\x56\x1b\xa0\x71\x03\xb1\xb8\x0f\x66\x6c\x6e\xd1\x5a\x59\xc4\xba\x22\xf4\x04\x60\x16\xbf\x62\xee\x9f\xba\xb6\x18\x6b\xcb\x20\x96\x68\x8f\x7c\x92\xfb\xbb\x86\x68\x53\xd2\x8d\xe1\x44\xc9\x95\xee\x43\x76\xcb\xc5\xb8\x42\xf4\xff\x47\xa8\x1a\x89\xf2\xb8\x27\xe7\xfd\x43\x8f\x32\x57\x8c\x4d\xf5\xfa\xac\xad\x05\xff\x88\xfa\xb5\xd9\x62\x0c\xe6\x23\x87\xa5\x5d\xb5\x9a\x05\xe6\xfa\x7c\xa5\x59\xd2\x15\x93\x1d\xed\x89\xf9\xd8\x78\x45\xab\x8b\x4b\x28\xb2\xce\x6f\x76\x92\x36\xb3\xd0\x3e\xbb\xb5\x6c\x67\x98\xc3\xc1\xad\xb0\xc7\x7c\x3c\x2c\xb4\x7e\x3e\xe4\x9a\x6f\x2e\x6e\xb1\x57\x18\x2d\x4c\x41\x39\x0a\x72\x6a\x09\x36\x08\x2b\x06\x30\x61\xb3\x0c\xde\xf8\x15\xda\x8d\x0c\x6b\x1c\x05\x19\x40\x28\x8b\xa2\x20\xf3\x11\x05\xd3\xe5\xae\xa2\x2e\x4b\xb4\x60\x74\x1b\xdd\x8a\xde\x56\x8c\x4e\x75\x57\x06\x73\x44\x46\x23\x86\x67\x93\x89\xf3\x24\xce\x2d\xda\x52\x99\x0d\x37\x66\x8c\x21\x8d\x76\x93\x17\x7f\x99\x7e\x39\xfd\xdb\x97\x5f\x4c\x68\x2f\xa9\x97\x67\xc4\xf1\x99\x29\xcf\x08\xf7\x2c\xd2\x3e\xa3\xc4\x6b\x6a\x7f\x56\x99\x42\x96\x14\x1b\xda\x15\xe7\x85\x8f\xba\x58\xd4\x25\xbc\xff\x40\xad\x2c\x9f\x81\xcd\xbe\x21\xe1\x63\xbc\xa3\xd3\xe8\x2b\x6c\x30\x58\xd4\x65\x88\x94\x97\x10\xda\xd9\xec\x47\x14\xc5\xd7\x4a\x25\x01\x97\xf2\x47\x3f\x6a\x12\x95\xc6\x68\xb5\x54\x8c\x3d\x1c\xd0\x49\x3e\x0c\x43\x26\x6b\xea\x5e\x4a\x7b\x5f\x71\xf4\xfb\xaa\x79\xf7\xfc\x39\xe3\x1f\x65\x6d\x60\x0b\x4b\x38\x91\x8f\xd7\x66\x7d\xa5\x8c\x43\x9b\x70\x67\x4e\x99\xf6\x1b\x56\x7f\xb2\xa8\x4b\xce\x6b\x83\x48\xe3\x12\x6c\x11\x59\xe0\xe8\xdc\x08\x54\x64\x05\xb5\x5a\xa1\xbb\x0a\x9b\x46\xce\x2e\x2f\x41\xa1\x4e\x1a\xd3\x4b\x29\xe4\x3f\xe9\x1a\x5f\xcc\x34\x21\xb3\x30\xbd\x34\xf0\xb8\xb0\x28\x3e\xc6\xbd\x26\x13\x60\x0e\x9b\xc6\x83\x6d\x32\x9a\x5b\xb9\x7b\x21\x43\x66\xd4\x52\x35\x4c\xb8\xf5\x9e\x32\xdd\x9a\x25\xc9\x98\x1c\x19\x3c\xd3\x0f\x75\xb6\x42\x5c\xb7\x9c\xbe\x8f\x12\x7c\x48\xfb\xb9\x3c\x32\x19\xc3\x72\x2e\x6d\x5e\x4b\xff\x0d\xf1\x8a\x96\x1b\x44\x59\xad\x15\x56\xd4\xfe\x87\x58\x17\x20\x60\x11\x40\x60\x4d\x1d\x99\xd5\x9c\xd4\xe7\xe8\xa1\xc0\x45\xbd\x24\x27\xa1\xd3\xa3\x6f\xb3\x46\x2b\x3c\xf6\x90\xa5\x06\x01\x15\xe5\xc0\xcd\x0a\x2d\x52\xcf\xc1\x0e\x60\xb4\xda\x82\x32\xcb\x0e\x2b\xc0\x36\x1a\x6a\x3d\x86\x21\x8d\x2c\x94\xc9\x3f\x72\x85\xd0\x56\x17\xa5\x35\x15\x2c\x0d\x65\x3e\xbf\xb2\xa6\x5e\xae\x62\xde\x3b\x22\xd2\x63\x3d\x6f\xe0\x3f\xfc\x71\xe3\x36\x88\x04\x5e\x8b\x0a\x09\x53\xea\x65\x3b\x7f\xe1\xbf\xf0\x9c\xfd\x2c\x96\x21\x66\xbe\xe2\xdf\xa4\x50\x72\x99\x88\x3d\x9f\x5f\xbf\xd1\x39\x82\xdb\xea\x3c\xa3\x27\x56\xf7\x77\x61\xf0\x32\x9f\x5f\x5f\xdf\x52\x06\x91\x0e\xb0\xa2\xca\x8e\x4b\x9d\xdd\x84\x06\x6e\xa5\x00\x87\xf6\x16\xed\x99\x23\xc0\x30\x8f\xc9\xb8\x80\x42\x97\x5b\xb9\x08\x75\x33\x29\x99\x15\x46\x05\x81\x68\x36\x8f\x9a\xd8\xdf\x6d\xa7\x86\x1b\x5a\x7e\xe4\x2f\x88\x0d\xbf\xfc\xea\x8c\x9e\x8d\x88\xd8\xe8\x97\xe1\x80\x35\xf2\xd9\x58\x5a\x54\x8c\x15\x13\xc9\x95\xa9\xb5\x3f\x86\x25\xc3\xeb\x88\x65\x3b\xd0\x84\x7d\x4d\xd1\xe7\x24\xee\x3e\x36\xb6\xd0\x2d\xee\xdb\x50\x40\x8b\xe5\x21\xeb\x47\x70\x77\xd0\x44\xe0\x7b\x77\xd5\x33\xa6\x37\x6b\xd4\x5d\x02\x5c\x77\xb4\x04\xe4\x11\x68\x56\x80\x51\x4a\xea\x25\xb3\xf5\xad\x90\xaa\xb6\xf8\x98\x02\x0e\xa1\x0f\x89\x28\x45\x6e\xde\x25\xf6\x18\x91\x1e\xf4\x29\x62\xf3\x3a\xcf\xd1\xb9\xcf\x24\x16\xa1\xf7\x89\xcd\x57\xc6\xfa\xa8\x05\x2c\x3e\x25\x5e\x1f\xfa\x80\x56\x87\xa1\x4f\xab\xea\x04\x43\x37\x2b\xca\x94\x6f\x8d\x51\x3f\x22\x15\x6b\xc4\xd4\x69\x22\x87\xd0\x07\xf4\x64\x85\xa6\xf6\x9f\xc9\x54\x84\x26\x22\x57\xa1\xdb\xb9\x32\x3a\xf6\x3d\xd7\x77\x98\xd7\x94\xd5\x83\x71\xf7\x89\xe4\x8f\x43\x13\xc1\x57\xc2\xa3\xce\xb7\x37\xc6\x0b\xf5\x03\x0a\xfd\xb8\x71\xab\x0e\xf4\x3f\x2a\x14\x64\x98\x4d\x4d\xa8\xcc\x92\xe3\x43\xa2\x4e\x84\xb6\x31\x1c\xc4\x12\xce\x71\x2a\x7b\x65\x96\xc9\x48\xea\xd2\x8c\xc6\x30\x1a\x8d\xa1\x12\xeb\xf7\x21\x0a\x7c\x68\x07\x7f\xf7\x0f\x94\xba\xfa\x8e\x3d\x3b\xe6\xca\x98\x75\x43\xc5\x98\x90\x3a\xfe\x7c\x14\x85\x90\x76\x11\x62\x87\xd2\x71\xe3\x43\xbc\x88\xb2\x83\x61\xbc\xa3\xde\x3b\xeb\xe3\x1d\x8b\x07\x8c\x7c\xcc\x69\x67\xfb\xc2\x1d\xc2\x1c\xc1\xed\xfb\xea\xec\x28\x6e\x0f\xe6\x24\x8d\xc6\x23\x1e\xa3\x11\x61\x0e\x68\xec\x79\xe6\xec\x98\x0c\x7d\x98\x43\x12\xbd\xed\x8f\xab\xe1\xd4\xf6\x47\xfc\x70\xb6\x8f\x7b\x08\x73\x48\x26\xba\xdf\x63\x2c\x44\x18\xc6\xfd\x94\xd7\xcd\x00\xb3\x4f\xf8\x31\xd3\x51\x7b\xae\x79\x68\x83\x98\xed\xbb\xef\x78\x38\x78\xe8\xb7\x69\x87\x75\x4c\x0a\x52\x4b\x9f\xa4\x71\x94\xfe\x16\xad\x34\x85\xcc\x79\xb2\xa6\xcc\x32\xcc\xda\xb5\x50\xfd\x52\x8a\x6a\x32\xe1\x9c\x74\x5c\x86\x39\xf4\x9e\x2b\x9a\x4e\xc5\xe5\x57\x16\xdd\xca\xa8\xc2\x71\xd5\x55\xeb\x02\xad\xf3\x42\x17\x3c\x56\x58\xaf\x95\xcc\x43\x9b\xbf\xc0\x95\xb8\x95\xc6\x66\x8c\xfe\x93\x2e\x8d\xf5\xb5\x16\x1e\xd5\x76\xdc\xad\x5e\x0a\x83\x4e\x3f\xf5\xb1\x3d\x82\xa5\x45\xe1\x61\x23\xb6\xc4\x0a\xde\xad\x43\x21\x2c\x1d\x53\x29\x84\x17\x63\x70\x86\x7a\x2a\x8b\xce\x58\xcf\xc5\x64\x6d\x35\xdf\x03\x68\x90\xde\x81\xab\xd7\x7c\xfb\x46\x3d\xc3\xc2\x1a\x51\xe4\xc2\x1d\x88\x51\x51\xc1\x9b\x3b\xae\x9d\x78\xf2\x7f\x58\x40\x41\x32\x9f\x5f\xa7\x81\xfd\x39\x86\x0b\x02\x37\x9b\x4c\x1e\xb9\x2b\x93\xce\xd5\xe8\x26\x17\x5f\x64\x6d\x65\x18\x6b\x3b\xea\x18\xe8\xb4\xc2\x81\x0c\x22\xce\xdc\x5b\x14\x55\x73\x2d\x33\xbb\x6c\xf4\xc2\xf3\xbf\xee\x1a\x17\xef\xc7\x90\xb2\xb9\x17\xd6\xf3\xb2\x92\xce\xa3\xe6\x08\x6c\x99\x98\x46\x9f\xbd\xe2\x97\xc9\xc8\xe7\x6b\x0a\xbb\xe7\x2f\xbe\xcc\xa6\xd9\x34\x3b\x9f\x4d\x47\x27\x7a\xb0\xb5\xd0\x32\x4f\xa8\x35\xe1\x7e\x61\x38\x18\x2c\x0d\xcb\x9e\xcd\x49\x45\xc9\x6e\x9b\x63\xfc\xa4\x01\xbe\x23\x2a\xa9\xef\x67\x64\x9b\xc3\x5b\xb4\x5b\x38\x9f\x42\x33\x8d\x5d\x60\x2e\xea\xd8\xe9\x10\x35\xb4\xf2\xae\x3d\x1a\x61\x91\x8e\x54\xc0\xf9\xf4\xac\x19\x96\x32\xb5\xe8\xb6\xb0\x91\xba\x30\x9b\x0c\x6e\x56\xd2\x81\x42\xff\xd4\x41\x4d\xc7\x5f\xf1\x84\xf7\x18\x49\x6f\x60\x89\x7c\x85\x61\xd5\x36\x52\x13\x79\x5e\x87\x1e\x84\xdc\x2b\x5e\x2f\x39\x48\xb4\xe1\xbe\x44\x78\x36\x3f\x90\x6c\xa4\x6b\xb4\x25\xe6\xbe\x65\xdc\xd4\x36\xde\x42\x45\x6a\x8d\x35\x47\x40\xb5\x85\x4a\xf8\x7c\xd5\xb2\xf2\xd4\xc5\x6e\x05\x41\x28\x67\x58\x2d\x9b\x15\xea\x63\xed\x53\x24\xe9\x78\x28\x08\xf9\x4a\xe8\x25\x3a\xee\x50\x95\x59\x7e\xcb\x39\x52\xe7\xdb\x30\x5b\xee\xdf\x9f\x30\x8c\x70\x9e\xd3\xef\x1c\x51\x87\x11\x75\x9b\x6f\xf7\x12\xf4\xfd\x43\x0f\xe1\x95\x59\x52\xa4\xdb\xc3\x61\xf2\xf4\xfe\x9e\x8d\x82\x5b\xf2\x7f\x40\x33\x5b\x8e\xab\xf9\xc7\x64\xef\x2a\x27\x85\x7b\x68\x47\x5e\x52\xf3\x6c\x52\x52\x10\x20\x1a\x83\xda\x2a\xda\x66\x14\xc7\x19\x23\x78\x0e\x8d\x7d\x65\x5f\x17\x85\x4d\xd2\x6c\xce\xdb\xb3\x85\x53\x4f\xfb\x5b\x6b\xde\x6c\x93\xaf\x71\x13\x0b\x81\x64\xf4\xdf\xd7\x37\xa3\x31\xd4\x56\x8d\xc9\x9a\x03\xc2\x11\x03\x67\xf5\x65\x6f\xad\xd4\xbe\x4c\x42\x09\x00\xb9\xd1\x1a\x73\xcf\x0d\xa2\x69\xcf\x61\x3e\xbf\xa6\x3e\x05\x45\x35\x83\x3f\xb9\x51\x68\xd8\x03\x89\xdc\x68\x2f\x75\x8d\xfc\x8b\xd5\x37\x08\x90\x2d\x7b\x9d\x5b\xf1\x6c\x5e\x2f\x42\x1f\xf6\xb3\xf4\xab\x84\x8a\x9f\x3f\x77\xe6\x68\x61\x00\xf7\xdb\xff\x39\xc3\x74\x82\x78\xbb\xbb\x1f\x08\x98\xd9\x75\x88\x7e\x71\x6b\x9e\xec\xec\x57\x74\x61\x29\xb2\x3a\xbb\x04\xaa\x1b\xb3\x9f\x74\x25\xac\x5b\x09\x95\x84\x51\x51\x82\xb7\xd9\x4b\xe1\x45\x92\xa6\x63\xf8\x33\xa6\x5f\x1d\x11\xac\xcf\x56\xe4\x8b\x09\x67\xdc\x76\x3e\xb9\x84\x51\xdc\xfb\xca\x54\x95\xd0\xc5\xe8\x24\x6a\xf8\x9e\x4c\xe0\xc6\x14\x62\xcb\x1e\x66\x11\x72\xca\x27\x61\xe4\x1d\xe4\x83\x20\x36\x45\xa2\x38\x9a\x25\x37\x44\xef\xda\x01\x43\x13\xff\x09\x30\xa4\x9e\x48\xb8\xe9\x98\xe1\x7b\xcd\xff\xd9\x50\xa0\x50\xb0\x31\x56\xb1\x3f\x33\x3a\x6f\x47\x79\xcc\xf1\x45\x61\xb3\x27\xb9\xfc\x5a\x38\x07\x32\x64\xac\x76\x2e\x9c\xb5\xc4\x5f\x11\x0b\x1b\x63\xed\x16\xc4\x82\xda\x86\x22\xce\x2b\xa4\x0b\x11\x62\x83\xbb\x71\x0b\x13\xa3\xe5\x7c\xaf\xc6\xe4\xd1\x5f\x4b\xd3\x1b\x28\xa4\x13\x0b\x85\x71\xf4\x52\x99\x02\x3b\x3a\xe6\x26\xfd\xc9\x25\x14\x59\x77\x8e\xf1\xb8\x82\x29\x4c\x50\x48\x69\x86\xb8\xbd\x38\xf3\x3e\xd0\xfc\xb0\x03\x3d\x58\x82\x4b\xc0\xdd\x59\x91\xba\xbb\xa1\x2f\x54\x21\xb2\x04\x49\xe1\x1c\xa5\x5f\x85\x38\xc8\xc0\xc9\x79\xca\xc0\xa5\xb4\x2e\x66\x69\xd8\xe0\xd3\x5b\x04\x47\x31\x2e\x9c\xd7\x8e\x96\xe9\x60\xbe\x48\xfb\x4b\xd4\x9c\x87\xbd\x56\xa2\x89\xad\x45\x0f\xe3\x2f\x69\x37\x53\x71\x75\x42\x4a\xc7\x82\x8e\x36\xe7\xb1\x2e\x77\x40\x05\x38\x53\xa1\x5f\xd1\x69\xec\x71\xd0\x6a\xba\x19\x5a\x0f\x8e\x84\xd9\x8e\x5e\x76\x77\x7d\x0d\x6c\xd3\x6d\x15\x99\x6a\xba\xab\xf4\x13\x9e\xd3\x9c\xcf\xd1\x06\x84\x0e\xfb\x78\x6b\xf2\x47\xf3\xf7\x00\xa8\x1c\x9f\x64\xe7\x06\x73\x5e\x2f\x92\x53\xf4\x53\xf8\x3b\xf4\xf2\xda\x1f\xcd\xd0\x2e\xf2\xd1\xc7\x03\xe1\x7c\x46\x15\xfd\x3b\x6f\x3d\x64\x09\x45\x16\x7c\xef\xbe\x37\x47\x9e\x1d\x0c\x92\x9b\xda\xef\xa5\x49\x7a\xfe\x38\x6e\xaa\xa9\x10\xf9\x59\x2d\xc7\xb2\x44\x9c\xda\x86\xb9\x79\x10\x34\x8e\x85\xbb\xf7\x8a\x7f\xbf\x6c\x2f\x16\x07\xe1\x7f\x59\xb0\x88\xd7\x16\x84\x2d\x74\xdc\x86\x87\xb4\x92\x07\x99\x5d\xa7\x89\x95\x4e\x67\x33\x63\x79\x88\x9e\x8c\x2e\xde\xbd\xe3\x9a\x32\x6c\xdd\xe3\xe6\xa1\xcd\xc8\x07\xa3\x65\x8e\x2b\x9f\x79\x11\x33\x08\x03\xf8\x7f\x41\x51\x8f\xcf\xed\x4f\x5c\x3f\xb4\x37\x0f\x9f\xd2\xdf\xbf\xad\xbe\x47\xb4\xf7\x30\xec\xf3\x11\x54\x07\x93\x67\xa0\x0d\x94\xb1\x15\x67\x41\xc3\xbf\x18\x6c\xd1\xc3\xb3\x49\x7a\x74\x68\xff\xbf\x01\x00\x00\xff\xff\x61\xa5\xf0\x68\x97\x28\x00\x00")

func _hardcodedDoerGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedDoerGo,
		"../_hardcoded/doer.go",
	)
}

func _hardcodedDoerGo() (*asset, error) {
	bytes, err := _hardcodedDoerGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/doer.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x80, 0x4, 0x11, 0x39, 0xa1, 0x94, 0xbe, 0xc3, 0xda, 0xe7, 0x62, 0x5e, 0x21, 0x98, 0xaa, 0xf9, 0x45, 0x4d, 0xa2, 0x73, 0x57, 0x2d, 0xb1, 0x46, 0x3b, 0xad, 0xdb, 0x36, 0xd1, 0x12, 0xa2, 0x24}}
	return a, nil
}

var __hardcodedMiddlewareGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\xcd\x6e\xe3\x36\x10\x3e\x5b\x4f\x31\x65\x11\x84\x5a\x38\xf2\x1e\x8a\x1e\x02\xf8\x50\xa4\x9b\xe6\xb2\xc0\x62\x13\xb4\x05\x8a\x02\xcb\x50\x23\x89\xb0\x4c\xaa\xc3\x91\x55\x23\xf0\xbb\x17\x43\x49\x4e\x14\xa4\xe9\xa9\x07\xcb\xe4\xcc\x7c\xdf\xfc\xb3\x33\x76\x67\x6a\x84\x88\x74\x40\xca\x32\xb7\xef\x02\x31\xe8\x6c\xa5\xaa\x3d\xab\x6c\xa5\x3c\xf2\xa6\x61\xee\xe4\x4c\xbd\x67\xb7\xc7\x4d\x89\x8f\x7d\xad\xb2\x6c\xa5\xea\xd0\xed\xea\xc2\xf9\xcd\x4d\x8b\x07\xa4\xcd\xce\x1c\x0f\x88\x57\x75\x28\x0e\x3f\x6e\xda\x50\xd7\x48\x2a\xcb\xb3\x6c\xb3\x81\x2f\xc6\x3b\xfb\xd9\x95\x65\x8b\x83\x21\x84\x36\xd4\x11\x8c\x3f\x42\x27\x8a\x58\xc0\x6d\x20\xf0\x61\x58\xc3\x80\x97\x84\x60\x83\x67\xe7\x7b\x04\x6e\x28\x0c\xce\xd7\xc0\x0d\x8e\xc6\xd0\x77\xc2\x28\xf7\xc8\xc6\xee\x20\x06\xe0\xc6\x45\xd8\x9b\x23\x58\x32\xb1\x19\x6d\x29\x58\x8c\xb1\xc8\xaa\xde\xdb\xd7\xfe\x75\x03\x92\x56\x71\x67\x7c\xd9\x22\xe5\x8b\x1b\x3c\x65\x2b\x42\xee\xc9\x2f\xc4\xb7\xbd\xb7\x5a\xc8\xf4\x30\xca\xbf\x62\xec\x82\x8f\xf8\x1b\x39\x46\x5a\x03\xc1\x87\x49\xfe\x57\x8f\x91\x73\xe1\x59\x95\x58\x21\x41\x82\x8d\x82\x55\x4a\xe2\x13\x11\x5c\x6f\x81\xd0\x86\x03\x92\xce\x45\xe1\x2a\x38\xeb\xb6\x5b\xf0\xae\x1d\x01\x53\x30\x72\x3c\xc9\xe7\x60\x08\x90\xd2\x2f\x50\x26\x92\x38\x38\xb6\x0d\xbc\x64\x9e\xcf\x85\xe6\x63\x87\x93\x6b\x6b\xa2\x14\x8d\x9c\xaf\xaf\x13\xb3\xd0\x6c\xa1\xda\x73\xf1\x49\xc8\x2a\x3d\xc3\xf2\xb3\x79\xf2\xf2\xd2\x7a\x36\x11\x51\x89\x95\xe9\x5b\xfe\x17\x32\xd5\xfb\x9d\x0f\x83\x9f\xfa\x76\xf1\xfd\x01\x42\x05\x12\x0f\x5c\x3c\xa8\xf5\x99\xe9\xf9\x94\x8f\x49\xca\x77\x9c\x9f\xe2\x96\xc2\xfe\x26\x78\xc6\xbf\x59\x53\x31\x9f\xf2\x7c\xf4\xf1\xb3\x56\x09\xaa\xd6\x29\x82\x09\xf3\xf9\x49\x21\x91\xba\x96\xd8\xd7\xa0\xd2\x94\x30\x19\x8b\xea\x7a\xca\x5e\xa7\x21\x2e\xee\x45\xa3\xf3\xfc\x94\x9f\x1b\xb3\xa8\xc0\x29\x35\xa6\x29\xee\x65\x41\xee\x1e\x1e\xbe\xe8\x61\x0d\xa2\x39\xe5\xd9\x29\xcd\x75\x64\xc3\x7d\x5c\x4e\x02\x0c\x64\xba\x08\x06\x68\x12\xc3\x90\xe4\x59\xca\xfc\x4d\x44\x64\xea\x2d\x4b\x93\xde\x98\xac\x6c\x35\x62\xc0\x79\x16\xb7\x69\xa0\x75\x84\x0f\x6f\x51\xe5\x90\xfe\xef\xd0\x94\x48\xda\x86\x12\x05\x96\xfa\x1f\x8b\x89\x67\x0b\x22\x17\xc1\x12\x5b\xbc\x86\xce\x59\xfe\x8a\x14\x5d\xf0\x5f\x8d\xaf\x11\x4a\xb4\xae\xc4\x08\x43\x83\xdc\x20\x01\x07\x30\xd6\x62\xc7\x60\xe0\x30\x1a\x16\x63\xaa\x0b\x58\x5a\x81\x49\x3f\x75\x21\x87\xc7\x10\xda\xe4\xe1\xa6\x75\xe8\x79\x02\xdc\x34\x68\x77\x2f\x1e\x0b\x2b\xf7\x98\xb6\xda\x26\xbb\x67\x3f\xa9\x16\xef\x81\x5f\x6d\xfa\x1a\xc8\xd7\x8b\xc0\xfe\xc7\xdd\x9f\xb3\x95\x45\x2f\xc6\xb2\x16\xbf\x20\x6b\xf5\xfb\xd5\x18\xf2\xd5\x14\x88\x92\x31\xfb\xaf\x81\xff\xa9\x2c\xe7\x9b\x1a\xcb\x70\x35\x39\x50\xeb\xb9\x20\xc2\xe3\x2a\xf8\x8e\x7c\x3d\xd7\x7a\x5a\xfd\x61\xd1\xdc\x1f\x3e\x7e\xcc\x5f\x48\xf5\x1f\x7f\x3e\x1e\x19\xb5\xec\xee\x7d\x47\xce\x73\xa5\xbf\x3d\xa9\x3d\xc6\x68\x6a\xd9\x1a\xb5\xac\x3b\x5c\x5e\xc4\x4b\xf0\x81\xa7\xce\x63\xb9\x86\xae\x45\x79\x2e\xfa\xae\x26\x53\xa2\x3a\x7d\x7b\x0e\x2a\x4f\xbe\xce\xaf\xd8\xe9\x9d\x9d\xfa\x27\x00\x00\xff\xff\x64\xba\x96\x25\x93\x06\x00\x00")

func _hardcodedMiddlewareGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedMiddlewareGo,
		"../_hardcoded/middleware.go",
	)
}

func _hardcodedMiddlewareGo() (*asset, error) {
	bytes, err := _hardcodedMiddlewareGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/middleware.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x17, 0x73, 0xff, 0x36, 0x5d, 0xfe, 0x40, 0x7c, 0x33, 0x99, 0xc8, 0x19, 0x37, 0x47, 0x59, 0x51, 0x96, 0xb, 0x22, 0x81, 0x1c, 0x7d, 0xe4, 0x3, 0x2f, 0x2d, 0x3c, 0x2d, 0xc5, 0x23, 0x70, 0xb8}}
	return a, nil
}

var __hardcodedTracingGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x39\x6d\x6f\x9c\x48\xd2\x9f\x87\x5f\x51\x3b\x52\x36\x10\x61\x88\x37\x89\x9f\x95\x57\xfe\xe0\xd8\x4e\x32\x52\xe2\xb5\x62\x3f\xb7\x3a\x9d\x4e\x51\x0f\xd4\x40\xcb\xd0\xcd\x75\x37\xf3\x72\x91\xff\xfb\xa9\xaa\x81\x19\x3c\x63\x2b\x39\x5d\x3e\x90\xa1\xbb\xde\xdf\x0b\x37\x22\xbb\x17\x05\x82\x33\x22\x93\xaa\x08\x02\x59\x37\xda\x38\x08\x83\xc9\x34\xd3\xca\xe1\xda\x4d\x83\xc9\x14\x55\xa6\x73\xa9\x8a\x74\x2e\x95\x30\x9b\xd1\x51\x89\x6b\x7a\x5f\xd4\x0c\xa9\xd0\xa5\xa5\x73\x0d\xfd\xd6\x96\x9e\xd6\x99\x4c\xab\x25\xfd\x74\xb2\xc6\x69\x10\x4c\xa6\x85\x74\x65\x3b\x4f\x32\x5d\xa7\xb9\x58\x62\x56\x94\x69\xa1\x8f\x6c\x83\xab\x94\x1e\x04\x5b\xe8\x44\x37\xa8\x1c\x56\x58\xa3\x33\x9b\x44\xea\x94\x24\x32\x72\x9e\x4a\x65\x9d\x69\x6b\x54\x4e\x38\xa9\x55\xba\x43\xae\xd0\x46\x56\x95\x48\xeb\x76\x9d\x6a\x87\x55\xdd\xae\x7f\x96\x5a\xaf\x02\xe3\xf7\xba\x1c\x22\x40\xf7\xcf\xdd\xa5\xb8\x26\x63\xa2\xb1\xa9\x76\xd5\xb3\x64\x1e\x81\xf2\xa3\x30\x4d\xf6\x2c\x4e\x63\x74\x23\x0a\x16\x7a\x1a\x4c\x6c\x7e\x4f\x5e\x44\x78\x1a\xc1\xe6\xf7\x29\xc3\x3c\x4b\x76\x80\xf2\x4f\x87\xd6\x3d\x0b\xbf\x43\xb1\xb9\x2f\x12\xa9\xd2\x8b\x0a\x97\x68\xd2\x7b\xb1\x59\x22\x1e\x15\x3a\x59\x9e\xa4\x95\x2e\x0a\x34\xd3\x20\x0a\x82\x34\x85\x5e\x74\x6d\xc0\x69\x68\x2d\x26\xc1\x52\x98\xdd\xe3\x1d\xe5\x92\x3b\x5c\xbb\x2f\xa2\xb9\xd9\xde\x9e\x8d\xef\x49\x82\x0b\x1f\xae\xdf\x1f\x20\x4d\x39\x9e\xb1\x11\x06\x95\x83\x12\x45\x8e\x86\xd9\xe6\xb8\x10\x6d\xe5\x2e\x74\x55\x61\xe6\xb4\xb9\xa1\x58\x5f\x09\x0b\x59\x29\x54\x81\x39\x2c\x8c\xae\xe1\xdd\xbb\xdf\x4f\x5e\x83\x54\x70\xad\x97\x58\xcf\xd1\x80\x50\x39\xb8\x12\xe1\xa3\x86\x4a\xce\x8d\x30\x1b\xa2\x56\x0a\xab\x5e\x3a\x98\x23\x2a\x68\x9b\x5c\x38\xcc\x61\x55\xa2\x02\xe9\x40\xda\xed\x11\x42\x26\x14\x29\x09\xe4\xd6\xe4\xf2\x80\x10\xac\xfd\x41\xe9\x5a\xa9\xdc\xf1\x09\x9c\xc1\xdb\x37\xc7\xff\xc7\x4a\xdc\xa2\x6b\x9b\x8f\x95\x9e\x8b\x8a\x15\xbf\x31\x7a\x29\x73\x34\xe7\x2a\xbf\xea\xa2\x08\x2c\x3a\x12\x00\x84\x82\x3e\xb2\xc8\xd0\xfe\x77\x4c\x54\x84\x85\x15\x56\x15\xfd\x4f\x9a\x8d\x5c\x0b\x05\x53\xf7\x56\x24\x4b\x33\x7d\x58\x90\xb7\xf8\xa8\x40\x85\x86\x1c\x61\x07\xf7\xa5\x29\xdc\x95\xb8\xe5\x46\x26\x1b\x30\x85\x41\x30\xe8\x5a\xa3\x30\x27\xc3\x6a\x33\xd0\x2b\xc9\x3a\x55\xe5\xe5\xcb\x71\x41\xc2\x97\xad\xcb\xf5\x4a\x25\xc1\xa2\x55\xd9\x8f\xe8\x1b\x66\x6e\x0d\x5d\xbd\x4a\xba\x40\x88\x20\xec\x53\x22\xb9\x6d\x84\xea\x61\x63\x78\x35\x9c\x33\x3d\xd3\x13\x8c\x01\x8d\xd1\x26\x82\xef\xc1\x24\x4d\xe1\x38\x21\x33\x92\x15\x7b\xa5\xf8\xf8\xb7\xe1\x98\x69\x98\x41\x4b\xbe\x7d\x93\x80\xb0\x56\x16\x6a\x64\xc3\x1d\x20\x86\x9a\x2d\x60\x85\x2f\xc9\x28\xad\x52\x52\x15\x50\x69\x32\xc2\x26\x26\x7b\x28\x20\x43\x81\x5e\x2c\xc0\x8a\xba\xa9\xa4\x2a\x12\xf8\xd3\x95\x68\x56\xd2\xa2\x3f\x43\x2f\xe1\x0b\xd0\x06\x56\xa5\x70\x94\x6f\x70\xf7\xf5\xfc\x62\x76\xfd\xf1\xdb\xed\xf9\x97\x9b\xcf\xf4\xe3\xe6\xeb\x9f\xef\xcf\xdf\xcf\x3e\xcf\xee\xfe\x0e\xb6\xc1\x4c\x2e\x24\xda\x24\x98\xf4\x64\x6f\x8c\x9e\x8b\xb9\xac\xa4\xdb\xc0\xe9\x19\xbc\x4e\x5e\x1f\x07\x13\x69\x3f\x93\x30\x74\xa0\x6d\xf2\x11\x1d\xaa\x65\x38\xfd\x36\xbb\xfd\xf6\xf9\xcf\x8b\xf3\xcf\xd3\x08\xce\xce\x60\xea\x4c\x4b\x39\x2f\x17\xd0\xc3\x7f\x0f\x26\x93\x45\xed\x92\x1b\x23\x95\xab\x54\x38\xbd\x45\x47\x3e\xe5\xdb\x69\x14\x4c\x0e\xb2\x3d\x83\xe3\xe4\x75\x30\x79\x00\xac\x2c\x82\x5c\xc0\xf2\x11\xe3\xe7\x94\x9a\x46\x7f\xc0\x12\x7e\x39\x83\xe9\x94\xd9\x1f\x60\xf0\xc1\xe8\xfa\x4a\x2d\xd9\xb5\x44\xb9\xeb\x46\xc9\x8d\x30\x16\x3f\x54\x5a\xb8\x70\x19\xc3\xc9\x5b\x92\x4f\x2e\x18\xea\x97\x33\x50\xd2\xeb\x33\xf1\x41\x4b\xef\xb1\x7f\x90\x86\x57\x14\x25\x8b\x70\x9a\xe9\xb6\xca\x41\x69\x07\x0d\x51\x83\x97\x2f\xec\x4b\xd2\x78\x41\x64\xa7\x31\x2c\x89\xe8\xc3\x93\x8a\x3f\x2d\x6d\x30\x79\x08\x82\x89\xc8\x73\x16\x99\x58\xde\x36\x64\xd5\x45\x38\x7d\x61\x4f\x5f\xe4\xd3\xf8\x70\x25\xf9\xa4\xad\x8b\x0f\x96\x91\xc8\xc7\xdd\xd5\x12\xcd\x06\x8e\xdf\x81\xc5\x4c\xab\x9c\x4a\xc0\xcb\x8a\x62\x74\x43\x72\x67\x5a\x29\xcc\xd8\x69\xe3\x72\x90\xf5\xa4\x40\x38\xa6\x43\x59\xdb\xb1\xe1\xd0\xa5\x2a\x0c\x7a\xe1\xc3\xb8\xd4\xd6\x9d\x72\xb5\x22\xd0\xbf\x28\xa0\xfb\x30\x97\x8a\x12\x21\x6f\x33\x46\x70\xa5\xb4\x54\x28\x05\x58\x99\x63\x26\x4c\xcc\x55\x63\xb5\x83\xc1\x24\xba\xe4\xd8\x81\xef\x4f\x7a\xba\xba\xc1\x41\xda\xa3\x41\xda\x24\x98\xe4\x46\x52\x66\x50\x48\x75\x1d\x35\xb9\xc6\xd5\x25\x9f\x86\xc1\x64\x32\x9c\xfe\x25\x5d\xf9\x15\x3b\x0b\x48\xad\x6e\xd0\x48\x9d\x87\xc7\xef\x5e\xd1\xd0\x92\xdc\xb2\xbd\xa2\xf8\x31\xca\x95\xca\x1b\x2d\x95\x0b\xc9\x59\xfb\xd7\x33\x65\x31\x6b\x0d\x86\x74\x15\x05\xe3\xfc\x38\x3a\x3a\xf2\xe2\x1d\x1d\x1d\x51\x7e\xd0\xe4\x93\x5c\xb6\x75\x13\xfa\xe3\x28\x98\xe0\x50\xb3\xba\xf0\x65\xb7\x5f\xe3\x6a\x28\x7c\xc1\x64\x92\xb9\x35\x31\xf6\x48\x9e\xcf\x7e\x24\x3f\x1b\xc8\x5c\xf6\x20\x33\x28\x1c\x59\xb3\xe7\x7a\x0a\x2f\x96\x53\x66\x1d\x51\x44\xee\x49\xdf\xc3\xed\xc9\xdf\x5f\x50\xd4\xb9\x86\xe4\x56\xb8\x1a\xd7\xda\x70\xab\xda\x81\x3c\x20\xc4\xc7\xdc\xc6\xcd\x68\x8f\xa7\x6b\x08\x89\x06\x92\xe4\x16\xdd\x23\x66\x74\x39\xf1\x13\x48\x42\x39\xd6\xb5\x08\x6a\x1b\x51\x32\x53\x0b\x7d\x19\x4e\xad\x13\x86\xd4\xf7\x8c\xcc\x34\x86\x0e\xe1\x0b\xd9\x6f\x4a\x0e\x46\x6b\xa7\xa7\xe0\xff\xd1\x3b\x99\x7d\xda\x8b\x7f\x64\x84\xc3\xe9\xe9\x21\x75\xe2\x60\xf2\x10\x05\xbd\x0f\xb6\x9a\xbb\x86\x9d\x11\x3c\xfc\x68\x5f\xff\xa0\xcd\x1d\x5a\x9e\x2e\x6a\x14\x8a\x53\x75\x8e\xd4\x80\xb9\xad\xb6\x4a\x3a\xa0\x79\x4d\xaa\xc2\x37\x79\x95\x43\x2d\xc9\xbb\xbe\xcb\x5b\x62\x01\x62\xae\x97\xc8\xdd\x57\xb7\x8e\x52\x8f\x52\x77\x17\x37\x81\x99\xeb\xfa\xb5\xa5\x11\x42\xaa\xa3\x1a\x6b\xed\xa7\x9e\xa1\xc3\x13\x01\x5c\x8b\x5a\x72\x0a\x76\x23\x01\xe6\x60\x1b\xa1\xec\x8f\xf7\xee\x4e\xa7\x30\x82\xf0\xd5\x30\x70\x26\x33\xf5\x85\x39\xfe\x5c\xd7\x1e\x64\x3b\x3d\x83\x2d\xad\x6b\x5c\x3d\x26\x17\x46\x3f\x12\x99\xc7\xc9\xeb\xe8\xf9\x98\x7a\xce\xa5\x6c\x80\xa7\xc9\xc3\x13\xd3\xc9\xa1\x66\xc1\x1d\xe5\xe4\x6d\xf4\xa4\x11\x48\xf9\x4e\x96\x01\xe2\x7a\x8f\x75\x30\xe1\x8a\xcc\x01\x33\xaa\xe1\xb3\xcb\xed\x48\x97\xc0\x6c\x77\x40\xeb\xc5\xa1\x50\x5b\x69\x73\x0f\xa1\x70\x50\xa1\xb0\x0e\x56\xd2\x95\xbe\x28\xfb\x99\x84\xca\x44\xdf\x1d\x76\x29\x42\xdd\x5a\x37\x04\x48\x37\x42\xce\x2e\x2d\xc5\xdc\x42\x9b\xba\xda\x80\x70\x60\x84\xca\x75\xed\x27\x70\xa2\x80\xca\x49\x83\x14\x4d\x99\x0f\x50\xa9\xdc\xc9\xdb\xc4\xb3\xf8\xd0\xc5\x5e\x53\x61\x3c\xd2\x64\x7d\x64\xc4\x66\xcc\x3d\xd7\x68\xb9\x4b\xe7\x9a\xa5\x25\x12\x83\x91\xa8\x4a\xdf\x7a\xe9\xb7\xe3\xe2\x0d\x2f\x0e\xef\x85\xc5\x3c\x1c\x1b\x7c\x76\xf9\x95\x9a\x5d\x77\x75\xa0\x70\x45\xdc\x04\xfc\x30\x6c\x11\x6a\xb1\x96\x75\x5b\x5b\x9e\x80\x9d\x86\xa2\x15\x26\x07\x51\x08\x5a\x3a\xc1\xea\x1a\x5d\xc9\xd9\xa3\xe9\xb9\x32\x5a\x15\x9c\xb4\x16\x15\x2d\xd7\x20\xc0\xf9\xce\x9a\x0b\x27\xa0\x55\xb8\x6e\x30\x73\x98\x57\x9b\x3d\x25\x1a\xa1\x3e\xcb\x5a\x3a\x3b\x1e\x7b\xfd\x19\x0f\x33\xe7\x8e\xf6\xdd\xd6\xe1\x85\x6e\x95\xe3\x8b\x53\x38\x7e\xfd\x9a\x24\x9e\x5c\x2d\x51\xb9\xdd\x0b\xfa\xd7\x5f\x7e\x96\xea\xfe\xf1\x5d\x7f\xf9\xc0\x1a\x8f\x65\xd9\xa8\x6c\x27\xd2\x7d\xf3\xf3\x45\xee\x4b\xbb\xbe\x45\xb3\x44\xf3\x45\xe6\x79\x85\xab\xed\x66\x60\xa1\xde\x1e\xb9\x52\x38\xb0\x25\x0f\x58\x73\x04\xe1\x9c\xc8\x4a\xcc\xc9\x84\x02\x76\x76\x7c\xb0\x4c\x8c\xd7\x8f\x99\xf3\xae\x76\x2b\xf6\xb3\x2a\xec\x29\x70\x51\xb7\xbe\x24\xf9\xe9\x42\xe4\xb9\x7f\xf7\x7b\x2b\x48\xb5\xd0\x44\x96\x82\xc8\xe0\xbf\x5a\xb4\xee\xa8\x9b\x95\xb3\xbe\x03\x10\xf5\xaf\xb2\x28\x1d\x28\xbd\xa2\x7d\x4e\xab\x6a\x03\xb6\x6d\xf8\x5b\x09\x01\x91\xaf\x28\xa2\xa5\x62\x42\x14\xd5\xc2\x79\x2d\x2e\x85\x13\xb9\xe6\xae\x8a\x99\xeb\x0b\xe3\x01\x3b\x84\xa4\x8b\xcc\xf0\x5a\xd4\x48\x73\xaa\x54\x45\x04\x04\x1c\x96\xce\x35\xc9\x27\xa1\x72\xca\x31\xd8\x7d\xa3\xbc\xd7\xae\x22\x4b\xf0\x74\xc0\x1f\x3c\x92\xc3\x34\xe3\xe1\x9e\x7c\xb4\x5d\xa6\x6d\xb8\x5d\xbb\xa3\x6d\x4d\xf3\x9c\xe1\x79\xde\x3d\xb0\x97\x61\x24\xe8\x07\xc2\x67\x22\x66\xe5\xf1\xbe\xa2\x6d\xb4\xb2\xf8\x97\x91\x5c\xe9\x0c\xbc\xea\xce\xd9\xec\x91\x1f\xb9\xd3\xb4\x97\x93\x16\x6c\xc0\x35\xf9\x89\xfa\x0a\x37\xb0\x46\xa8\x84\xbd\xd0\xb4\x8e\xf7\x6c\xd5\xf9\x2e\x73\xeb\xc7\x7e\x23\x6a\x76\x68\x05\x9c\x0d\xbb\xcd\xdf\xf4\x9b\x62\x48\x5a\x8f\x97\x17\xcb\x27\x72\x01\x36\xe3\xad\x81\x91\x07\xf0\x3f\xc0\x66\xc9\x27\x61\xbb\x92\x10\x76\x92\x4f\x48\xba\xd9\x65\xec\xf9\xcd\x2e\x19\x33\x63\x54\x02\x4a\x6e\xd9\xa7\x61\x14\xd3\xe9\x80\x3b\x1c\x33\x89\x34\xe5\x54\xa7\x80\xa1\x3d\x05\x29\x7a\x4b\x5c\x77\xf1\xe0\xd7\x6d\x2e\x84\x14\x6e\x31\x58\x4d\xba\x82\x2b\x35\x6d\x86\xda\x47\x5c\xa6\x8d\xc1\xca\xcf\x72\x95\x2e\xac\xff\x7c\x41\xfc\x2c\x97\x70\xcb\x9c\xe4\x02\x2a\x54\x61\x27\x2b\x6f\x75\x6f\x7e\x83\x5f\x7f\xe5\x53\xaf\x09\x1f\x1e\x9f\xc0\x77\x20\xa7\x8c\x56\x02\x1f\xe1\xa7\x74\x3b\xdf\x38\x84\xf0\xcd\x6f\x47\x59\x29\x0c\x09\x1b\xc5\xf0\x7b\x77\x7a\x7c\xb2\x3d\xed\x0a\x3f\x97\xb7\x86\xa6\x8a\xdc\x0b\x32\xe9\x44\x78\x6f\x63\xf8\x46\x36\x2b\x71\x9d\x5c\x62\xa6\x73\xec\x4c\xd3\xcb\xe8\xc1\x0f\xcc\x71\xbb\xae\x4c\xce\xf3\xbc\x7f\x9b\x32\xe6\x37\x99\x4f\x63\x8f\x3b\x19\x2f\x53\xb4\x49\xf9\x4f\x9a\xc9\x7b\x59\x5c\xa9\x5c\x0a\x95\xfc\x3f\xdb\x37\x1c\xa4\xfa\xc7\xef\xa7\xff\x8c\xa2\x8e\xb9\x37\xcc\xd3\xa2\x76\x86\xfb\x79\x49\x09\xf1\xbf\x13\xb4\x17\xa9\x97\x91\x36\x4e\xff\x28\x13\xae\x31\x9f\xee\xee\x6e\x42\xb3\x8a\x81\x1b\xf4\x43\xc4\xd3\xbc\x2f\xc7\x7e\x46\x50\x96\x0b\x59\x5f\x87\x29\x9d\xdc\x70\xea\x3f\xf0\x50\x65\xcb\x2a\x89\xca\xf5\x55\xd2\xf6\x45\xd7\x89\x7b\xe4\xca\x27\xc6\x58\x2b\x23\x9a\x18\x30\x29\x12\x9f\xfe\xdd\xb6\x3a\xf0\x8b\x87\xcf\x6a\x1d\x45\xa2\xd7\x7d\xc4\x81\xa5\xa8\x5a\xee\x98\x4d\x4b\x0b\x6a\x97\xfa\xa0\xa8\x36\xea\xd6\xf1\x98\xb0\xff\xd1\x49\x5a\x86\xef\x3f\xe4\x11\x5a\xf7\x19\x46\x2b\xaa\xda\x80\x22\x2b\x7b\x76\x9c\x3d\xdd\x87\x6f\x58\x69\xf5\x92\x05\x98\x63\xc1\x93\xb4\x93\x95\xcf\x26\xda\x39\x95\x74\x52\x54\xf2\xdf\x98\x43\x88\x49\x11\x93\xb6\x52\x75\xcd\xc7\x37\x99\xb6\x89\xba\xd2\xbe\x6b\xd3\x70\x2e\x2c\x6e\x2d\xec\xcb\x9d\x6e\x55\x7e\x67\x64\xd3\xf0\xb8\xd7\x08\x45\xd5\xf9\xc2\xad\xff\xc6\x3a\x4b\xe5\xd0\x2c\x44\x86\xdf\x1f\xa2\x7d\x04\xaa\x34\xa3\xcd\xe8\xa2\xdf\xda\x0c\x41\x39\x0f\x35\x5e\x8d\xcc\x0e\xfe\xf7\x91\x40\xa7\x30\x7a\xdd\x97\xe6\x74\xef\x64\x67\x91\xf9\xdf\xd2\xa5\x88\x74\x9b\x06\x47\x64\xa9\xee\xb5\x99\x23\xad\xc7\x96\x04\xd8\xb7\x4d\x30\x79\xce\x98\xc3\x48\x1e\x52\xa8\xef\xa0\x45\x30\x10\x09\xf7\x5a\x52\xf8\x6a\xd4\xba\x76\x97\x8d\xa1\xf5\xf9\xbf\x12\x24\x23\xbf\x53\x6b\x74\xc9\xd8\x0a\xfc\x75\xa0\x03\xa6\x16\xfc\x68\x3a\xe7\x3d\xe3\xe3\xde\x9e\x11\x45\x7b\x88\x4f\xf4\xee\x3d\xb8\xdb\xce\x1c\x1f\xb8\x58\xd3\xda\xc3\xfd\x98\x86\x4e\x9d\x77\x2d\xe5\x40\x1b\xf6\x17\xbe\xa7\x2d\x63\xd0\xf7\x54\xe9\x76\x0a\x57\xc2\xb6\x0d\x8d\x4b\x1e\xdb\x3b\x4a\xc2\x6e\x70\xe9\xda\xa7\xbe\xef\x5a\xe3\xe3\x6d\x7e\xd9\x2d\xf0\x5c\x52\xfb\x40\x5d\xfa\x83\xce\xb0\xcb\xa1\x8e\xf5\xf1\x96\x7c\xf1\x92\xa7\x29\x6d\x1c\x08\xc2\x0e\xd6\x7f\x69\x87\x15\xa0\x2f\x14\xfc\xf9\xc8\x8f\xa7\x51\xb2\xe3\xe2\x7e\x14\xbd\xf2\x93\x05\x19\xe9\x9c\xee\x7c\xcf\xee\xe6\x0d\x3f\x23\x6e\x3b\x27\x4f\x77\x5c\x54\x84\xe2\xc8\xeb\xab\x48\xf7\xe7\x85\x2e\xf7\x0f\xd2\x3c\x10\x55\x5d\x73\xf1\x89\x31\xbb\x1c\xc6\xbd\xc7\xd9\xdd\xd1\x23\x77\x74\xc4\x38\xb5\x7f\x74\xa8\xa1\x01\x66\x3c\xba\xec\x8f\x2d\xfd\xda\xf8\x08\x6e\x7f\x3e\x89\xf7\x60\xf6\x26\x1b\xfe\x4c\xe4\x47\xa6\xad\x78\x1d\xfc\xae\x94\xdb\xa0\x4d\x3a\x0d\x77\x05\x8f\x47\x7f\xdc\xf9\xc4\xf6\xbd\x10\xc6\x48\x34\xa1\xe9\xde\xa3\x9d\x49\xf5\x67\x66\xac\x87\xe0\x3f\x01\x00\x00\xff\xff\x2d\x27\xa1\x9e\xf3\x1c\x00\x00")

func _hardcodedTracingGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedTracingGo,
		"../_hardcoded/tracing.go",
	)
}

func _hardcodedTracingGo() (*asset, error) {
	bytes, err := _hardcodedTracingGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/tracing.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x46, 0x51, 0xd0, 0xe7, 0xc7, 0x20, 0x43, 0xb9, 0x15, 0x9a, 0x3a, 0xe6, 0xd2, 0x7b, 0x74, 0x77, 0x73, 0x65, 0x8e, 0xbc, 0x8b, 0xa1, 0x66, 0x27, 0x90, 0x9e, 0x35, 0x67, 0xb3, 0x39, 0x34, 0xc}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../_hardcoded/doer.go":       _hardcodedDoerGo,
	"../_hardcoded/middleware.go": _hardcodedMiddlewareGo,
	"../_hardcoded/tracing.go":    _hardcodedTracingGo,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"..": {nil, map[string]*bintree{
		"_hardcoded": {nil, map[string]*bintree{
			"doer.go":       {_hardcodedDoerGo, map[string]*bintree{}},
			"middleware.go": {_hardcodedMiddlewareGo, map[string]*bintree{}},
			"tracing.go":    {_hardcodedTracingGo, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
