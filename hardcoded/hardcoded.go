// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../_hardcoded/doer.go (10.35kB)
// ../_hardcoded/middleware.go (1.685kB)
// ../_hardcoded/tracing.go (7.002kB)

package hardcoded

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __hardcodedDoerGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x5a\xff\x8f\xdb\x36\xb2\xff\xd9\xfe\x2b\x26\x06\xee\x22\x25\x5e\xd9\x9b\xbb\x6d\x0f\xee\xdb\x03\xda\xcd\xf6\xb5\x40\x9a\x04\xf5\xf6\x35\x40\x10\x5c\x69\x69\x6c\xb3\xa1\x48\x97\xa4\xd6\x6b\xec\xed\xff\xfe\x30\x43\x4a\x96\x6c\x79\x93\xbb\x16\x0f\xef\xf2\xc3\xda\x96\x66\x3e\x1c\x0e\xe7\x3b\xb3\x11\xf9\x47\xb1\x42\xc8\x95\x44\xed\x87\x43\x59\x6e\x8c\xf5\x90\x0c\x07\xa3\xc5\xce\xa3\x1b\x0d\x07\xa3\xdc\x68\x8f\x77\x9e\xbe\xa2\xce\x4d\x21\xf5\x6a\xf2\xab\x33\x9a\x1f\x58\x6b\x2c\x53\x49\x33\x91\xa6\xf2\x52\xd1\x0f\x65\x56\xf4\x51\x0a\xbf\x9e\x58\xa1\x0b\xfa\xa1\xd1\xc7\x8f\xc9\xda\xfb\x0d\x7d\x77\x3b\x9d\xd3\xa7\x97\x25\x8e\x86\xc3\xc1\x36\x57\x30\x5a\x49\xbf\xae\x16\x59\x6e\xca\xc9\x95\xc2\x5b\xb4\x93\xad\x58\x4d\x94\x59\xad\x68\xe1\xad\x58\x05\x59\xe9\x01\x5a\xe2\x6a\x73\x88\x25\xde\x4d\xd6\x3b\xe7\xad\xbc\x3b\x5b\x99\xfa\xeb\xa8\x4b\x55\x18\x6d\x6e\x85\x5e\xcb\x02\x27\x78\x8b\xda\x3b\x53\xd9\x1c\x47\xc3\x74\x38\x9c\x4c\xa0\x30\x68\x41\x3a\x10\x1a\xa4\xf6\x68\x97\x22\x47\x58\x1a\x0b\xa3\xc2\x48\xbd\x1a\x01\xc9\x0f\x16\x7f\xab\xd0\x79\x07\x1b\xe3\x9c\x5c\xa8\x1d\x6c\xa5\x5f\xc3\xd6\x8a\xcd\x46\xea\xd5\xd0\xef\x36\x18\xa1\x1a\x90\xfb\xe1\xe0\xa5\x49\x72\x78\x46\x08\xd9\x15\x6f\x64\x0c\x36\xfe\xfe\x31\x20\xa6\x90\xd4\xbf\xdd\xc6\x68\x87\x63\x60\x35\xa7\xc3\x87\x61\x40\x35\x9b\xd7\xa2\xc4\x2b\x7f\x07\xce\xdb\x2a\xf7\xf7\x0f\x2c\xf7\x42\x38\x8c\x18\xdf\x09\x5d\x28\xb4\xb0\x41\xbb\x34\xb6\x74\xe0\xd7\xc8\xef\x3b\xb2\x07\x34\x7a\xfc\x92\xe4\xdc\x83\x2d\x2b\x9d\x43\x52\x34\xaf\x52\xf8\x1d\x62\xd3\xae\x2d\xfa\xca\x6a\xc8\xb3\x97\x26\x09\x1b\x99\x4c\xc0\xa2\xb7\xbb\x5a\x52\xfa\x21\xd1\xc1\xc5\xf4\x5d\x57\xbf\x41\x48\xa6\x6d\x49\x49\xa0\x05\xec\xff\x91\xa2\x79\x19\xbb\x7b\x6b\x94\xcc\x77\xf0\xe3\xfe\x7b\x5c\xaf\xf5\x04\x0a\x5c\x4a\x8d\x0e\x44\x40\x86\x0d\x3f\xce\xc2\x62\x6d\xc2\xce\xe1\x4d\x26\xf0\x8d\xc8\x3f\x9a\xe5\xd2\x41\xd8\x52\xd0\xac\xae\xca\x05\x5a\x10\xba\x00\x2f\x4b\xa9\x57\x60\x96\x11\x58\x78\x8f\xe5\xc6\xbb\x6c\x38\xa8\x59\x93\x14\xde\x7f\x20\x9b\xcf\x5e\x56\x56\x78\x69\x34\x23\xf3\xaa\x60\x31\x47\x79\x8b\x01\xb7\xad\x88\x31\x08\x07\x5b\x54\x8a\x3e\xe9\xa5\x45\x57\x29\x0f\x66\xc9\xdc\xb5\x5f\xc5\xe3\x79\xea\xe0\x97\x97\xe6\x17\x28\xd1\xaf\x4d\x91\x0d\x07\x8c\x9e\x74\x4e\x6c\x0c\x27\x0e\x6c\x61\x8c\x8a\x3a\x9b\x4b\xbd\x52\xf8\x98\xe6\xfc\x5a\xf8\xe6\xf4\x44\x2d\x2d\x18\x9d\x63\xd0\xe6\x31\x44\xc7\x6a\x7b\x14\x2a\x3c\xec\x4c\x05\x6e\x6d\x2a\x55\x34\xcb\x60\x83\x7d\xee\x30\x37\xba\x00\xb1\xf4\xe4\x5e\x1e\x96\x42\x2a\x97\x45\xb3\x3d\x5a\x2f\x85\xd3\x9a\x6f\x19\xe7\xc1\x9b\xfb\x73\x78\x06\xfc\x64\xce\xab\x3d\xb4\xad\x08\xb6\x52\xa9\x28\x99\x36\xfa\xec\xed\x9b\xf9\xcd\x38\x7c\xfb\xfa\xe6\xea\xbb\x7d\x70\xe0\xcd\x5c\xbc\x7b\x97\x11\xeb\xcd\x9b\x97\x6f\x66\xf0\xbd\x27\x6b\x75\xa0\x8d\x87\xbc\xb2\x96\x82\xd9\xae\xb6\x16\xbd\x0b\x87\x50\xab\x03\x0b\x58\xec\x4e\x1c\xee\x23\x1b\x0e\xa7\x6d\xf1\x37\x38\x38\x71\x8b\x6e\xd3\x77\xec\xed\xa3\x27\x9d\xc8\x25\x3f\x7d\x72\x09\x5a\x2a\xf8\xe7\x3f\x69\x47\xd9\x0f\x6c\x4c\x70\x79\x09\x23\xda\xf0\xa8\xef\x39\x6d\x9f\x5e\x0c\x07\x03\x5a\x2b\x9b\x7b\xe1\x2b\x77\x65\x0a\x84\xff\x82\x8b\xe9\x94\xc0\x6b\x8d\x2f\x85\x72\x38\x1c\x3c\x34\x47\xe0\x6d\x85\x51\xcd\xd7\x77\x1b\xa3\x51\x7b\x29\x54\xaf\xf5\x69\xc0\x3d\x45\xc7\x89\x83\xd5\x9d\xe0\x7f\xdc\xf4\x96\xf2\x96\xe2\x61\x7c\xca\xf1\xbc\xb5\x8a\xa2\x68\x90\x5b\x14\x8e\x3c\x7c\x2b\xa4\x67\xfb\x70\x1c\x7b\xd1\x6f\x11\x75\x73\xf0\x33\x38\x9f\x4e\xc7\xf0\x82\xfe\xfc\x95\xfe\xfc\x8d\xfe\x50\x80\x38\xff\x62\x3a\x85\x52\x2a\x25\x83\x15\x3b\x78\x3e\x39\x83\x6a\x03\xde\xc0\xc5\x9f\xe0\x57\xe9\x3d\xda\xfa\x68\xfb\x77\xf1\x19\x06\x0d\xb3\x4b\x28\xc5\x47\x4c\x0e\x5e\x8f\xe1\x22\x1d\x0e\x34\xde\x31\xc5\xf9\x74\x5a\x1b\xf9\x0f\x7b\x89\x86\x03\xab\x0b\x7a\x4d\xa9\x3b\x7b\x8d\xdb\xa4\xfe\x32\xe7\x3c\x99\x30\xc3\x6b\xb3\x4d\xd2\xec\x27\x2d\xef\x5e\x0b\x6d\x92\x34\x4d\x87\x03\x24\xae\x69\x36\xbd\x80\xc9\x84\xb7\x75\x41\x19\x28\x47\xed\xe3\xbe\x86\x03\xca\xa3\x32\x82\xaf\x38\xae\xd7\x16\xf1\x5e\x7e\x80\x4b\x60\xd1\x9e\x43\x47\xe8\x24\x49\xac\x2e\xb2\x6f\x95\x11\xfe\x8b\xbf\x26\xe9\xb3\x17\xe9\xd9\x79\xfa\x0c\x9f\x2d\xe3\x13\x62\xa2\xf5\xc3\xc6\x9e\x5d\xc2\x8b\xb6\x55\x59\xf4\xff\x6f\x7d\xf7\xd4\x01\xff\xe7\x3b\xf0\x6b\xd3\x9f\x35\x82\x93\x52\x82\xd4\x54\xdd\x05\xe5\x91\x43\x35\xb9\x23\x66\xe1\x2e\xc0\xe3\x8e\x4b\xe1\xa0\xdc\xf8\x1d\x38\x25\x73\xac\x95\xdb\x41\xf8\x37\xb3\x40\x37\xec\x0b\xb5\x15\xbb\x56\xbc\xa0\xfd\x9f\x58\xed\x5f\x4d\xb8\x2d\x19\x82\x5a\xeb\x6a\x8f\x15\x74\x15\x8a\xf0\xae\x1a\x7e\x96\x7e\xdd\xd6\x51\xa3\x0d\xd0\xb8\x85\x58\xb7\x07\x33\x36\xb7\x68\xad\x2c\x62\x5d\x11\x4a\x68\x30\x8b\x5f\x31\xf7\x4f\x5d\x53\x8c\x35\x65\x10\xef\xe8\x00\x3e\xc9\xfd\x5d\x0d\x9a\x45\x79\xc6\x70\xa2\xe4\x4a\x0f\x29\xdb\x55\x60\x7c\x43\xf8\xff\x23\x54\x85\x84\x3c\xee\xec\xf3\xfe\xa1\x83\xcc\x15\x63\x5d\x94\x3e\x6b\x6a\xc1\x3f\xa2\x2c\xad\x97\x18\x83\xf9\xc8\x61\xa9\x16\x38\x49\xb3\x20\x5c\x57\xae\x34\x4b\xda\xdb\x64\x47\x7b\x62\x3e\xd6\x5e\xd1\xe8\xe2\x12\x8a\xac\xf5\x9b\x9d\xa4\xc9\x2c\xb4\xce\xfe\x5d\xb6\x37\xcc\xe1\xe0\x56\xd8\x3e\x1f\x0f\x2f\x1a\x3f\x1f\x72\xcd\x37\x17\xb7\xd8\x29\x8c\x16\xa6\xa0\x1c\x05\x39\x55\xfa\x5b\x84\x35\x13\x98\xb0\x58\x06\x6f\xfc\x1a\xed\x56\x86\x77\x1c\x05\x99\x40\x28\x8b\xa2\x20\xf3\x11\x05\xe3\x72\xb3\x50\x2d\x97\x68\xc1\xe8\x26\xba\x15\x9d\xa5\x98\x9d\xea\xae\x0c\xe6\x88\xcc\x46\x02\xcf\x26\x13\xe7\x69\x3b\xb7\x68\x97\xca\x6c\xb9\xdf\x62\x0e\x69\xb4\x9b\xbc\xf8\xcb\xf4\xcb\xe9\xdf\xbe\xfc\x62\x42\x6b\x49\xbd\x3a\x23\x89\xcf\xcc\xf2\x8c\x78\xcf\x22\xf6\x19\x25\x5e\x53\xf9\xb3\xd2\x14\x72\x49\xb1\xa1\x79\xe3\xbc\xf0\x51\x17\x8b\x6a\x09\xef\x3f\x50\x97\xca\x67\x60\xb3\x6f\x68\xf3\x31\xde\xd1\x69\x74\x15\x36\x18\x2c\xaa\x65\x88\x94\x97\x10\x3a\xd5\xec\x47\x14\xc5\xd7\x4a\x25\x81\x97\xf2\x47\x37\x6a\x12\x4a\x6d\xb4\x5a\x2a\xe6\x1e\x0e\xe8\x24\x1f\x86\x21\x93\xd5\x75\x2f\xa5\xbd\xaf\x38\xfa\x7d\x55\x3f\x7b\xfe\x9c\xf9\x7b\x45\x1b\xd8\xc2\x12\x4f\x94\xe3\xb5\xd9\x5c\x29\xe3\xd0\x26\xdc\x74\x53\xa6\xfd\x86\xd5\x9f\x2c\xaa\x25\xe7\xb5\x41\xc4\xb8\x04\x5b\x44\x11\x38\x3a\xd7\x1b\x2a\xb2\x82\x5a\xab\x7c\x0c\x36\x6e\xa3\x96\xec\xf2\x12\x14\xea\xa4\x36\xbd\x94\x42\xfe\x93\xb6\xf1\xc5\x4c\x13\x32\x0b\xe3\xa5\x41\xc6\x85\x45\xf1\x31\xae\x35\x99\x00\x4b\x58\x37\x1e\x6c\x93\xd1\xdc\x96\xfb\x07\x32\x64\x46\x2d\x55\x2d\x84\xdb\x1c\x28\xd3\x6d\x78\x27\x19\xc3\x91\xc1\x33\x7e\xa8\xb3\x15\xe2\xa6\x91\xf4\x7d\xdc\xc1\x87\xb4\x9b\xcb\xa3\x90\x31\x2c\xe7\xd2\xe6\x95\xf4\xdf\x90\xac\x68\xb9\x41\x94\xe5\x46\x61\x49\x5d\x7d\x88\x75\x81\x02\x16\x81\x04\x36\xd4\x91\x59\xcd\x49\x7d\x8e\x1e\x0a\x5c\x54\x2b\x72\x12\x3a\x3d\xfa\x34\x1b\xb4\xc2\x63\x87\x59\x6a\x10\x50\x52\x0e\xdc\xae\xd1\x22\xf5\x1c\xec\x00\x46\xab\x1d\x28\xb3\x6a\x89\x02\x6c\xa3\xa1\xd6\x63\x1a\xd2\xc8\x42\x99\xfc\x23\x57\x08\x4d\x75\xb1\xb4\xa6\x84\x95\xa1\xcc\xe7\xd7\xd6\x54\xab\x75\xcc\x7b\x3d\x5b\x7a\xac\xe7\x0d\xf2\x87\x7f\xdc\xb8\x0d\x22\xc0\x6b\x51\x22\x71\x4a\xbd\x1a\x0e\xc2\xb8\x24\x50\x6d\x73\x95\xfd\x2c\x56\x21\x60\xbe\xe2\x17\xa4\x4d\xf2\x97\xc8\x3a\x9f\x5f\xbf\xd1\x39\x82\xdb\xe9\x3c\xa3\x6f\xac\xeb\xef\xc2\x30\x65\x3e\xbf\xbe\xbe\xa5\xf4\x21\x1d\x60\x49\x65\x1d\xd7\x39\xfb\xa9\x0b\xdc\x4a\x01\x0e\xed\x2d\xda\x33\x47\x84\x61\xc6\x92\x71\xf5\x84\x2e\xb7\x72\x11\x8a\x66\xd2\x30\x6b\x8b\xaa\x01\x51\x2f\x1e\xd5\x70\xb8\xda\x5e\x07\x37\xf4\xfa\x91\x7f\x61\xcf\xf0\xcb\xaf\xce\xe8\xd9\x88\xc0\x46\xbf\x0c\x07\xac\x8e\xcf\xe6\xd2\xa2\x64\xae\x98\x45\xae\x4c\xa5\x7d\x1f\x97\x0c\x8f\x23\x97\x6d\x51\x13\xf7\x35\x85\x9e\x93\xbc\x87\xdc\xd8\x50\x37\xbc\x6f\x43\xf5\x2c\x56\xc7\xa2\xf7\xf0\xee\xa9\x09\xe0\x7b\x77\xd5\xb1\xa4\x37\x1b\xd4\x6d\x00\x2e\x3a\x1a\x00\xd9\x43\xcd\x0a\x30\x4a\x49\xbd\x62\xb1\xbe\x15\x52\x55\x16\x1f\x53\xc0\x31\xf5\x31\x88\x52\xe4\xe3\x6d\xb0\xc7\x40\x3a\xd4\xa7\xc0\xe6\x55\x9e\xa3\x73\x9f\x09\x16\xa9\x0f\xc1\xe6\x6b\x63\x7d\xd4\x02\x16\x9f\xda\x5e\x97\xfa\x08\xab\x25\xd0\xa7\x55\x75\x42\xa0\x9b\x35\xa5\xc9\xb7\xc6\xa8\x1f\x91\x2a\x35\x12\xea\x34\xc8\x31\xf5\x11\x9e\x2c\xd1\x54\xfe\x33\x85\x8a\xd4\x04\x72\x15\x5a\x9d\x2b\xa3\x63\xd3\x73\x7d\x87\x79\x45\x29\x3d\x18\x77\x17\x24\x7f\x9c\x9a\x00\x5f\x09\x8f\x3a\xdf\xdd\x18\x2f\xd4\x0f\x28\xf4\xe3\xc6\xad\x5a\xd4\xff\x28\x51\x90\x61\xd6\x05\xa1\x32\x2b\x8e\x0f\x89\xea\x8b\x6b\x63\x38\x0a\x24\x9c\xdd\x54\xf6\xca\xac\x12\x62\xf8\x5e\x2f\xcd\x18\x46\xa3\x31\x94\x62\xf3\x3e\x04\x81\x0f\xcd\xd0\xef\xfe\x81\xd2\x56\xd7\xaf\x67\x7d\x9e\x8c\x59\x3b\x52\x8c\x89\xa9\xe5\xce\xbd\x2c\xc4\xb4\x0f\x10\x7b\x96\x96\x17\x1f\xf3\x45\x96\x3d\x0d\xf3\xf5\x3a\xef\xac\xcb\xd7\x17\x0e\x98\xb9\xcf\x67\x67\x87\x9b\x3b\xa6\xe9\xe1\xed\xba\xea\xac\x97\xb7\x43\x73\x12\xa3\x76\x88\xc7\x30\x22\xcd\x11\xc6\x81\x63\xce\xfa\xf6\xd0\xa5\x39\x86\xe8\x2c\xdf\xaf\x86\x53\xcb\xf7\xb8\xe1\xec\x90\xf7\x98\xe6\x18\x26\x7a\xdf\x63\x22\x44\x1a\xe6\xfd\x94\xd3\xcd\x00\xb3\x4f\xb8\x31\xe3\xa8\x03\xcf\x3c\xb6\x41\xcc\x0e\xbd\x77\x3c\x1c\x3c\x74\x5b\xb4\xe3\x1a\x26\x05\xa9\xa5\x4f\xd2\x38\x46\x7f\x8b\x56\x9a\x42\xe6\x3c\x55\x53\x66\x15\xe6\xec\x5a\xa8\x6e\x19\x45\xf5\x98\x70\x4e\x3a\x2e\xc1\x1c\x7a\xcf\xd5\x4c\xab\xda\xf2\x6b\x8b\x6e\x6d\x54\xe1\xb8\xe2\xaa\x74\x81\xd6\x79\xa1\x0b\x1e\x29\x6c\x36\x4a\xe6\xa1\xc5\x5f\xe0\x5a\xdc\x4a\x63\x33\x66\xff\x49\x2f\x8d\xf5\x95\x16\x1e\xd5\x6e\xdc\x2e\x5e\x0a\x83\x4e\x3f\xf5\xb1\x35\x82\x95\x45\xe1\x61\x2b\x76\x24\x0a\xde\x6d\x42\x11\x2c\x1d\xa3\x14\xc2\x8b\x31\x38\x43\xfd\x94\x45\x67\xac\xe7\x42\xb2\xb2\x9a\xef\x00\x34\x48\xef\xc0\x55\x1b\xbe\x54\xa3\x7e\x61\x61\x8d\x28\x72\xe1\x8e\xb6\x51\x52\xb1\x9b\x3b\x2e\x9d\x78\xea\x7f\x5c\x3f\x41\x32\x9f\x5f\xa7\x41\xfc\x39\x86\xcb\x01\x37\x9b\x4c\x1e\xb9\xfe\x92\xce\x55\xe8\x26\x17\x5f\x64\x4d\x55\x18\x4b\x3b\xea\x16\xe8\xb4\xc2\x81\x0c\x22\xcf\xdc\x5b\x14\x65\x7d\x25\x33\xbb\xac\xf5\xc2\xb3\xbf\xf6\x3b\x2e\xdc\xfb\x98\xb2\xb9\x17\xd6\xf3\x6b\x25\x9d\x47\xcd\x31\xd8\x32\x98\x46\x9f\xbd\xe2\x87\xc9\xc8\xe7\x9b\xd1\x18\x46\xe7\x2f\xbe\xcc\xa6\xd9\x34\x3b\x9f\x4d\x47\x27\xfa\xaf\x8d\xd0\x32\x4f\xa8\x2d\xe1\x5e\x61\x38\x18\xac\x0c\xef\x3d\x9b\x93\x8a\x92\xfd\x32\x7d\xf2\xa4\x81\xbe\xb5\x55\x52\xdf\xcf\xc8\x36\x87\xb7\x68\x77\x70\x3e\x85\x7a\x12\xbb\xc0\x5c\x54\xb1\xcb\x21\x34\xb4\xf2\xae\x39\x1a\x61\x91\x8e\x54\xc0\xf9\xf4\xac\x1e\x94\x32\x5a\x74\x5b\xd8\x4a\x5d\x98\x6d\x06\x37\x6b\xe9\x40\xa1\x7f\xea\xa0\xa2\xe3\x2f\x79\xba\xdb\x07\xe9\x0d\xac\x90\xaf\x2f\xac\xda\x45\x34\x91\xe7\x55\xe8\x3f\xc8\xbd\xe2\xd5\x92\x83\x44\x1b\xee\x49\x84\x67\xf3\x03\xc9\x46\xba\x41\xbb\xc4\xdc\x37\x82\x9b\xca\xc6\x1b\xa8\x88\x56\x5b\x73\x24\x54\x3b\x28\x85\xcf\xd7\x8d\x28\x4f\x5d\xec\x54\x10\x84\x72\x86\xd5\xb2\x5d\xa3\xee\x6b\x9d\x22\xa4\xe3\x81\x20\xe4\x6b\xa1\x57\xe8\xb8\x3b\x55\x66\xf5\x2d\xe7\x48\x9d\xef\xc2\x5c\xb9\x7b\x77\xc2\x34\xc2\x79\x4e\xc0\x73\x44\x1d\xc6\xd3\x4d\xbe\x3d\x48\xd1\xf7\x0f\x1d\x86\x57\x66\x45\x91\xee\x80\x87\xe1\xe9\xf9\x3d\x1b\x05\xb7\xe3\xff\x80\x7a\xae\x1c\xdf\xe6\x1f\x93\x83\x6b\x9c\x14\xee\xa1\x19\x77\x49\xcd\x73\x49\x49\x41\x80\x30\x06\x95\x55\xb4\xcc\x28\x8e\x32\x46\xf0\x1c\x6a\xfb\xca\xbe\x2e\x0a\x9b\xa4\xd9\x9c\x97\x67\x0b\xa7\x7e\xf6\xb7\xc6\xbc\xd9\x26\x5f\xe3\x36\x16\x02\xc9\xe8\xbf\xaf\x6f\x46\x63\xa8\xac\x1a\x93\x35\x07\x86\x1e\x03\x67\xf5\x65\x6f\xad\xd4\x7e\x99\x84\x12\x00\x72\xa3\x35\xe6\x9e\x9b\x43\xd3\x9c\xc3\x7c\x7e\x4d\x6d\x0a\x8a\x72\x06\x7f\x72\xa3\xd0\xac\x07\x88\xdc\x68\x2f\x75\x85\xfc\x8b\xd5\x37\x08\x94\x8d\x78\xad\x8b\xee\x6c\x5e\x2d\x42\x1b\xf6\xb3\xf4\xeb\x84\x8a\x9f\x3f\xb7\x66\x68\x61\xf8\xf6\xdb\xff\xb9\xc0\x74\x82\x78\xbb\xbf\x1b\x08\x9c\xd9\x75\x88\x7e\x71\x69\x9e\xea\x1c\xd6\x74\xe1\x55\x14\x75\x76\x09\x54\x36\x66\x3f\xe9\x52\x58\xb7\x16\x2a\x09\x63\xa2\x04\x6f\xb3\x97\xc2\x8b\x24\x4d\xc7\xf0\x67\x4c\xbf\xea\xd9\x58\x57\xac\x28\x17\x03\x67\xdc\x75\x3e\xb9\x84\x51\x5c\xfb\xca\x94\xa5\xd0\xc5\xe8\x24\x6b\xf8\x9c\x4c\xe0\xc6\x14\x62\xc7\x1e\x66\x11\x72\xca\x27\x61\xdc\x1d\xf6\x07\x61\xdb\x14\x89\xe2\x58\x96\xdc\x10\xbd\x6b\x86\x0b\x75\xfc\x27\xc2\x90\x7a\x22\x70\xdd\x30\xc3\xf7\x9a\xff\xb3\x42\x81\x42\xc1\xd6\x58\xc5\xfe\xcc\xec\xbc\x1c\xe5\x31\xc7\x97\x84\xf5\x9a\xe4\xf2\x1b\xe1\x1c\xc8\x90\xb1\x9a\x99\x70\xd6\x80\xbf\x22\x11\xb6\xc6\xda\x1d\x88\x05\x75\x0d\x45\x9c\x55\x48\x17\x22\xc4\x16\xf7\xa3\x16\x06\xa3\xd7\xf9\x41\x8d\xc9\x63\xbf\x06\xd3\x1b\x28\xa4\x13\x0b\x85\x71\xec\x52\x9a\x02\x5b\x3a\xe6\x1e\xfd\xc9\x25\x14\x59\x7b\x86\xf1\xb8\x82\x29\x4c\x50\x48\xa9\x07\xb8\x9d\x38\xf3\x3e\x60\x7e\xd8\x93\x1e\xbd\x82\x4b\xc0\xfd\x59\x91\xba\xdb\xa1\x2f\x54\x21\x72\x09\x92\xc2\x39\x4a\xbf\x0e\x71\x90\x89\x93\xf3\x94\x89\x97\xd2\xba\x98\xa5\x61\x8b\x4f\x6f\x11\x1c\xc5\xb8\x70\x5e\x7b\x2c\xd3\xe2\x7c\x91\x76\x5f\x51\x6f\x1e\xd6\x5a\x8b\x3a\xb6\x16\x1d\x8e\xbf\xa4\xed\x4c\xc5\xd5\x09\x29\x1d\x0b\x3a\xda\x9c\x47\xba\x3c\xe4\x29\xc0\x99\x12\xfd\x9a\x4e\xe3\x40\x82\x46\xd3\xf5\xc0\x7a\xd0\x13\x66\x5b\x7a\xd9\xdf\xf3\xd5\xb4\x75\xb3\x55\x64\xaa\xee\xaf\xd2\x4f\x78\x4e\x7d\x3e\xbd\x0d\x08\x1d\x76\x7f\x6b\xf2\x47\xcb\xf7\x00\xa8\x1c\x9f\x64\xeb\xf6\x72\x5e\x2d\x92\x53\xf8\x29\xfc\x1d\x3a\x79\xed\x8f\x16\x68\x1f\xf9\xe8\xcf\x03\xf1\x7c\x46\x15\xfd\x3b\x6f\x3c\xe4\x12\x8a\x2c\xf8\xde\x7d\x67\x86\x3c\x3b\x1a\x22\xd7\xb5\xdf\x4b\x93\x74\xfc\x71\x5c\x57\x53\x21\xf2\xb3\x5a\xfa\xb2\x44\x9c\xd8\x86\x99\x79\xd8\x68\x1c\x09\xb7\xef\x14\xff\x7e\xd9\x5c\x2a\x0e\xc2\xff\x63\xc1\x22\x5e\x59\x10\xb7\xd0\x71\x19\x1e\xd0\x4a\x1e\x62\xb6\x9d\x26\x56\x3a\xad\xc5\x8c\xe5\x01\x7a\x32\xba\x78\xf7\x8e\x6b\xca\xb0\x74\x47\x9a\x87\x26\x23\x1f\x8d\x95\x39\xae\x7c\xe6\x25\xcc\x20\x0c\xdf\xff\x05\x45\x3d\x3e\xb3\x3f\x71\xf5\xd0\xdc\x3a\x7c\x4a\x7f\xff\xb6\xfa\x1e\xd1\xde\xc3\xb0\x2b\x47\x50\x1d\x4c\x9e\x81\x36\xb0\x8c\xad\x38\x6f\x34\xfc\xf7\x82\x1d\x7a\x78\x36\x49\x7b\x07\xf6\xff\x1b\x00\x00\xff\xff\x0b\xf5\x91\xd7\x6e\x28\x00\x00")

func _hardcodedDoerGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedDoerGo,
		"../_hardcoded/doer.go",
	)
}

func _hardcodedDoerGo() (*asset, error) {
	bytes, err := _hardcodedDoerGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/doer.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xeb, 0xd5, 0x50, 0x29, 0x13, 0x67, 0xba, 0xf5, 0xf1, 0x59, 0x97, 0x63, 0x87, 0xc0, 0x3f, 0xe5, 0xc6, 0xda, 0xc0, 0x7, 0x6c, 0x4e, 0x4c, 0xc2, 0xdc, 0x12, 0xef, 0x1f, 0xaf, 0x7f, 0x8e, 0x40}}
	return a, nil
}

var __hardcodedMiddlewareGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x5f\x6b\xe3\x46\x10\x7f\xb6\x3e\xc5\x74\x4b\xc8\xea\x70\xe4\x7b\x28\x14\x02\x7e\x28\xe9\xa5\x79\x39\x38\x2e\xa1\x2d\x94\xc2\x6d\x56\x23\x69\xb1\xbc\xab\xce\x8e\xac\x9a\xe0\xef\x5e\x66\x25\x39\x51\x48\xd3\xa7\x3e\x58\xde\x9d\x99\xdf\x6f\xfe\x6f\x67\xec\xce\xd4\x08\x11\xe9\x80\x94\x65\x6e\xdf\x05\x62\xd0\xd9\x4a\x55\x7b\x56\xd9\x4a\x79\xe4\x4d\xc3\xdc\xc9\x99\x7a\xcf\x6e\x8f\x9b\x12\x1f\xfb\x5a\x65\xd9\x4a\xd5\x8e\x9b\xfe\xb1\xb0\x61\xbf\xb9\x69\xf1\x80\xb4\xd9\x99\xe3\x01\xf1\xaa\x0e\x9b\xc3\x8f\x9b\x36\xd4\x35\x92\xca\xf2\x2c\xdb\x6c\xe0\x8b\xf1\xce\x7e\x76\x65\xd9\xe2\x60\x08\xa1\x0d\x75\x04\xe3\x8f\xd0\x89\x22\x16\x70\x1b\x08\x7c\x18\xd6\x30\xe0\x25\x21\xd8\xe0\xd9\xf9\x1e\x81\x1b\x0a\x83\xf3\x35\x70\x83\xa3\x31\xf4\x9d\x30\xca\x3d\xb2\xb1\x3b\x88\x01\xb8\x71\x11\xf6\xe6\x08\x96\x4c\x6c\x46\x5b\x0a\x16\x63\x2c\xb2\xaa\xf7\xf6\xb5\x7f\xdd\x80\x24\x56\xdc\x19\x5f\xb6\x48\xf9\xe2\x06\x4f\xd9\x8a\x90\x7b\xf2\x0b\xf1\x6d\xef\xad\x16\x32\x3d\x8c\xf2\xaf\x18\xbb\xe0\x23\xfe\x46\x8e\x91\xd6\x40\xf0\x61\x92\xff\xd5\x63\xe4\x5c\x78\x56\x25\x56\x48\x90\x60\xa3\x60\x95\x92\xf8\x44\x04\xd7\x5b\x20\xb4\xe1\x80\xa4\x73\x51\xb8\x0a\xce\xba\xed\x16\xbc\x6b\x47\xc0\x14\x8c\x1c\x4f\xf2\x39\x18\x02\xa4\xf4\x0b\x94\x89\x24\x0e\x8e\x6d\x03\x2f\x99\xe7\x73\xa1\xf9\xd8\xe1\xe4\xda\x9a\x28\x45\x23\xe7\xeb\xeb\xc4\x2c\x34\x5b\xa8\xf6\x5c\x7c\x12\xb2\x4a\xcf\xb0\xfc\x6c\x9e\xbc\xbc\xb4\x9e\x4d\x44\x54\x62\x65\xfa\x96\xff\x85\x4c\xf5\x7e\xe7\xc3\xe0\xa7\xbe\x5d\x7c\x7f\x80\x50\x81\xc4\x03\x17\x0f\x6a\x7d\x66\x7a\x3e\xe5\x63\x92\xf2\x1d\xe7\xa7\xb8\xa5\xb0\xbf\x09\x9e\xf1\x6f\xd6\x54\xcc\xa7\x3c\x1f\x7d\xfc\xac\x55\x82\xaa\x75\x8a\x60\xc2\x7c\x7e\x52\x48\xa4\xae\x25\xf6\x35\xa8\x34\x25\x4c\xc6\xa2\xba\x9e\xb2\xd7\x69\x8c\x8b\x7b\xd1\xe8\x3c\x3f\xe5\xe7\xc6\x2c\x2a\x70\x4a\x8d\x69\x8a\x7b\x59\x91\xbb\x87\x87\x2f\x7a\x58\x83\x68\x4e\x79\x76\x4a\x73\x1d\xd9\x70\x1f\x97\x93\x00\x03\x99\x2e\x82\x01\x9a\xc4\x30\x24\x79\x96\x32\x7f\x13\x11\x99\x7a\xcb\xd2\xa4\x37\x26\x2b\x5b\x8d\x18\x70\x9e\xc5\x6d\x1a\x68\x1d\xe1\xc3\x5b\x54\x39\xa4\xff\x3b\x34\x25\x92\xb6\xa1\x44\x81\xa5\xfe\xc7\x62\xe2\xd9\x82\xc8\x45\xb0\xc4\x16\xaf\xa1\x73\x96\xbf\x22\x45\x17\xfc\x57\xe3\x6b\x84\x12\xad\x2b\x31\xc2\xd0\x20\x37\x48\xc0\x01\x8c\xb5\xd8\x31\x18\x38\x8c\x86\xc5\x98\xea\x02\x96\x56\x60\xd2\x4f\x5d\xc8\xe1\x31\x84\x36\x79\xb8\x69\x1d\x7a\x9e\x00\x37\x0d\xda\xdd\x8b\xc7\xc2\xca\x3d\xa6\xad\xb6\xc9\xee\xd9\x4f\xaa\xc5\x7b\xe0\x57\x9b\xbe\x06\xf2\xf5\x22\xb0\xff\x71\xf7\xe7\x6c\x65\xd1\x8b\xb1\xac\xc5\x2f\xc8\x5a\xfd\x7e\x35\x86\x7c\x35\x05\xa2\x64\xcc\xfe\x6b\xe0\x7f\x2a\xcb\xf9\xa6\xc6\x32\x5c\x4d\x0e\xd4\x7a\x2e\x88\xf0\xb8\x0a\xbe\x23\x5f\xcf\xb5\x9e\x56\x7f\x58\x34\xf7\x87\x8f\x1f\xf3\x17\x52\xfd\xc7\x9f\x8f\x47\x46\x2d\xbb\x7b\xdf\x91\xf3\x5c\xe9\x6f\x4f\x6a\x8f\x31\x9a\x5a\xb6\x46\x2d\xeb\x0e\x97\x17\xf1\x12\x7c\xe0\xa9\xf3\x58\xae\xa1\x6b\x51\x9e\x8b\xbe\xab\xc9\x94\xa8\x4e\xdf\x9e\x83\xca\x93\xaf\xf3\x2b\x76\x7a\x67\xa7\xfe\x09\x00\x00\xff\xff\xa1\x73\xce\xd9\x95\x06\x00\x00")

func _hardcodedMiddlewareGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedMiddlewareGo,
		"../_hardcoded/middleware.go",
	)
}

func _hardcodedMiddlewareGo() (*asset, error) {
	bytes, err := _hardcodedMiddlewareGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/middleware.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcb, 0x1, 0xb6, 0x9d, 0x16, 0xe7, 0x46, 0xa2, 0x49, 0x7d, 0xf6, 0xc, 0x20, 0x3a, 0xd4, 0x73, 0x64, 0xea, 0xcc, 0xe3, 0x1f, 0x62, 0xec, 0xc7, 0x5b, 0x68, 0x93, 0x2d, 0xaf, 0x96, 0x19, 0x61}}
	return a, nil
}

var __hardcodedTracingGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x59\xdd\x6f\xdb\x38\x12\x7f\xb6\xfe\x8a\x59\x01\xdd\x4a\x85\x22\x35\xdd\x6e\x77\xe1\x85\x1f\xf2\xd5\xd6\xb8\x24\x6b\x24\x59\xf4\x0e\x87\x43\xc0\x48\x63\x89\x57\x89\xd4\x91\x94\x3f\x50\xe4\x7f\x3f\x0c\x45\xc9\x92\xe3\xe4\x76\x0b\x5c\x1e\x0c\x9b\x9c\xf9\x71\xbe\x67\xc8\xd4\x2c\xfd\xca\x72\x04\x8d\x6a\x85\xca\x28\x96\x72\x91\x7b\x1e\xaf\x6a\xa9\x0c\x04\xde\xc4\x4f\xa5\x30\xb8\x31\xbe\x37\xf1\x51\xa4\x32\xe3\x22\x4f\x1e\xb8\x60\x6a\x3b\x5a\x2a\x70\x43\xbf\x97\x95\xa5\x14\x68\x92\xc2\x98\x9a\xbe\x4b\x4d\x9f\x86\x57\xe8\x7b\xde\xc4\xcf\xb9\x29\x9a\x87\x38\x95\x55\x72\x56\xe2\x0a\x55\xf2\x95\x6d\x57\x88\x47\xb9\x4c\x56\xbf\x24\xa5\xcc\x73\x54\x44\x99\x24\x30\x24\xce\xd8\x0a\xd3\xbc\x48\x72\x79\xa4\x6b\x5c\x27\xf4\x41\xc0\xb9\x8c\x65\x8d\xc2\x60\x89\x15\x1a\xb5\x8d\xb9\x4c\x48\x66\xc5\x1f\x12\x2e\xb4\x51\x4d\x85\xc2\x30\xc3\xa5\x48\x06\x70\xb9\x54\xbc\x2c\x59\x52\x35\x9b\x44\x1a\x2c\xab\x66\xf3\x1c\x1a\x6d\xbf\xb4\x97\x30\x43\xa7\x35\x06\x5f\xa4\xc2\x0d\xd9\x14\x95\x4e\xa4\x29\x6b\xfb\x41\xf6\xfe\x3e\xa6\xdd\xb7\x5c\xd5\xe9\x8b\x10\xb5\x92\x35\xcb\xad\x01\x5e\xa4\xd3\xd9\xd7\x44\xa1\x96\x8d\xb2\x32\xe9\xec\xab\xc5\x87\x97\x39\xfe\xb7\x0a\x3d\x55\xfb\x69\x50\x53\x88\x68\xac\x52\x29\x56\x2f\xa1\xb7\x14\xc9\xea\x38\x3e\x7e\x17\xbf\x7d\xf1\x0c\x27\x45\xe8\x79\x2b\xa6\x20\xc3\x25\x6b\x4a\x73\x26\xcb\x12\x53\x23\xd5\x67\xa9\x0d\x68\xa3\xb8\xc8\x61\x06\x7e\x29\x53\x56\x16\x92\xc4\x38\x44\xbd\xa0\xc8\x6f\xb8\x30\xc7\x1f\x60\x06\xef\x7f\x3a\xfe\xc5\xf3\x92\x04\x3a\x33\x4a\x05\x46\x42\xa3\x31\xb6\xdc\x83\xe5\x81\xa1\xe3\x3b\xdc\x98\x2b\x56\x2f\x76\xbb\xb3\xf1\x3e\x09\x7c\xd6\xa6\xd6\xb7\x47\x48\x12\xb0\x2a\xd4\x4c\xa1\x30\x50\x20\xcb\x50\x79\xcb\x46\xa4\x70\x8b\xa6\xa9\x3f\x95\xf2\x81\x95\x96\x69\xa1\xe4\x8a\x67\xa8\x4e\x44\x76\xe1\x82\x23\x48\xcd\x06\x5c\x9e\xc6\x0e\x34\x84\xa0\xf3\x60\x7c\x5b\x33\xd1\xd1\x46\xf0\xa6\x5f\xb7\x78\xaa\x03\x8c\x00\x95\x92\x2a\x84\x6f\x36\xf7\x34\xab\xea\x92\x8b\x7c\xa1\xe4\x03\x7b\xe0\x25\x37\x5b\x98\xce\xe0\x6d\xfc\xf6\xd8\xee\x73\x7d\x49\x76\xa4\x35\xa9\xe3\x4f\x68\x50\xac\x02\xff\x7e\x7e\x7b\x7f\xf9\xfb\xd9\xc9\xa5\x1f\xc2\x6c\x06\xbe\x51\x0d\x45\x07\xd1\x2f\x7b\x96\xe7\x0f\x98\xc1\x71\xfc\xd6\xee\x3e\x02\x96\x1a\x89\x6b\xb5\x77\xc4\xdd\xcd\xc9\xd9\xfc\xfa\xd3\xfd\xed\xc9\xd5\xe2\x92\xbe\x2c\x6e\x7e\x3f\x3d\x39\x9d\x5f\xce\xef\xfe\xe1\x87\xbf\xc1\x0a\x7e\x98\x81\xef\xbb\x53\x26\x07\x8e\xf9\xa8\x64\x75\x21\x56\x56\x61\x02\xd7\x46\x51\xa4\xc5\x0b\xa6\x34\x7e\x2c\x25\x33\xc1\x2a\x82\x0f\xef\xc3\x16\x81\x2f\x2d\xe1\x0f\x33\x10\xbc\x13\x7e\x32\x51\x68\x1a\x25\x68\x29\x6a\x3f\x96\x95\x89\x2f\xc8\x82\xcb\xc0\x4f\x65\x53\x66\x20\xa4\x81\x9a\x30\xe1\xf5\x2b\xfd\x9a\xc2\x66\x49\xe0\x7e\x04\x2b\x07\xfd\xf8\xac\x8c\x30\x3b\x64\x20\x27\x79\x6b\x21\xfb\x49\xa7\x2e\x14\x17\xa6\x14\x81\xef\x0c\x3c\xf5\xa3\xce\xd6\xa1\xe7\x4d\x58\x96\x59\x35\x89\xf4\xb6\x26\xda\x65\xe0\xbf\xd2\xd3\x57\x99\x1f\x1d\xcc\x95\xa7\xab\x94\x13\x61\x5b\x93\x93\x04\x2e\x56\xa8\xb6\x70\xfc\x33\x68\x4c\xa5\xc8\x34\xac\xf1\x75\x59\x82\x51\x5b\xd2\x31\x95\x42\x60\x6a\xe8\xeb\x28\x59\x21\xed\xd0\x80\x99\x0e\xca\x14\xd8\x1d\x06\x94\x97\x94\x1c\x20\x97\xd0\xe7\xe8\xd4\x26\xa0\xa3\xfe\x52\xa0\x00\xd5\x08\x41\x99\xcc\x05\x65\x54\xd6\xa4\x96\xc7\x14\x5c\x03\xd7\xc0\x40\xf3\x0c\x53\xa6\x22\x60\x22\x83\xf5\x80\xa3\x43\xb1\xd8\xe5\x76\xc0\xd2\xad\x74\xd0\xb2\xc6\x5e\xec\xa3\x5e\xec\xd8\x9b\x50\xd5\x3d\x2b\x39\xe5\x28\x05\xe5\xb0\x06\xc7\xd7\xb8\x6e\xb7\x02\x6f\x32\x19\x6f\x7d\xe1\xa6\xb8\x41\x67\x18\x2e\xc5\x02\x15\x97\x59\x70\xfc\xf3\x1b\x6a\x8b\xf1\xad\x35\x63\x18\x1d\xe4\xbb\x10\x59\x2d\xb9\x30\x01\xb9\xf1\x19\x9a\xb9\xd0\x98\x36\x0a\x03\xda\x0f\xbd\x89\x1e\x25\xbc\x8b\xf2\x9e\x8d\x24\xa5\x92\x11\xc1\x4e\x9d\x36\x1e\x0f\xf2\xfd\x9b\x61\x8e\xca\x32\xb9\xaf\x74\x64\x1f\x1a\xbd\x7c\x83\xcd\x7e\xcd\xa7\x21\x60\x9a\x24\x3b\x77\x1e\xbf\x7f\xf7\xe1\xd7\x84\xd5\xbc\xad\xd9\xda\x0f\x43\x0a\xac\x51\x18\x77\x22\xc0\x99\x42\x66\x30\xf3\x43\xef\x69\x12\xbe\x9c\x80\xb6\x94\x41\x4a\xfc\xe4\xd0\xae\x8d\x4e\xe1\xd5\xca\xb7\x9a\x85\xde\xe4\xd1\xf3\x26\xa6\x26\x15\x05\xae\xc7\xb5\x30\x18\x5b\x42\xe0\xfa\xc6\x75\xc6\x20\x0c\x29\x0c\xb0\x8c\x6f\xd1\xec\x31\x99\x3a\xdc\xd3\xa4\x25\x80\x8e\x62\xa0\x90\xb5\x77\x3b\xec\xc4\x94\xd5\xae\x6c\x93\x5f\xc2\x78\x2e\x96\xf2\x3c\xf0\xb5\x61\x8a\xc4\x3f\xb2\xa6\x52\x7e\xd4\x31\x5c\xb9\x22\xe4\x53\x4c\xa0\xd6\xfe\x14\xda\x3f\xfa\x1d\xb9\xbd\xae\x7c\x1c\x29\x66\xd0\x9f\x1e\x2a\x27\x2d\xe9\x63\xe8\x75\xc6\x1c\xab\x6d\x6a\x6b\x59\xef\xd1\x6b\x5b\xd1\x53\x33\x75\x76\x85\x67\x7a\x4d\x37\x4f\xc0\x9b\xee\x5b\xdc\x19\x32\x7c\xb6\x11\x91\x77\x5b\xbf\xf4\x04\xd7\x4f\x4e\xf6\x26\x24\xfa\x17\xa4\x4e\x3c\xaa\x22\xf3\x73\xc8\x51\xa0\xa2\xa6\x1b\xc3\x5c\x80\x54\x84\xb9\x94\xaa\xb7\x00\x95\xa6\xb5\x54\x5f\x21\x60\x06\x4a\x64\xda\xc0\x9a\x9b\xa2\x2d\x08\x96\x08\x29\x3e\x26\xae\x3e\x0d\x11\xa1\x6a\xb4\xe9\x7e\x62\xdb\xb4\x61\x7e\xae\xa1\x11\x7c\x29\x55\x55\x6e\x81\x19\x50\x4c\x64\xb2\x82\xa5\x92\x95\x45\x40\x61\xb8\x42\xb2\x6e\x8a\x54\xdd\x68\xba\xf8\xf0\x3e\x6e\x8f\xf8\x28\x15\xe0\xc6\x9e\x1a\x8d\x34\xd9\x1c\x29\xb6\x1d\x9f\x9e\x49\xd4\xb6\xad\x64\xd2\x4a\x4b\x10\xbd\x91\x28\xf3\x6e\x5b\xe9\x77\xbd\xff\xa4\x5c\xb3\xad\x6e\x97\x83\xd0\xd6\x0f\x4a\xf4\x17\x79\x16\x76\x0a\x39\x65\x1a\xb3\x60\xec\xa3\xf9\xf9\x0d\x95\x68\xb7\xf5\x34\xa0\xc2\xfe\x84\xbb\x02\x35\x42\xc5\x36\xbc\x6a\x2a\x0d\x4c\x21\x59\x3d\x6f\x98\xca\x80\xe5\x8c\x26\x73\xd0\xb2\x42\x53\x90\x43\x72\x49\x9f\x6b\x25\x45\x6e\xcb\xb6\x46\x41\xb7\x0a\x60\x60\xda\x7e\x90\x31\xc3\xa0\x11\xb8\xa9\x31\x35\x98\x95\xdb\x27\x8a\xd7\x4c\x5c\xf2\x8a\x1b\x3d\x9e\x7b\xda\x35\xaa\x17\x93\x93\x6e\x4c\x3f\x93\x8d\x30\x76\x63\x0a\xc7\x6f\xdf\x92\xc4\x93\x8b\x15\x0a\x33\xdc\xa0\xbf\x6e\xf3\x92\x8b\xaf\xfb\x7b\xdd\xe6\xa3\xd3\xf8\x94\x99\xb4\x40\x45\x0d\xa5\x92\x0a\x01\x97\x4b\x9e\x52\x69\x8d\x40\xaf\xb9\x49\x0b\xd2\x9f\x1b\x60\x4b\xca\x17\x9a\x82\x6d\x4b\xda\xd3\x62\x2b\xd2\x41\x5a\x39\xe8\x11\x89\x3b\x67\x9f\xe6\x33\x5b\x59\x0b\x2f\x79\xde\x28\x04\xd9\x18\x28\xe4\x1a\xe6\xaf\x2b\x67\x5c\xb2\x7e\x1f\xb6\x14\xe8\x7d\x6e\x2e\xb9\xd2\xe6\x49\x24\xf5\x05\xaf\xa3\x73\xbd\xe5\xa5\xda\xd7\xef\xed\x4f\xbf\xc1\x70\xf6\xa5\x46\x29\xab\x5a\x6a\x6e\xf0\x65\xca\xf1\x94\x1c\x8d\x26\xe8\x53\x96\xe7\x2c\xc7\x6f\x8f\xb6\x7f\xb8\xfa\x65\x6a\x2a\x56\x49\xf2\x67\xa6\xe6\x8f\x52\xdd\xa1\x36\xd6\x61\xc8\x84\x1d\x58\x1e\x6c\x3d\xc9\x68\xb6\x68\x04\x37\x9d\x9b\x22\x82\xa4\xb8\xac\x38\xf5\x15\x6d\xd3\x54\xd3\x11\xc0\x1e\xe4\x0a\x6d\x75\x91\x8d\xa1\xd1\xc3\xe6\xf7\x80\x37\x86\xb9\x81\x56\x3c\x0d\x4c\x00\x17\x47\x15\x56\x52\x6d\x09\xb3\xaf\x9f\x4b\x57\x04\xb8\x9d\x3f\x3a\x47\x65\xb6\x20\xeb\xf8\x4f\xdf\x04\x9c\x4e\x41\x08\xc1\x9b\xfe\xb6\x15\xcf\xc5\x95\x3d\xf1\xaf\xdd\x01\x7a\xd9\xa6\x33\xd8\x61\x5d\xe3\x7a\x1f\x2e\x08\x9f\xef\xa3\xf8\x5d\x3d\xd4\x79\x13\x0f\x75\xa2\x24\x81\xab\x66\x73\x6b\xdf\x2b\xae\x78\x96\x95\xb8\xa6\xe2\xd2\x59\xb8\xda\x2d\x99\x82\x19\xd0\x85\x1d\xc5\x1f\x10\x98\x31\x2c\x2d\x30\x23\x3f\x33\x18\xdc\xff\xdd\xe3\x47\x4c\xd0\x73\xd3\xd6\x58\xb3\xb6\x05\x56\xe4\x7a\x0a\xb6\x0d\xeb\xd6\x15\xed\x54\xc9\xb2\xac\xfd\xdd\x0e\x31\xc0\xc5\x52\x12\x2c\x85\x85\xc2\xff\x34\xa8\xcd\x91\xae\x31\xe5\x4b\x9e\x76\x3d\x9b\xd0\x6f\x78\x5e\x18\x10\x72\x0d\x6b\x04\x29\xca\x2d\xe8\xa6\xb6\x2f\x2d\x44\x44\x9e\xa7\x56\xc2\x85\x05\xa2\x76\xc2\x4c\xab\xc5\x39\x33\x2c\x93\x76\x8e\xc1\xd4\x74\x01\x71\xc0\x0e\x01\xe9\xc2\x53\xbc\x66\x15\xba\x2b\x6f\x08\x44\x1c\xd0\x24\x16\x7f\x66\x22\xa3\xe6\x06\xc3\x5f\xe4\x6c\x69\x4a\xb2\x84\x1d\x13\xed\x63\x48\x7c\x18\x33\xea\xf7\xa9\x46\xec\xd2\x56\x07\xd6\x9f\x9f\x0e\xe5\x3e\x4d\x78\xe3\xb1\xe8\x24\xb3\xd5\x7d\x67\xfb\x81\xdb\xfc\x9d\xff\x5b\xb9\xe1\x65\xc9\x3b\xe2\x56\x83\x91\x9a\x1f\x89\xdf\x82\xa8\x75\xcb\x77\x83\xba\x96\x42\xe3\x17\xc5\xdb\xf9\x04\xde\xb8\x75\xeb\x34\x1b\xf7\xb6\x7d\x39\x2d\xa1\x60\x1a\x70\x43\x5e\xa6\x6c\xb4\x69\x5f\x33\x11\x5b\x1f\xd6\x8d\xa1\x82\xce\x85\xf3\x7c\x6a\x36\xfb\x5e\x77\x68\x2b\xa6\x20\x65\x4a\x71\x1c\xbf\x12\x7c\xb6\xf7\xfc\x33\xb7\x33\x7b\x7e\xef\x1b\xcd\xaa\xff\x07\xc1\x52\xd3\xfb\xfc\x19\xdf\xc5\x17\xed\x21\x81\xea\x5e\x16\x82\x30\xea\x94\x09\x1d\x8c\xae\x71\x1d\x9f\x37\x55\x1d\x28\x27\x77\xb7\x43\x35\x43\xa7\x7d\x09\xb1\x2d\xf9\xc9\xb8\x4b\x8b\x3d\xf8\x13\xc8\x16\x22\xb4\x06\xd0\xcf\x23\x0d\xe4\xb3\x18\x8a\x67\x44\xdc\x09\x44\xea\x05\xfe\xdf\x8f\x9c\xa7\x8f\xe6\xe7\xbe\x25\xe3\x4b\x20\xca\xfe\xc9\x80\x0e\xa1\xb2\xd4\x0f\x0b\x3a\xe8\x9f\xf7\xe2\x5b\x9b\x50\x7b\x30\x11\x01\xb4\x67\xba\x47\x8b\xef\x84\xd1\x63\x43\x74\x13\x57\x10\x76\x0c\xa1\x3b\xc5\x1b\x18\xd7\x79\xb0\xb5\x89\xe3\xed\xe6\xa1\x81\x91\x9f\xa0\x77\x76\x56\xef\x5a\x2b\x9d\x95\x52\x60\xe0\x10\x0f\xf8\xf5\x5d\xef\x58\x67\xb5\xd6\xab\x7b\xa8\xbf\x81\x4e\xe3\xcf\x4c\xf7\xa2\x77\xb6\xa8\x99\x98\x9f\x47\xad\x98\xf3\x73\xcb\x99\x5a\xd6\x91\x7e\x11\xad\x3e\x55\xdb\x42\xec\xbf\x75\xec\xca\xef\x14\xc8\x78\xee\x04\x9f\x7e\xb8\x63\x7a\xc6\x9d\x1e\x14\x48\x6e\x31\x73\x35\x35\x95\x62\x85\x54\xe0\x0b\xdc\xb8\x92\xa9\xed\x13\x9f\x1d\xd2\xa9\x22\x47\xa0\x25\xe5\x0d\x98\x42\x6a\xa4\x1f\xb6\x28\xa7\x52\x29\x2c\xdb\x0b\x66\x29\x73\x6d\x5b\x43\x7b\xab\xb5\xd7\x0b\x6d\x4f\xe2\x4b\x28\x51\x04\x9d\x48\x30\x9b\xc1\x4f\xef\xe0\xc7\x1f\xed\x6a\x2b\xb5\x5d\x3c\xfe\x00\xdf\x80\x12\x7c\xf4\x66\xd2\x36\x81\x29\xed\x3e\x6c\x0d\x42\xf0\xd3\xbb\xa3\xb4\x60\x8a\x84\x0d\x23\xf8\xd5\xad\x1e\x7f\xd8\xad\xba\x4b\x89\x1d\xa3\x6b\x1a\x38\xb2\x56\x90\x89\x13\xe1\x54\x47\x70\x4f\x1e\x28\x70\x13\x9f\x63\x2a\x33\x74\x86\x1e\x99\x6d\x72\xe0\x72\x3a\xcc\xb1\xf8\x24\xcb\xba\x5f\xbe\xe5\xbc\xe7\x99\x1f\xb5\xbc\x93\xf1\x5b\x53\xe6\x47\xd0\xfe\xcf\x20\x3e\xe5\xf9\x85\xc8\x38\x13\xf1\x1f\xd6\xbe\x41\x2f\xd5\x3f\x7f\x9d\xfe\xcb\x45\x78\x17\x30\xcf\x8b\xea\x0c\xf7\xd7\x25\x25\xc6\xef\x13\xb4\x13\xa9\x93\xf1\xd1\xeb\x3e\x8a\xd8\xb6\xe1\xcf\x77\x77\x8b\x40\xad\x23\xb0\xd5\x8f\xe6\xd2\xc9\xa3\x9b\x58\x06\xc3\xcf\x6e\x16\xdc\x4d\xe0\x19\xea\x54\xf1\x07\x3b\xa6\xd3\x68\xce\xea\xba\xe4\xed\x63\x98\x9d\x1b\xfe\xa0\x99\xd4\xde\x60\xd1\xd8\x70\x6b\xea\xd6\xcb\xb6\x9d\xd8\xc1\xa9\xbf\xa1\xef\x86\xac\x03\x97\x6e\x4a\x47\x6a\x46\xac\xae\x07\x13\xc2\x5e\x77\x3e\xeb\x5e\x4d\x3a\x2e\xf7\xfe\x32\x7c\xe6\x5d\xfc\x7e\x7e\x4f\x25\x74\x50\x38\x3b\xcc\xf1\x7b\xf0\xc9\x62\x71\x7f\x7d\x72\x75\x41\x18\xbb\x37\xdd\x01\xc5\x9f\x45\x1a\x01\x79\x13\xe5\x22\xa3\x57\xf1\x0a\x55\x8e\x81\x9d\x07\xdc\xca\x79\x7b\x8f\xb6\x8f\x62\xbb\xd5\x6b\x5c\x53\x7d\x1c\x14\x66\xdb\x58\xda\x7f\x36\xc4\xb7\x69\x81\x15\xfb\xe3\xe6\x32\x1a\xad\xee\x06\xa0\xbf\xe1\xb6\xab\x4b\x4e\x4c\x0b\xef\x2e\x47\x6e\x16\x51\xde\xa3\xf7\xdf\x00\x00\x00\xff\xff\xa9\xc9\x11\x1a\x5a\x1b\x00\x00")

func _hardcodedTracingGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedTracingGo,
		"../_hardcoded/tracing.go",
	)
}

func _hardcodedTracingGo() (*asset, error) {
	bytes, err := _hardcodedTracingGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/tracing.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x13, 0x52, 0xa2, 0xe3, 0x1a, 0xd8, 0xf6, 0x2b, 0x46, 0x18, 0x5f, 0x24, 0x19, 0x6, 0x2, 0x4b, 0x1d, 0x56, 0xc2, 0xfa, 0x5f, 0xa, 0xf6, 0x3b, 0x91, 0xbc, 0xbe, 0x3b, 0xbf, 0x2, 0xe5, 0x28}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../_hardcoded/doer.go":       _hardcodedDoerGo,
	"../_hardcoded/middleware.go": _hardcodedMiddlewareGo,
	"../_hardcoded/tracing.go":    _hardcodedTracingGo,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"..": {nil, map[string]*bintree{
		"_hardcoded": {nil, map[string]*bintree{
			"doer.go":       {_hardcodedDoerGo, map[string]*bintree{}},
			"middleware.go": {_hardcodedMiddlewareGo, map[string]*bintree{}},
			"tracing.go":    {_hardcodedTracingGo, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
