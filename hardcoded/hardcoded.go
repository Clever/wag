// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../_hardcoded/doer.go (10.364kB)
// ../_hardcoded/middleware.go (1.683kB)
// ../_hardcoded/tracing.go (6.95kB)

package hardcoded

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __hardcodedDoerGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x3a\x7f\x6f\x1b\x37\xb2\x7f\x4b\x9f\x62\x22\xe0\x2e\xbb\x8e\xbc\x2b\xe7\xce\xe9\x41\x7d\x3e\xa0\xb5\xdd\xd7\xe2\xa5\x49\x50\xb9\xaf\x01\x82\xe0\x4a\xed\x8e\x24\xd6\x14\xa9\x90\x5c\xc9\x82\xcf\xdf\xfd\x61\x86\xdc\xd5\xae\x24\x3b\xb9\x6b\xf1\xf0\x9e\xff\x90\xb4\xcb\x99\xe1\x70\x7e\xcf\xd0\x2b\x51\xdc\x8a\x39\x42\xa1\x24\x6a\xdf\xef\xcb\xe5\xca\x58\x0f\x49\xbf\x37\x98\x6e\x3d\xba\x41\xbf\x37\x28\x8c\xf6\x78\xe7\xe9\x27\xea\xc2\x94\x52\xcf\xf3\xdf\x9c\xd1\xfc\xc2\x5a\x63\x19\x4a\x9a\x5c\x9a\xca\x4b\x45\x0f\xca\xcc\xe9\x6b\x29\xfc\x22\xb7\x42\x97\xf4\xa0\xd1\xc7\xaf\x7c\xe1\xfd\x8a\x7e\xbb\xad\x2e\xe8\xdb\xcb\x25\x0e\xfa\xfd\xde\x60\x2e\xfd\xa2\x9a\x66\x85\x59\xe6\x62\x86\x77\xf9\x62\xeb\xbc\x95\x77\xa7\x73\x53\xff\x1c\x74\xa1\x4a\xa3\xcd\x5a\xe8\x85\x2c\x31\xc7\x35\x6a\xef\x4c\x65\x0b\x64\x28\xa3\x84\x9e\x67\xc6\xce\xf3\xbb\x9c\x76\x8d\xe7\xc8\x0b\x7f\x17\x19\x50\x66\x3e\x47\x0b\x83\xb9\x59\xdd\xce\x33\xa9\xf3\x4b\x85\x6b\xb4\xf9\xad\xd8\xae\x11\x4f\xe7\x26\x5b\xbf\xca\x03\xd0\xa0\x9f\xf6\xfb\x79\x0e\xa5\x41\x0b\xd2\x81\xd0\x20\xb5\x47\x3b\x13\x05\xc2\xcc\x58\x18\x94\x46\xea\xf9\x00\x88\x34\x58\xfc\x54\xa1\xf3\x0e\x56\xc6\x39\x39\x55\x5b\xd8\x48\xbf\x80\x8d\x15\xab\x95\xd4\xf3\xbe\xdf\xae\x30\x92\x6a\x88\xdc\xf7\x7b\x57\x26\x29\xe0\x84\x28\x64\x97\xac\x90\x21\xd8\xf8\xfc\x53\xa0\x98\x42\x52\x3f\xbb\x95\xd1\x0e\x87\xc0\x2a\x48\xfb\x0f\xfd\x40\xd5\xac\xde\x88\x25\x5e\xfa\x3b\x70\xde\x56\x85\xbf\x7f\x60\xbe\xa7\xc2\x61\xa4\xf1\xbd\xd0\xa5\x42\x0b\x2b\xb4\x33\x63\x97\x0e\xfc\x02\x79\xbd\xc3\x7b\xa0\x46\xaf\xaf\x88\xcf\x1d\xb1\x59\xa5\x0b\x48\xca\x66\x29\x85\xdf\xc1\x36\x9d\xda\xa2\xaf\xac\x86\xa8\x96\xec\xca\x24\x36\xbb\x0c\xba\x4a\xd2\x21\x14\x43\x08\xc7\xcb\x73\xb0\xe8\xed\xb6\xe6\x9f\x1e\x24\x3a\x38\x1f\xbd\xef\x4a\x3d\xb0\xce\xb0\x2d\xde\x69\xab\x12\x76\x7f\x24\x7e\xde\xdc\x6e\xdf\x19\x25\x8b\x2d\xfc\xb4\xfb\x1d\xf7\x6b\xbd\x81\x12\x67\x52\xa3\x03\x11\x28\xc3\x8a\x5f\x67\x61\xb3\x36\x60\x47\xa5\x79\x0e\xdf\x8a\xe2\xd6\xcc\x66\x0e\xc2\x41\x83\xbc\x75\xb5\x9c\xa2\x05\xa1\x4b\xf0\x72\x29\xf5\x1c\xcc\x2c\x12\x16\xde\xe3\x72\xe5\x5d\xd6\xef\xd5\xa8\x49\x0a\x1f\x3e\x92\x97\x64\x57\x95\x15\x5e\x1a\xcd\x94\x79\x57\xb0\x58\xa0\x5c\x63\xa0\xdb\x16\xc4\x10\x84\x83\x0d\x2a\x45\xdf\xb4\x68\xd1\x55\xca\x83\x99\x31\x76\xed\x89\x51\x69\xcf\x1d\xfc\x7a\x65\x7e\x85\x25\xfa\x85\x29\xb3\x7e\x8f\xa9\x27\x1d\x3d\x0e\xe1\x11\x35\x4e\x8d\x51\x51\x66\x13\xa9\xe7\x0a\x9f\x92\x9c\x5f\x08\xdf\x68\x4f\xd4\xdc\x82\xd1\x05\x06\x69\x1e\x92\xe8\xd8\xf2\x11\x81\x0a\x0f\x5b\x53\x81\x5b\x98\x4a\x95\xcd\x36\xd8\xd0\x3e\x73\x58\x18\x5d\x82\x98\x79\x72\x3a\x0f\x33\x21\x95\xcb\xa2\x31\x1f\xec\x97\xc2\xe3\x92\x6f\x99\xec\xde\xca\xfd\x19\x9c\x00\xbf\x99\xf0\x6e\x0f\x6d\x2b\x82\x8d\x54\x2a\x72\xa6\x8d\x3e\x7d\xf7\x76\x72\x33\x0c\xbf\xbe\xb9\xb9\xfc\x7e\x17\x32\xf8\x30\xe7\xef\xdf\x67\x84\x7a\xf3\xf6\xea\xed\x18\x7e\xf0\x64\xad\x0e\xb4\xf1\x50\x54\xd6\xa2\xf6\x6a\x5b\x5b\x8b\xde\x06\x25\xd4\xe2\xc0\x12\xa6\xdb\x47\x94\xfb\xc4\x81\x83\xb6\x2d\x7e\x82\x3d\x8d\x5b\x74\xab\x63\x6a\x6f\xab\x9e\x64\x22\x67\xfc\xf6\xd9\x05\x68\xa9\xe0\x9f\xff\xa4\x13\x65\x3f\xb2\x31\xc1\xc5\x05\x0c\xe8\xc0\x83\x63\xef\xe9\xf8\xb4\xd0\xef\xf5\x68\xaf\x6c\xe2\x85\xaf\xdc\xa5\x29\x11\xfe\x03\xce\x47\x23\x22\x5e\x4b\x7c\x26\x94\xc3\x7e\xef\xa1\x51\x81\xb7\x15\x46\x31\x5f\xdf\xad\x8c\x46\xed\xa5\x50\x47\xad\x4f\x03\xee\x20\x3a\x4e\x1c\xac\xee\x11\xfc\xa7\x4d\x6f\x26\xd7\x14\x25\xe3\x5b\x8e\xf2\xad\x5d\x14\x45\x83\xc2\xa2\x70\xe4\xe1\x1b\x21\x3d\xdb\x87\xe3\x88\x8c\x7e\x83\xa8\x1b\xc5\x8f\xe1\x6c\x34\x1a\xc2\x4b\xfa\xf8\x2b\x7d\xfc\x8d\x3e\x28\x40\x9c\xbd\x1a\x8d\x60\x29\x95\x92\xc1\x8a\x1d\xbc\xc8\x4f\xa1\x5a\x81\x37\x70\xfe\x27\xf8\x4d\x7a\x8f\xb6\x56\xed\xf1\x53\x7c\x81\x41\xc3\xf8\x02\x96\xe2\x16\x93\xbd\xe5\x21\x9c\xa7\xfd\x9e\xc6\x3b\x86\x38\x1b\x8d\x6a\x23\xff\x71\xc7\x51\xbf\x67\x75\x49\xcb\x94\xec\xb3\x37\xb8\x49\xea\x1f\x13\xce\xc7\x09\x23\xbc\x31\x9b\x24\xcd\x7e\xd6\xf2\xee\x8d\xd0\x26\x49\xd3\xb4\xdf\x43\xc2\x1a\x65\xa3\x73\xc8\x73\x3e\xd6\x39\xe5\xa5\x02\xb5\x8f\xe7\xea\xf7\x28\xbb\xca\x48\x7c\xce\x71\xbd\xb6\x88\x0f\xf2\x23\x5c\x00\xb3\xf6\x02\x3a\x4c\x27\x49\x62\x75\x99\x7d\xa7\x8c\xf0\xaf\xfe\x9a\xa4\x27\x2f\xd3\xd3\xb3\xf4\x04\x4f\x66\xf1\x0d\x21\xd1\xfe\xe1\x60\x27\x17\xf0\xb2\x6d\x55\x16\xfd\xff\x59\xdf\x7d\x4c\xc1\xff\xff\x1d\xf8\x8d\x39\x9e\x35\x82\x93\x52\x82\xd4\x54\x9e\x05\xe1\x91\x43\x35\xb9\x23\x66\xe1\x2e\x81\xa7\x1d\x97\xc2\xc1\x72\xe5\xb7\xe0\x94\x2c\xb0\x16\x6e\x87\xc2\xbf\x99\x05\xba\x61\x5f\xa8\x8d\xd8\xb6\xe2\x05\x9d\xff\x91\xdd\xfe\xd5\x84\xdb\xe2\x21\x88\xb5\xae\x01\x59\x40\xb1\x84\xea\x8a\xe1\x17\xe9\x17\x6d\x19\x35\xd2\x00\x8d\x1b\x88\x15\x72\x30\x63\xb3\x46\x6b\x65\x19\xeb\x8a\xd0\x20\x80\x99\xfe\x86\x85\x7f\xee\x9a\x62\xac\x29\x83\xf8\x44\x7b\xe4\x93\xc2\xdf\xd5\x44\xeb\x92\x6e\x08\x8f\x94\x5c\xe9\x3e\x64\xbb\x36\x8c\x2b\x44\xff\xbf\x85\xaa\x90\x28\x0f\x3b\xe7\xbc\x7f\xe8\x50\xe6\x8a\xb1\x2e\x55\x4f\x9a\x5a\xf0\x8f\x28\x56\xeb\x2d\x86\x60\x6e\x39\x2c\xed\xaa\xd5\x2c\x30\xd7\xe5\x2b\xcd\x92\xf6\x31\xd9\xd1\x9e\x99\xdb\xda\x2b\x1a\x59\x5c\x40\x99\xb5\x9e\xd9\x49\x9a\xcc\x42\xfb\xec\xd6\xb2\x9d\x61\xf6\x7b\x6b\x61\x8f\xf9\x78\x58\x68\xfc\xbc\xcf\x35\xdf\x44\xac\xb1\x53\x18\x4d\x4d\x49\x39\x0a\x0a\xaa\xff\x37\x08\x0b\x06\x30\x61\xb3\x0c\xde\xfa\x05\xda\x8d\x0c\x6b\x1c\x05\x19\x40\x28\x8b\xa2\x24\xf3\x11\x25\xd3\xe5\x16\xa2\x9a\xcd\xd0\x82\xd1\x4d\x74\x2b\x3b\x5b\x31\x3a\xd5\x5d\x19\x4c\x10\x19\x8d\x18\x1e\xe7\xb9\xf3\x74\x9c\x35\xda\x99\x32\x1b\xee\xeb\x18\x43\x1a\xed\xf2\x97\x7f\x19\x7d\x35\xfa\xdb\x57\xaf\x72\xda\x4b\xea\xf9\x29\x71\x7c\x6a\x66\xa7\x84\x7b\x1a\x69\x9f\x52\xe2\x35\x95\x3f\x5d\x9a\x52\xce\x28\x36\x34\x2b\xce\x0b\x1f\x65\x31\xad\x66\xf0\xe1\x23\xf5\xb5\xac\x03\x9b\x7d\x4b\x87\x8f\xf1\x8e\xb4\xd1\x15\x58\xaf\x37\xad\x66\x21\x52\x5e\x40\xe8\x6d\xb3\x9f\x50\x94\xdf\x28\x95\x04\x5c\xca\x1f\xdd\xa8\x49\x54\x6a\xa3\xd5\x52\x31\x76\xbf\x47\x9a\x7c\xe8\x87\x4c\x56\xd7\xbd\x94\xf6\xbe\xe6\xe8\xf7\x75\xfd\xee\xc5\x0b\xc6\x3f\xca\x5a\xcf\x96\x96\x70\x22\x1f\x6f\xcc\xea\x52\x19\x87\x36\xe1\x36\x9d\x32\xed\xb7\x2c\xfe\x64\x5a\xcd\x38\xaf\xf5\x22\x8d\x0b\xb0\x65\x64\x81\xa3\x73\x7d\xa0\x32\x2b\xa9\xd5\x0a\xdd\x55\xd8\x34\x72\x76\x71\x01\x0a\x75\x52\x9b\x5e\x4a\x21\xff\x59\xdb\xf8\x62\xa6\x09\x99\x85\xe9\xa5\x81\xc7\xa9\x45\x71\x1b\xf7\xca\x73\x60\x0e\xeb\xc6\x83\x6d\x32\x98\x1b\x1b\x06\x19\xc8\x5c\x48\x5d\x27\x0d\x62\x36\x63\x0c\xb2\xe9\x5e\x28\xa3\x15\xe2\xaa\x61\xe4\x43\x64\xf0\x63\xda\x4d\xd5\x91\x87\x18\x75\x0b\x69\x8b\x4a\xfa\x6f\x89\x15\xb4\xdc\xff\xc9\xe5\x4a\xe1\x12\xb5\x8f\xa1\x2c\x40\xc0\x34\x80\xc0\x8a\x1a\x2e\xab\x39\x67\x4f\xd0\x43\x89\xd3\x6a\x4e\x3e\x40\xca\xa1\x6f\xb3\x42\x2b\x3c\x76\x90\xa5\x06\x01\x4b\x4a\x71\x9b\x05\x5a\xa4\x96\x82\xed\xdb\x68\xb5\x05\x65\xe6\x2d\x56\x80\x4d\x30\x94\x72\x0c\x43\xa5\xc0\x54\x99\xe2\x96\x0b\x80\xa6\x78\x98\x59\xb3\x84\xb9\xa1\xc4\xe6\x17\xd6\x54\xf3\x45\x4c\x6b\x47\x8e\xf4\x54\x4b\x1b\xf8\x0f\x7f\xdc\x97\xf5\x22\x81\x37\x62\x89\x84\x29\xf5\xbc\x99\x7d\xf0\x5f\xf8\x9d\xfd\x17\x8f\x3d\x5e\xf3\x03\x49\x93\xdc\x21\xa2\x4e\x26\xd7\x6f\x75\x81\xe0\xb6\xba\xc8\xe8\x17\xcb\xfa\xfb\x30\x93\x99\x4c\xae\xaf\xd7\x94\x1d\xa4\x03\x5c\x52\xd5\xc6\x65\xcc\x6e\x78\x03\x6b\x29\xc0\xa1\x5d\xa3\x3d\x75\x04\x18\x46\x35\x19\x17\x47\xe8\x0a\x2b\xa7\xa1\x26\x26\x09\xb3\xb4\x28\xd9\x8b\x7a\xf3\x28\x86\xfd\xdd\x76\x32\xb8\xa1\xe5\x27\xfe\xc2\x99\xe1\xd7\xdf\x9c\xd1\xe3\x01\x11\x1b\xfc\xda\xef\xb1\x38\xbe\x18\x4b\x8b\x25\x63\xc5\x24\x71\x69\x2a\xed\x8f\x61\xc9\xf0\x3a\x62\xd9\x16\x34\x61\x5f\x53\x64\x79\x14\x77\x1f\x1b\x1b\xe8\x06\xf7\x5d\x28\x8e\xc5\xfc\x90\xf5\x23\xb8\x3b\x68\x22\xf0\x83\xbb\xec\x58\xd2\xdb\x15\xea\x36\x01\xae\x29\x1a\x02\xf2\x08\x34\x0b\xc0\x28\x25\xf5\x9c\xd9\xfa\x4e\x48\x55\x59\x7c\x4a\x00\x87\xd0\x87\x44\x94\x22\x1f\x6f\x13\x7b\x8a\x48\x07\xfa\x31\x62\x93\xaa\x28\xd0\xb9\x2f\x24\x16\xa1\xf7\x89\x4d\x16\xc6\xfa\x28\x05\x2c\x3f\x77\xbc\x2e\xf4\x01\xad\x16\x43\x9f\x17\xd5\x23\x0c\xdd\x2c\x28\x0b\xbe\x33\x46\xfd\x84\x54\x88\x11\x53\x8f\x13\x39\x84\x3e\xa0\x27\x97\x68\x2a\xff\x85\x4c\x45\x68\x22\x72\x19\x3a\x99\x4b\xa3\x63\x4f\x73\x7d\x87\x45\x45\x19\x3b\x18\x77\x97\x48\xf1\x34\x34\x11\x7c\x2d\x3c\xea\x62\x7b\x63\xbc\x50\x3f\xa2\xd0\x4f\x1b\xb7\x6a\x41\xff\x63\x89\x82\x0c\xb3\xae\xf7\x94\x99\x73\x7c\x48\xd4\xb1\xb8\x36\x84\x83\x40\xc2\xc9\x4b\x65\x3f\xe8\x99\xb9\x4a\x30\xa3\xb0\x30\x84\xa5\x58\x7d\x08\x01\xe0\x63\x33\xcf\xbb\x7f\xa0\x2c\xd7\xf5\xe9\xf1\x31\x2f\xc6\xac\x1d\x25\x86\x84\xd4\x72\xe5\xa3\x28\x84\xb4\x0b\x0e\x3b\x94\x96\x07\x1f\xe2\x45\x94\x1d\x0c\xe3\x1d\x75\xdc\x71\x17\xef\x58\x28\x60\xe4\x63\xfe\x3a\xde\x3f\xdc\x21\xcc\x11\xdc\xae\x9b\x8e\x8f\xe2\x76\x60\x1e\xa5\x51\x3b\xc3\x53\x34\x22\xcc\x01\x8d\x3d\xa7\x1c\x1f\x3b\x43\x17\xe6\x90\x44\x67\xfb\xe3\x62\x78\x6c\xfb\x23\x2e\x38\xde\xc7\x3d\x84\x39\x24\x13\x3d\xef\x29\x16\x22\x0c\xe3\x7e\xce\xe1\xc6\x80\xd9\x67\x5c\x98\xe9\xa8\x3d\xaf\x3c\xb4\x41\xcc\xf6\x3d\x77\xd8\xef\x3d\xa4\xfd\x4e\xfb\x75\x58\xc0\xa4\x20\xb5\xf4\x49\x1a\x47\xe4\xef\xd0\x4a\x53\xca\x82\x27\x66\xca\xcc\xc3\x0c\x5d\x0b\xd5\xad\xa1\xa8\x18\x13\xce\x49\xc7\xf5\x97\x43\xef\xb9\x94\x69\x95\x5a\x7e\x61\xd1\x2d\x8c\x2a\x1d\x97\x5b\x95\x2e\xd1\x3a\x2f\x74\xc9\xe3\x82\xd5\x4a\xc9\x22\xb4\xef\x53\x5c\x88\xb5\x34\x36\x63\xf4\x9f\xf5\xcc\x58\x5f\x69\xe1\x51\x6d\x87\xed\xca\xa5\x34\xe8\xf4\x73\x1f\xdb\x1e\x98\x5b\x14\x1e\x36\x62\x4b\xac\xe0\xdd\x2a\x14\xb8\xd2\x31\x95\x52\x78\x31\x04\x67\xa8\x57\xb2\xe8\x8c\xf5\x5c\x45\x56\x56\xf3\x7c\x5f\x83\xf4\x0e\x5c\xb5\xe2\x2b\x36\xea\x05\xa6\xd6\x88\xb2\x10\xee\xe0\x18\x4b\xaa\x74\x0b\xc7\x75\x13\x4f\xf4\x0f\x8b\x27\x48\x26\x93\xeb\x34\xb0\x3f\xc1\x30\xf8\x77\xe3\x3c\x7f\xe2\x0a\x4d\x3a\x57\xa1\xcb\xcf\x5f\x65\x4d\x49\x18\xeb\x3a\xea\x04\x48\x5b\x41\x21\xbd\x88\x33\xf1\x16\xc5\xb2\xbe\x6e\x19\x5f\xd4\x72\xe1\xb9\x5e\x7b\x8d\x2b\xf6\x63\x48\xd9\xc4\x0b\xeb\x79\x59\x49\xe7\x51\x73\x00\xb6\x4c\x4c\xa3\xcf\x5e\xf3\xcb\x64\xe0\x8b\xd5\x60\x08\x83\xb3\x97\x5f\x65\xa3\x6c\x94\x9d\x8d\x47\x83\x47\x7a\xab\x95\xd0\xb2\x48\xa8\xe5\xe0\x3e\xa3\xdf\xeb\xcd\x0d\x9f\x3d\x9b\x90\x88\x92\xdd\x36\xc7\xf8\x49\x03\x7c\xeb\xa8\x24\xbe\x5f\x90\x6d\x0e\xd7\x68\xb7\x70\x36\x82\x7a\xca\x3a\xc5\x42\x54\xb1\x83\x21\x6a\x68\xe5\x5d\xa3\x1a\x61\x91\x54\x2a\xe0\x6c\x74\x5a\x0f\x41\x99\x5a\xf4\x5b\xd8\x48\x5d\x9a\x4d\x06\x37\x0b\xe9\x40\xa1\x7f\xee\xa0\x22\xf5\x2f\x79\x72\x7b\x8c\xa4\x37\x30\x47\xbe\x9a\xb0\x6a\x1b\xa9\x89\xa2\xa8\x42\xf3\x41\xfe\x15\xaf\x8d\x1c\x24\xda\x70\x43\x22\x3c\x9b\x1f\x48\x36\xd2\x15\xda\x19\x16\xbe\x61\xdc\x54\x36\xde\x2e\x45\x6a\xb5\x35\x47\x40\xb5\x85\xa5\xf0\xc5\xa2\x61\xe5\xb9\x8b\x6d\x0a\xb5\xf8\xce\xb0\x58\x36\x0b\xd4\xc7\xfa\xa6\x48\xd2\xf1\xb0\x0f\x8a\x85\xd0\x73\x74\xdc\x79\x2a\x33\xff\x8e\x93\xa4\x2e\xb6\x61\x66\xdc\xbd\x17\x61\x18\xe1\x3c\x67\xdf\x09\xa2\x0e\xa3\xe7\x26\xe1\xee\xe5\xe7\xfb\x87\x0e\xc2\x6b\x33\xa7\x50\xb7\x87\xc3\xe4\xe9\xfd\x3d\x1b\x05\xb7\xda\xff\x80\x7a\x66\x1c\x57\x8b\xdb\x64\xef\x8a\x26\x85\x7b\x68\x46\x59\x52\xf3\xcc\x51\x52\x10\x20\x1a\xbd\xca\x2a\xda\x66\x10\xc7\x14\x03\x78\x01\xb5\x7d\x65\xdf\x94\xa5\x4d\xd2\x6c\xc2\xdb\xb3\x85\x53\x23\xfb\xa9\x31\x6f\xb6\xc9\x37\xb8\x89\x95\x40\x32\xf8\xcf\xeb\x9b\xc1\x10\x2a\xab\x86\x64\xcd\x01\xe1\x88\x81\xb3\xf8\xb2\x77\x56\x6a\x3f\x4b\x42\x0d\x00\x85\xd1\x1a\x0b\xcf\x9d\xa1\x69\xf4\x30\x99\x5c\x53\x8f\x82\x62\x39\x86\x3f\xb9\x41\x68\xc4\x03\x89\xc2\x68\x2f\x75\x85\xfc\xc4\xe2\xeb\x05\xc8\x86\xbd\xd6\x65\x79\x36\xa9\xa6\xa1\x07\xfb\x45\xfa\x45\x32\x18\x0c\xe1\xcf\xad\xf9\x58\x18\xac\x7d\xfa\x5f\x67\x98\x34\x88\xeb\xdd\xdc\x3f\x60\x66\xd7\x21\xfa\xc5\xad\x79\x62\xb3\x5f\xd0\x85\xa5\xc8\xea\xf8\x02\xa8\x66\xcc\x7e\xd6\x4b\x61\xdd\x42\xa8\x24\x8c\x80\x12\x5c\x67\x57\xc2\x8b\x24\x4d\x87\xf0\x67\x4c\xbf\x3e\x72\xb0\x2e\x5b\x91\x2f\x26\x9c\x71\xcb\xf9\xec\x02\x06\x71\xef\x4b\xb3\x5c\x0a\x5d\x0e\x1e\x45\x0d\xdf\x79\x0e\x37\xa6\x14\x5b\xf6\x30\x8b\x50\x50\x3e\x09\xa3\xec\x70\x3e\x08\xc7\xa6\x48\x14\x47\xae\xe4\x86\xe8\x5d\x33\x59\xa8\xe3\x3f\x01\x86\xd4\x13\x09\xd7\xdd\x32\xfc\xa0\xf9\xdf\x13\x4a\x14\x0a\x36\xc6\x2a\xf6\x67\x46\xe7\xed\x28\x8f\x39\xbe\x00\xac\xf7\x24\x97\x5f\x09\xe7\x40\x86\x8c\xd5\xcc\x7b\xb3\x86\xf8\x6b\x62\x61\x63\xac\xdd\x82\x98\x52\xcb\x50\xc6\x41\x85\x74\x21\x42\x6c\x70\x37\x67\x61\x62\xb4\x5c\xec\x15\x99\x3c\xd2\x6b\x68\x7a\x03\xa5\x74\x62\xaa\x30\xce\x5c\x96\xa6\xc4\x96\x8c\xb9\x41\x7f\x76\x01\x65\xd6\x1e\x60\x3c\x2d\x60\x0a\x13\x14\x52\xea\xe1\x6c\x27\xce\x7c\x08\x34\x3f\xee\x40\x0f\x96\xe0\x02\x70\xa7\x2b\x12\x77\x3b\xf4\x85\x2a\x44\xce\x40\x52\x38\x47\xe9\x17\x21\x0e\x32\x70\x72\x96\x32\xf0\x4c\x5a\x17\xb3\x34\x6c\xf0\xf9\x1a\xc1\x51\x8c\x0b\xfa\xda\xd1\x32\x2d\xcc\x97\x69\x77\x89\x1a\xf3\xb0\xd7\x42\xd4\xb1\xb5\xec\x60\xfc\x25\x6d\x67\x2a\xae\x4e\x48\xe8\x58\x92\x6a\x0b\x1e\xd7\x72\xf7\x53\x82\x33\x4b\xf4\x0b\xd2\xc6\x1e\x07\x8d\xa4\xeb\x61\x74\xef\x48\x98\x6d\xc9\x65\x77\x87\x57\xc3\xd6\x9d\x56\x99\xa9\xba\xb9\x4a\x3f\xe3\x39\xb5\x7e\x8e\x76\x20\xa4\xec\xe3\xbd\xc9\x1f\xcd\xdf\x03\xa0\x72\xac\xc9\xd6\xcd\xe4\xa4\x9a\x26\x8f\xd1\x4f\xe1\xef\xd0\xc9\x6b\x7f\x34\x43\xbb\xc8\x47\x1f\x0f\x84\xf3\x90\x7e\xb6\x8a\xfe\x9d\xb7\x19\x72\x06\x65\x16\x7c\xef\xbe\x33\x1f\x1e\x1f\x0c\x88\xeb\xda\xef\xca\x24\x1d\x7f\x1c\xd6\xd5\x54\x88\xfc\x2c\x96\x63\x59\x22\x8e\x6b\xc3\x3c\x3c\x1c\x94\x67\xce\xdd\xfb\xc2\xbf\x5f\x34\x17\x86\xbd\xf0\x3f\x2a\x58\xc6\xeb\x08\xc2\x16\x3a\x6e\xc3\xd3\x59\xc9\x13\xcc\xb6\xd3\xc4\x4a\xa7\xb5\x99\xb1\x3c\x1c\x4f\x06\xe7\xef\xdf\x73\x4d\x19\xb6\xee\x70\xf3\xd0\x64\xe4\x83\x99\x32\xc7\x95\x2f\xbc\x60\xe9\x85\xc1\xfa\xbf\x20\xa8\xa7\xe7\xf1\x8f\x5c\x2b\x34\x37\x0a\x9f\x93\xdf\xbf\x2d\xbe\x27\xa4\xf7\xd0\xef\xf2\x11\x44\x07\xf9\x09\x68\x03\xb3\xd8\x8b\xf3\x41\xc3\xbf\x0e\x6c\xd1\xc3\x49\x9e\x1e\x9d\xd6\xff\x4f\x00\x00\x00\xff\xff\xd3\x7d\xdf\x05\x7c\x28\x00\x00")

func _hardcodedDoerGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedDoerGo,
		"../_hardcoded/doer.go",
	)
}

func _hardcodedDoerGo() (*asset, error) {
	bytes, err := _hardcodedDoerGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/doer.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x95, 0xe0, 0x7d, 0xff, 0xda, 0x98, 0xe9, 0xf5, 0x15, 0xcb, 0xe9, 0x36, 0x7e, 0xa9, 0x6c, 0x87, 0x6a, 0x4a, 0x36, 0x6a, 0x9a, 0xeb, 0xa2, 0x6e, 0x5a, 0xa8, 0x74, 0xbc, 0x88, 0x76, 0xbc, 0x0}}
	return a, nil
}

var __hardcodedMiddlewareGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\xcd\x6e\xe3\x36\x10\x3e\x5b\x4f\x31\x65\x11\x84\x5a\x38\xf2\x1e\x8a\x1e\x02\xf8\x50\xa4\x9b\xe6\xb2\xc0\x62\x13\xb4\x05\x8a\x02\xcb\x50\x23\x89\xb0\x4c\xaa\xc3\x91\x55\x23\xf0\xbb\x17\x43\x49\x4e\x14\xa4\xe9\xa9\x07\xcb\xe4\xcc\x7c\xdf\xfc\xb3\x33\x76\x67\x6a\x84\x88\x74\x40\xca\x32\xb7\xef\x02\x31\xe8\x6c\xa5\xaa\x3d\xab\x6c\xa5\x3c\xf2\xa6\x61\xee\xe4\x4c\xbd\x67\xb7\xc7\x4d\x89\x8f\x7d\xad\xb2\x6c\xa5\xea\xd0\xed\xea\xc2\xf9\xcd\x4d\x8b\x07\xa4\xcd\xce\x1c\x0f\x88\x57\x75\x28\x0e\x3f\x6e\xda\x50\xd7\x48\x2a\xcb\xb3\x6c\xb3\x81\x2f\xc6\x3b\xfb\xd9\x95\x65\x8b\x83\x21\x84\x36\xd4\x11\x8c\x3f\x42\x27\x8a\x58\xc0\x6d\x20\xf0\x61\x58\xc3\x80\x97\x84\x60\x83\x67\xe7\x7b\x04\x6e\x28\x0c\xce\xd7\xc0\x0d\x8e\xc6\xd0\x77\xc2\x28\xf7\xc8\xc6\xee\x20\x06\xe0\xc6\x45\xd8\x9b\x23\x58\x32\xb1\x19\x6d\x29\x58\x8c\xb1\xc8\xaa\xde\xdb\xd7\xfe\x75\x03\x92\x56\x71\x67\x7c\xd9\x22\xe5\x8b\x1b\x3c\x65\x2b\x42\xee\xc9\x2f\xc4\xb7\xbd\xb7\x5a\xc8\xf4\x30\xca\xbf\x62\xec\x82\x8f\xf8\x1b\x39\x46\x5a\x03\xc1\x87\x49\xfe\x57\x8f\x91\x73\xe1\x59\x95\x58\x21\x41\x82\x8d\x82\x55\x4a\xe2\x13\x11\x5c\x6f\x81\xd0\x86\x03\x92\xce\x45\xe1\x2a\x38\xeb\xb6\x5b\xf0\xae\x1d\x01\x53\x30\x72\x3c\xc9\xe7\x60\x08\x90\xd2\x2f\x50\x26\x92\x38\x38\xb6\x0d\xbc\x64\x9e\xcf\x85\xe6\x63\x87\x93\x6b\x6b\xa2\x14\x8d\x9c\xaf\xaf\x13\xb3\xd0\x6c\xa1\xda\x73\xf1\x49\xc8\x2a\x3d\xc3\xf2\xb3\x79\xf2\xf2\xd2\x7a\x36\x11\x51\x89\x95\xe9\x5b\xfe\x17\x32\xd5\xfb\x9d\x0f\x83\x9f\xfa\x76\xf1\xfd\x01\x42\x05\x12\x0f\x5c\x3c\xa8\xf5\x99\xe9\xf9\x94\x8f\x49\xca\x77\x9c\x9f\xe2\x96\xc2\xfe\x26\x78\xc6\xbf\x59\x53\x31\x9f\xf2\x7c\xf4\xf1\xb3\x56\x09\xaa\xd6\x29\x82\x09\xf3\xf9\x49\x21\x91\xba\x96\xd8\xd7\xa0\xd2\x94\x30\x19\x8b\xea\x7a\xca\x5e\xa7\x21\x2e\xee\x45\xa3\xf3\xfc\x94\x9f\x1b\xb3\xa8\xc0\x29\x35\xa6\x29\xee\x65\x41\xee\x1e\x1e\xbe\xe8\x61\x0d\xa2\x39\xe5\xd9\x29\xcd\x75\x64\xc3\x7d\x5c\x4e\x02\x0c\x64\xba\x08\x06\x68\x12\xc3\x90\xe4\x59\xca\xfc\x4d\x44\x64\xea\x2d\x4b\x93\xde\x98\xac\x6c\x35\x62\xc0\x79\x16\xb7\x69\xa0\x75\x84\x0f\x6f\x51\xe5\x90\xfe\xef\xd0\x94\x48\xda\x86\x12\x05\x96\xfa\x1f\x8b\x89\x67\x0b\x22\x17\xc1\x12\x5b\xbc\x86\xce\x59\xfe\x8a\x14\x5d\xf0\x5f\x8d\xaf\x11\x4a\xb4\xae\xc4\x08\x43\x83\xdc\x20\x01\x07\x30\xd6\x62\xc7\x60\xe0\x30\x1a\x16\x63\xaa\x0b\x58\x5a\x81\x49\x3f\x75\x21\x87\xc7\x10\xda\xe4\xe1\xa6\x75\xe8\x79\x02\xdc\x34\x68\x77\x2f\x1e\x0b\x2b\xf7\x98\xb6\xda\x26\xbb\x67\x3f\xa9\x16\xef\x81\x5f\x6d\xfa\x1a\xc8\xd7\x8b\xc0\xfe\xc7\xdd\x9f\xb3\x95\x45\x2f\xc6\xb2\x16\xbf\x20\x6b\xf5\xfb\xd5\x18\xf2\xd5\x14\x88\x92\x31\xfb\xaf\x81\xff\xa9\x2c\xe7\x9b\x1a\xcb\x70\x35\x39\x50\xeb\xb9\x20\xc2\xe3\x2a\xf8\x8e\x7c\x3d\xd7\x7a\x5a\xfd\x61\xd1\xdc\x1f\x3e\x7e\xcc\x5f\x48\xf5\x1f\x7f\x3e\x1e\x19\xb5\xec\xee\x7d\x47\xce\x73\xa5\xbf\x3d\xa9\x3d\xc6\x68\x6a\xd9\x1a\xb5\xac\x3b\x5c\x5e\xc4\x4b\xf0\x81\xa7\xce\x63\xb9\x86\xae\x45\x79\x2e\xfa\xae\x26\x53\xa2\x3a\x7d\x7b\x0e\x2a\x4f\xbe\xce\xaf\xd8\xe9\x9d\x9d\xfa\x27\x00\x00\xff\xff\x64\xba\x96\x25\x93\x06\x00\x00")

func _hardcodedMiddlewareGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedMiddlewareGo,
		"../_hardcoded/middleware.go",
	)
}

func _hardcodedMiddlewareGo() (*asset, error) {
	bytes, err := _hardcodedMiddlewareGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/middleware.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x17, 0x73, 0xff, 0x36, 0x5d, 0xfe, 0x40, 0x7c, 0x33, 0x99, 0xc8, 0x19, 0x37, 0x47, 0x59, 0x51, 0x96, 0xb, 0x22, 0x81, 0x1c, 0x7d, 0xe4, 0x3, 0x2f, 0x2d, 0x3c, 0x2d, 0xc5, 0x23, 0x70, 0xb8}}
	return a, nil
}

var __hardcodedTracingGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x58\x6d\x6f\xdc\xb8\x11\xfe\x2c\xfd\x8a\xb9\x05\x72\x91\x02\x59\x6b\x5f\x12\xf7\xb0\x07\x7f\x70\x6c\x27\x59\x20\xce\x19\xb6\xdb\x43\x51\x14\x01\x57\x9a\x95\x08\x4b\xa4\x4a\x52\xfb\x52\xc3\xff\xbd\x18\x92\xd2\x4a\xf6\xda\xe7\x6b\x3e\x38\x2b\xbe\xcc\x1b\x87\xcf\x33\xc3\x86\x65\x77\xac\x40\x30\x8a\x65\x5c\x14\x61\xc8\xeb\x46\x2a\x03\x51\x18\x4c\x32\x29\x0c\x6e\xcc\x24\x0c\x26\x28\x32\x99\x73\x51\x4c\x17\x5c\x30\xb5\x1d\x0d\x95\xb8\xa1\xef\x65\x6d\x57\x0a\x34\xd3\xd2\x98\x86\x7e\x4b\x4d\x7f\xb5\x51\x99\x14\x2b\xfa\x69\x78\x8d\x93\x30\x0c\x26\x85\x4c\x65\x83\xc2\x60\x85\x35\x1a\xb5\x4d\xb9\x9c\x92\x3a\xc5\x17\x53\x2e\xb4\x51\x6d\x8d\xc2\x30\xc3\xa5\x98\x16\xdc\x94\xed\x22\xcd\x64\x3d\x2d\xa4\xe2\x55\xc5\xa6\x75\xbb\x99\x4a\x83\x55\xdd\x5a\xd5\x7f\x45\x5a\x67\x9f\xdd\xdf\x19\xba\x4f\x00\xcd\xbf\x34\x37\xc5\x0d\x45\x0a\x95\x9e\x4a\x53\xbd\x28\x66\xda\x28\xd9\xb0\xc2\x1a\x30\x09\x03\x9d\xdf\xb9\xbd\x14\x74\x84\xe7\xb7\xe9\xfc\xce\x6b\x99\xda\xa5\x2f\xea\x78\xbc\xd8\xfd\x35\xa8\x8d\x53\xf9\x1a\x65\x7f\xae\x65\xb0\xa2\xb9\x2b\x52\x2e\xa6\x67\x15\xae\x50\x4d\xef\xd8\x76\x85\x78\x50\xc8\x74\x75\x3c\xad\x64\x51\xa0\x9a\x84\x71\x18\x4e\xa7\xd0\x79\x2f\x15\x18\x09\xad\xc6\x34\x5c\x31\x35\x1c\x1e\xc4\x27\xbd\xc5\x8d\xb9\x64\xcd\xd5\x6e\xf6\x64\x3c\x4f\x16\x9c\xb9\xd4\xbc\x7f\x80\xe9\xd4\xe6\x2e\x36\x4c\xa1\x30\x50\x22\xcb\x51\x59\xb5\x39\x2e\x59\x5b\x99\x33\x59\x55\x98\x19\xa9\xae\x28\xaf\xd7\x4c\x43\x56\x32\x51\x60\x0e\x4b\x25\x6b\xf8\xf8\xf1\xd7\xe3\x43\xe0\x02\xbe\xcb\x15\xd6\x0b\x54\xc0\x44\x0e\xa6\x44\xf8\x22\xa1\xe2\x0b\xc5\xd4\x96\xa4\x95\x4c\x8b\xb7\x06\x16\x88\x02\xda\x26\x67\x06\x73\x58\x97\x28\x80\x1b\xe0\x7a\x37\x84\x90\x31\x41\x4e\x02\x65\x45\x7a\xbe\xc7\x08\xeb\xfd\x5e\xeb\x5a\x2e\xcc\xd1\x31\x9c\xc0\x87\xf7\x47\x7f\xb3\x4e\xdc\xa0\x69\x9b\x2f\x95\x5c\xb0\xca\x3a\x7e\xa5\xe4\x8a\xe7\xa8\x4e\x45\x7e\xe1\xf3\x0f\x34\x1a\x32\x00\x98\x80\x2e\x27\x29\xd0\xee\x77\x42\x52\x98\x86\x35\x56\x15\xfd\x4f\x9e\x8d\x8e\x16\x0a\x2b\xdd\x45\x91\x22\x6d\xe5\xc3\x92\x4e\xcb\x0e\x15\x28\x50\xd1\x41\xe8\xfe\xf8\xa6\x53\xb8\x2d\x71\xa7\x8d\x42\xd6\xef\x64\x0a\x41\xa1\x69\x95\xc0\x9c\x02\x2b\x55\x2f\xaf\xa4\xe8\x54\x95\xb3\x2f\xc7\x25\x19\x5f\xb6\x26\x97\x6b\x91\x86\xcb\x56\x64\xaf\xf1\x37\xca\xcc\x06\x3c\x36\xa5\x3e\x11\x62\x88\xc6\xb7\x2a\xbd\x69\x98\xe8\x76\x24\xf0\xae\xbb\x00\x2e\x7d\x54\x27\x36\x01\x54\x4a\xaa\x18\xee\xc3\x60\x3a\x85\xa3\x94\x82\x49\xb1\xec\x5c\xb3\xc3\xbf\xf4\xc3\x56\x86\xea\x7d\xb5\xb3\xef\x53\x60\x5a\xf3\x42\x8c\x22\x39\x58\x64\x57\xcd\x97\xb0\xc6\xb7\x14\x9a\x56\x08\x2e\x0a\xa8\x24\x85\x62\x9b\x50\x54\x04\x50\xb8\x40\x2e\x97\xa0\x59\xdd\x54\x5c\x14\x29\xfc\x6e\x4a\x54\x6b\xae\xd1\x8d\xa1\xb3\xf0\x0d\x48\x05\xeb\x92\x19\xba\x75\x70\x7b\x7d\x7a\x36\xff\xfe\xe5\xc7\xcd\xe9\xe5\xd5\x37\xfa\x71\x75\xfd\xfb\xa7\xd3\x4f\xf3\x6f\xf3\xdb\x7f\x82\x6e\x30\xe3\x4b\x8e\x3a\x0d\x83\x4e\xec\x95\x92\x0b\xb6\xe0\x15\x37\x5b\x98\x9d\xc0\x61\x7a\x78\x14\x06\x5c\x7f\x23\x63\x68\x40\xea\xf4\x0b\x1a\x14\xab\x68\xf2\x63\x7e\xf3\xe3\xdb\xef\x67\xa7\xdf\x26\x31\x9c\x9c\xc0\xc4\xa8\x96\x6e\x3e\x5f\x42\xb7\xfe\x3e\x0c\xf6\x0a\x3e\x81\xa3\xf4\x30\x0c\x1e\x00\x2b\x8d\xc0\x97\xb0\x7a\x24\xfa\x25\xb3\x27\xf1\x6f\xb0\x82\x9f\x4e\x60\x32\x79\x4e\xc1\x67\x25\xeb\x0b\xb1\xb2\x87\x47\x92\x3d\xc3\xa4\x57\x4c\x69\xfc\x5c\x49\x66\xa2\x55\x02\xc7\x1f\xe2\x30\x20\x73\x69\xd5\x4f\x27\x20\xb8\xb3\x38\x70\xc9\x49\xdf\x89\xfb\xb3\xac\x4d\x7a\x41\x79\xb0\x8c\x26\x99\x6c\xab\x1c\x84\x34\xd0\x90\x34\x78\xfb\x46\xbf\xa5\x6c\x5d\x92\xd8\x49\x02\x2b\x12\xfa\xf0\xac\xe3\xcf\x5b\x1b\x06\x0f\x61\x18\xb0\x3c\xb7\x26\x93\xca\x9b\x46\x71\x61\x96\xd1\xe4\x8d\x9e\xbd\xc9\x27\xc9\x7e\xc4\xf8\x2a\xb5\x49\xf6\xc2\x45\xec\x32\xeb\x62\x85\x6a\x0b\x47\x1f\x41\x63\x26\x45\x4e\x57\xfd\x6d\x45\x59\xb8\x25\xbb\x33\x29\x04\x66\x86\x7e\x8e\xaf\x7d\xd6\x89\x02\x66\xac\x1c\xba\x9d\x5e\x8d\x4d\x4e\x42\x5b\x90\x4b\x97\xa8\xa5\xd4\x66\x66\x51\x89\x96\xfe\x41\x29\xdb\x25\x32\x17\x94\xea\x79\x9b\xd9\x0d\xa6\xe4\x9a\x00\x91\x81\xe6\x39\x66\x4c\x25\x16\x1d\xd6\x83\x1d\x56\x84\x4f\xff\xc1\xfa\x6e\xa4\x93\x2b\x1b\xec\xad\x3d\xe8\xad\x4d\xc3\x00\xfb\x6b\xed\xcf\xdf\xc6\xed\x3b\xae\x7b\x84\x08\x83\x20\x33\x9b\x24\x0c\x02\x3b\xf5\x07\x37\xe5\x69\x9e\x2b\xd4\x3a\xa2\x03\x88\x47\x33\xd7\xe8\x63\xc4\xa5\xb8\x42\xc5\x65\x1e\x1d\x7d\x7c\x47\xa5\x4a\x7a\x63\x23\x3a\x5e\x3e\x17\x1a\xb3\x56\x61\x44\xc3\x71\xb8\x27\xc1\x5e\xcc\x2f\x8b\x37\x90\x29\x64\x86\x9c\xec\x7c\x99\xc1\x9b\xd5\xc4\x3a\x14\xbb\x44\x31\x0d\x79\x26\x70\x3d\x06\xac\x68\xe7\xfc\x9e\x54\x8b\xc3\x80\x58\x3a\xbd\x41\xf3\x68\x9b\x69\xe2\x30\x70\xb4\x9c\x52\x42\x7a\xdc\x24\x2c\x8d\xd3\xb9\x58\xca\xf3\x68\xa2\x0d\x53\x64\xd4\x81\x03\xb0\x49\x02\x7e\xc3\x25\x79\x35\x61\x2e\x82\x93\x19\xb8\x7f\xf4\x4d\x91\x99\x74\x86\x1c\x28\x66\x70\x32\xdb\x67\x58\x12\x06\x0f\x71\xd8\x45\x66\xe7\x83\x69\x6c\x88\xc2\x87\xd7\x92\xdd\x67\xa9\x6e\x51\x5b\xca\xad\x91\x09\x9b\xd7\x0b\x24\x56\xb2\x5c\xd3\x0a\x6e\x80\x6a\x1e\x2e\x0a\xc7\x7c\x22\x87\x9a\x53\xcc\x1d\xf5\x69\x52\x01\x6c\x21\x57\x68\x29\x49\xb6\x86\xf2\x94\xf2\x7c\xb8\x37\x85\xb9\xf1\x24\xa6\x89\x57\xb9\x38\xa8\xb1\x96\xae\x14\xe8\x69\x8f\x04\xe0\x86\xd5\xdc\xe6\xab\xe7\x49\xcc\x41\x37\x4c\xe8\xd7\x13\x9a\xf7\x29\x8a\x21\x7a\xd7\x17\x6d\xe9\x5c\x5c\x5a\x8d\x7f\x8d\xc4\x7a\xdb\x66\x27\xb0\x93\xf5\x1d\xd7\x8f\xc5\x45\xf1\x6b\x72\xec\x28\x3d\xfc\x93\x9c\x7a\xe9\x48\x6d\x00\x9e\x17\x0f\x2f\x52\xf6\x3e\x7c\xb5\x20\x7c\xfc\x21\x7e\x36\x14\x14\x02\x6f\x51\xbf\xe2\xfb\x13\x03\x08\xbd\xbb\x59\xba\xd2\x67\x52\x2c\x79\x11\xf5\x63\xee\xdb\x72\x05\x81\x9d\x4d\xaf\x11\x3c\xce\xcf\x77\x55\x51\x0a\xf3\x61\x8d\xd3\x99\x4d\x89\xb9\x96\xea\x0e\x22\x66\xa0\x42\xa6\x0d\xac\xb9\x29\x1d\xde\x39\x42\xa7\xab\x1e\x74\xc8\x3b\x14\x09\x75\xab\x4d\x9f\x4f\xbe\x0c\x9b\x9f\x6b\x4a\xd1\xa5\x54\x75\xb5\x05\x66\x40\x31\x91\xcb\xda\x55\xb1\x24\x01\x85\xe1\x0a\x29\xf9\x32\x97\xcf\x5c\x98\xe3\x0f\xa9\xd7\xf1\xd9\xe7\x6a\x53\x61\x32\xf2\x65\x73\xa0\xd8\x76\xac\x3e\x97\xa8\x2d\x05\xe6\xd2\xda\x6b\x65\x78\x5e\xba\x71\xa6\xcf\x76\xf1\xbd\xb2\x95\xf7\x27\xa6\x31\x8f\xc6\xc7\x32\x3f\xbf\x26\x16\xf1\x53\x7b\xe0\xca\x22\x6b\xe0\xaa\x49\x8d\x50\xb3\x0d\xaf\xdb\x5a\xdb\x12\xd2\x48\x28\x5a\xa6\x72\x60\x05\xa3\x26\x0e\xb4\xac\xd1\x94\xf6\xa6\x49\xfa\xbb\x56\x52\x14\xf6\x82\x6b\x14\xd4\x89\x02\x03\xe3\x28\x2b\x67\x86\x41\x2b\x70\xd3\x60\x66\x30\xaf\xb6\x3b\x35\x44\x7c\xc4\xf0\x0b\x04\xb3\x46\x76\xe7\x70\x83\x02\xb2\x6c\x4d\xab\x6c\xb9\x22\x10\x73\xcc\xad\xd7\x97\x6c\x73\xb1\x42\x61\xf4\x15\x2a\xca\x4f\x07\x7e\x47\x87\x87\x89\x9f\x3d\x35\xd4\x66\xb6\x06\x77\x2b\x06\xb3\xdf\xb8\xb8\x1b\x6f\xed\x66\x1f\xac\xef\xa3\x34\xbc\xd9\x8a\x6c\x70\x3d\x1c\xbf\x38\x64\xbc\x6c\x37\x37\xa8\x56\xa8\x2e\x79\x9e\x57\xb8\xde\xd5\xd8\x1a\xea\xdd\x90\x29\x99\x01\x5d\x76\x0e\x32\x63\x58\x56\x62\x4e\xb1\x64\x30\x68\x9e\x41\x5b\x61\xb6\x90\x9f\x1b\x77\xde\x66\x6d\x0f\x5b\x14\x7a\x06\x96\x09\xb4\xc3\x31\xc7\xdf\x2c\xcf\xdd\xb7\xeb\x00\x81\x8b\xa5\x24\xb1\x14\x38\x85\xff\x69\x51\x9b\x03\x5f\x6f\x66\x1d\x6d\x90\xf4\x6b\x5e\x94\x06\x84\x5c\x53\x67\x24\x45\xb5\x05\xdd\x36\xf6\x85\x81\x16\xd1\xa1\x51\x5e\x77\x27\x20\x55\xcd\x8c\xf3\xe2\x9c\x19\x96\x4b\x4b\x90\x98\x99\x0e\x4d\xf7\xc4\x21\x22\x5f\x78\x86\xdf\x59\x8d\x54\x09\x72\x51\xc4\x40\x8b\x23\xea\xee\xd3\xaf\x4c\xe4\x74\xd5\x60\xf8\x45\x30\x21\x4d\x45\x91\xb0\xe5\x83\x7d\x49\x48\xf7\xcb\x4c\xfa\x79\x3a\xa3\x5d\x5b\xaa\xa3\x5d\x03\x1b\xef\x80\xd0\x69\x86\x97\x75\x77\x8b\x9d\x0d\x23\x43\x3f\xd3\x7e\x2b\x44\xad\xdd\xbe\x6b\xd4\x8d\x14\x1a\xff\x50\xdc\x02\xa3\x82\x77\x7e\xdc\x86\x3d\x86\x0e\xa8\xbc\x9d\xd4\xaa\x02\x6e\xe8\x9c\x88\x8c\x2c\xeb\x35\x4c\xa4\xf6\x14\x9a\xd6\xd8\x8e\x55\xf8\xb3\xcb\xcc\xe6\xf1\xb9\x91\x34\xdd\xf3\x87\x45\xe5\x61\xc5\xa0\xba\x9e\x2b\x8a\x2d\x7e\xf1\x25\xe8\xcc\x56\xe1\x76\x69\x3f\xf9\x1b\xe8\x2c\xfd\xca\xb4\x47\x82\xc8\xdb\x19\x90\x2d\xf3\xf3\xc4\x49\x9f\x9f\xdb\x9d\x99\xdd\x3a\x3f\x4f\x6f\xec\xf9\x45\x71\x42\x63\x7e\x67\x3f\x68\xb7\x53\x63\xef\x53\x83\x6a\x7e\xa4\x3c\x2d\x71\xe3\x4f\xde\xb5\xa8\x16\xf8\x28\xb1\x12\xd0\x92\xbc\x02\x53\x4a\xea\xa3\xa4\xcb\xad\x4c\x2a\x85\x95\x2b\xc0\x2a\x59\x68\xd7\xf2\x93\x36\x6d\x31\x5b\x5b\x4d\x7c\x09\x15\x8a\xc8\xdb\x69\x7b\xa0\xf7\xbf\xc0\xcf\x3f\xdb\x51\xe7\x85\x1d\x3c\x3a\x86\x7b\xa0\xf0\x8f\xca\x6b\x97\xcb\x33\x9a\x5d\x6c\x0d\x42\xf4\xfe\x97\x83\xac\x64\x8a\x8c\x8d\x13\xf8\xd5\x8f\x1e\x1d\xef\x46\x3d\xd0\x5b\x44\x6b\xa8\xe8\xc8\x9d\x21\x81\x37\xe1\x93\x4e\xe0\x07\xc5\xab\xc4\x4d\x7a\x8e\x99\xcc\xd1\x87\xa6\xb3\xd1\x2d\xdf\x53\xe6\x0d\x0f\x2d\x3d\xcd\xf3\xee\x6b\x62\x77\xfe\xe0\xf9\x24\x71\x7b\x83\x71\x63\x42\x5d\x89\x7b\xf2\x4b\x3f\xf1\xe2\x42\xe4\x9c\x89\xf4\xef\x36\xbe\x51\x6f\xd5\xbf\x7e\x9d\xfd\x3b\x8e\xbd\x72\x17\x98\xe7\x4d\xf5\x81\xfb\xeb\x96\xd2\xc6\xff\xcf\xd0\xce\xa4\xce\x46\xea\xde\xdc\x9f\x32\xb5\x68\xf2\xf5\xf6\xf6\x2a\x52\xeb\x04\x2c\x23\x3f\xc4\xb6\x04\x77\xc0\xeb\x8a\x07\xa1\x2d\x64\x75\x88\x4b\x17\xc7\xf4\xa3\xee\x51\x84\x30\x2c\xab\x38\x0a\xd3\xe1\xa1\xee\xe0\xd5\xb0\x3b\xb4\x18\xc7\xc6\xbb\xd6\x8a\x35\x09\x60\x5a\xa4\xee\xa2\x7b\x86\xed\xf5\x25\xfd\x53\x94\x97\x48\xf2\xfc\xc3\x07\xac\x58\xd5\x5a\x92\x6c\x5a\x6a\xf6\xfc\x25\x07\x41\x28\x28\x5b\x63\xcb\x82\xa7\x0f\x35\x5c\xdb\xf5\xdd\xe3\x17\x6d\xf3\x8f\x16\x52\x10\x3e\x03\xb2\xac\xec\xd4\xd9\xdb\xe3\x1f\x86\x61\x2d\xc5\x5b\x6b\xc0\x02\x0b\x5b\x68\x1b\x5e\xb9\xdb\x44\xfd\x9b\xe0\x86\xb3\x8a\xff\x17\x73\x88\x30\x2d\x12\xf2\x96\x0b\x4f\x33\x8e\x4e\xda\x26\xf6\x20\x3e\x8c\x69\xb4\x60\x1a\x77\x11\x76\xc0\x26\x5b\x91\xdf\x2a\xde\x34\xb6\x0e\x6c\x98\x20\x1c\x3e\x33\x9b\x7f\x58\x9f\xb9\x30\xa8\x96\x2c\xc3\xfb\x87\xf8\xe9\x86\x41\x05\xa8\x06\xc3\xf7\x23\x3d\x33\x18\x7d\x3e\x55\x32\x7b\x32\x62\x13\xc2\x6c\x1b\x1c\x89\x25\xd8\x69\x33\x43\x4a\xc7\x8e\x00\x3c\x35\x2d\x0c\x5e\xf2\xa5\x2f\x98\x23\xca\xb4\xc1\xb6\x18\x7a\x21\xd1\x13\xec\x8f\xde\x8d\x38\x62\xd8\x0a\xf4\x1c\xe3\xde\xb9\xd3\x51\xd8\x89\x83\x4c\x3a\x8e\x82\xed\x72\xfd\x62\xe2\xba\x47\x55\xb3\xed\x02\xbe\x3c\xe9\x02\xe2\xf8\xc9\xc6\x67\x48\xf2\xc9\xba\x1b\x1f\x8e\xcf\x16\x2b\xa9\x29\xb1\xc4\x47\x65\x9e\xcc\x3d\xa2\xef\xe1\x3b\x37\xe1\xe8\x64\x95\x80\xbc\x23\xa0\x19\xe0\x46\x6a\x63\x1b\x29\x93\x3e\x8e\x77\x9c\x46\xbe\x42\xf0\xcc\x25\xef\x3c\x2b\xf9\x60\xad\x7a\x68\xe8\x72\x28\xbd\x74\xd6\x4c\xa7\x54\xb5\x23\x30\xdd\x47\xf4\xad\xee\x8b\xe8\xee\xee\xd9\xd7\x0d\x57\xdb\xc5\xe9\xe0\xd8\xba\x3a\xee\xc2\xd1\x32\x39\x7e\x4a\x73\x8e\x02\x3d\x59\xbb\x02\x6b\x47\x46\xb6\x34\xb2\xf7\x94\x09\x9b\x4d\xdd\xc5\xf4\xaf\xdc\xfe\x3a\xed\x95\xb9\x27\x53\x3c\x5e\xbb\x64\x9f\x9f\xf7\xb5\xd2\x7d\xf8\x7a\xba\x27\xb2\x1f\xd3\xfc\x53\x8a\xef\xfa\xaf\x47\xeb\x1e\xb3\x79\xf2\x64\xc5\xa3\x1a\x80\x40\x38\x70\xa5\x85\x33\xed\x1a\x6b\x69\x70\xb0\x67\x68\xe7\x2e\xcf\x52\x1f\x90\xa1\xe9\x09\xa8\xf4\xab\x0d\xda\xa0\x54\x7b\x6d\xd9\xf1\x10\xfe\x2f\x00\x00\xff\xff\xb6\x50\x55\xa9\x26\x1b\x00\x00")

func _hardcodedTracingGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedTracingGo,
		"../_hardcoded/tracing.go",
	)
}

func _hardcodedTracingGo() (*asset, error) {
	bytes, err := _hardcodedTracingGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/tracing.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x35, 0x5b, 0x77, 0x9b, 0x31, 0x9a, 0x82, 0xd3, 0x3, 0x48, 0x1f, 0x6b, 0x62, 0xfc, 0x49, 0x14, 0x1b, 0xa2, 0xcc, 0x2b, 0x6e, 0xd0, 0x97, 0xac, 0xd6, 0x8d, 0xca, 0xc0, 0x15, 0x49, 0x90, 0x57}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../_hardcoded/doer.go":       _hardcodedDoerGo,
	"../_hardcoded/middleware.go": _hardcodedMiddlewareGo,
	"../_hardcoded/tracing.go":    _hardcodedTracingGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"..": &bintree{nil, map[string]*bintree{
		"_hardcoded": &bintree{nil, map[string]*bintree{
			"doer.go":       &bintree{_hardcodedDoerGo, map[string]*bintree{}},
			"middleware.go": &bintree{_hardcodedMiddlewareGo, map[string]*bintree{}},
			"tracing.go":    &bintree{_hardcodedTracingGo, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
