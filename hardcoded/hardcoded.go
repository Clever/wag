// Code generated by go-bindata. DO NOT EDIT.
//  memcopy: true
//  compress: true
//  decompress: once
//  asset-dir: true
//  restore: true
// sources:
//  ../_hardcoded/doer.go
//  ../_hardcoded/middleware.go

package hardcoded

import (
	"bytes"
	"compress/flate"
	"io"
	"os"
	"path/filepath"
	"strings"
	"sync"
	"time"

	"github.com/tmthrgd/go-bindata/restore"
)

type asset struct {
	name string
	data string
	size int64

	once  sync.Once
	bytes []byte
	err   error
}

func (a *asset) Name() string {
	return a.name
}

func (a *asset) Size() int64 {
	return a.size
}

func (a *asset) Mode() os.FileMode {
	return 0
}

func (a *asset) ModTime() time.Time {
	return time.Time{}
}

func (*asset) IsDir() bool {
	return false
}

func (*asset) Sys() interface{} {
	return nil
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]*asset{
	"../_hardcoded/doer.go": &asset{
		name: "doer.go",
		data: "" +
			"\xd4\x3a\x7f\x6f\xdb\x46\xb2\x7f\x4b\x9f\x62\x2a\xa0\x17\x32\x95\x49\x3b\x77\x49\x0f\xea\xf3\x3d" +
			"\xb4\xb6\xf3\x52\x5c\x9b\x04\x91\xfb\x1a\x20\x08\xae\x2b\x72\x28\x6d\x4d\xee\xb2\xbb\x4b\xc9\x82" +
			"\xcf\xdf\xfd\x61\x66\x97\x14\x29\xc9\x4e\xee\x5a\x3c\xbc\xa7\x3f\x2c\x91\x3b\x33\x3b\x33\x3b\xbf" +
			"\xd7\xb5\xc8\x6e\xc4\x12\x21\x2b\x25\x2a\x37\x1e\xcb\xaa\xd6\xc6\x41\x34\x1e\x4d\x16\x5b\x87\x76" +
			"\x32\x1e\x4d\x32\xad\x1c\xde\x3a\xfa\x89\x2a\xd3\xb9\x54\xcb\xf4\x57\xab\x15\xbf\x30\x46\x1b\x86" +
			"\x2a\x2a\x86\x90\x3a\x95\xba\x71\xb2\xa4\x87\x52\x2f\xe9\xab\x12\x6e\x95\x1a\xa1\x72\x7a\x50\xe8" +
			"\xc2\x57\xba\x72\xae\xa6\xdf\x76\xab\x32\xfa\x76\xb2\xc2\xc9\x78\x3c\x9a\x2c\xa5\x5b\x35\x8b\x24" +
			"\xd3\x55\x2a\x0a\xbc\x4d\x57\x5b\xeb\x8c\xbc\x3d\x59\xea\xf6\xe7\x64\x08\x95\x6b\xa5\xd7\x42\xad" +
			"\x64\x8e\x29\xae\x51\x39\xab\x1b\x93\xe1\x64\x3c\xd2\x35\x2a\x67\x44\x26\xd5\x12\xfa\x18\xbd\xf7" +
			"\xfd\xdf\x27\x4b\x3d\x19\x8f\x9c\x58\xda\xcf\x84\x4e\x83\x66\x96\xba\x14\x6a\x99\x68\xb3\x4c\x6f" +
			"\x53\x12\x2e\x68\x2d\xcd\xdc\x6d\x90\xb3\xd4\xcb\x25\x1a\x98\x2c\x75\x7d\xb3\x4c\xa4\x4a\x2f\x4a" +
			"\x5c\xa3\x49\x6f\xc4\x76\x8d\x78\xb2\xd4\xc9\xfa\x45\xea\x81\x26\xe3\x78\x3c\x4e\x53\xc8\x35\x1a" +
			"\x90\x16\x84\x02\xa9\x1c\x9a\x42\x64\x08\x85\x36\x30\xc9\xb5\x54\xcb\x09\x10\x69\x30\xf8\x5b\x83" +
			"\xd6\x59\xa8\xb5\xb5\x72\x51\x6e\x61\x23\xdd\x0a\x36\x46\xd4\xb5\x54\xcb\xb1\xdb\xd6\x18\x48\x75" +
			"\x44\xee\xc6\xa3\x4b\x1d\x65\xf0\x94\x28\x24\x17\x7c\xfc\x53\x30\xe1\xf9\x9d\xa7\x18\x43\xd4\x3e" +
			"\xdb\x5a\x2b\x8b\x53\xe0\x03\x8f\xc7\xf7\x63\x4f\x55\xd7\xaf\x45\x85\x17\xee\x16\xac\x33\x4d\xe6" +
			"\xee\xee\x99\xef\x85\xb0\x18\x68\xbc\x12\x2a\x2f\xd1\x40\x8d\xa6\xd0\xa6\xb2\xe0\x56\xc8\xeb\x03" +
			"\xde\x3d\x35\x7a\x7d\x49\x7c\xee\x88\x15\x8d\xca\x20\xca\xbb\xa5\x18\x7e\x07\xdb\x24\xb5\x41\xd7" +
			"\x18\x05\xe1\x58\x92\x4b\x1d\x99\xe4\xc2\x9f\x55\x14\x4f\x21\x9b\x82\x17\x2f\x4d\x21\x9c\x32\x73" +
			"\x24\xf2\xdc\xb6\x2f\xc0\xe9\xa1\xe2\x3d\xf7\x7d\x70\x2f\x00\xed\x97\xb3\xe6\xc7\x3d\x51\x7a\x70" +
			"\xbf\x57\x9a\xf1\x28\x73\xb7\x30\x3b\x87\x9e\x0c\x64\xf3\x74\x28\xf4\x3a\x73\xb7\xc9\x7f\x8b\xb2" +
			"\xc1\xa8\x3b\xa8\xbb\xfb\x38\x89\xc8\x87\xd4\x32\x1e\x8f\xd6\xc2\x80\xad\xa1\x67\xd3\xc9\xbc\x16" +
			"\x6a\x3c\x4a\x53\xb8\x7e\x73\xf9\x66\x46\x82\x03\xfb\x83\xc1\x52\xb8\x20\xbd\x54\x75\xe3\x20\x17" +
			"\x4e\xfc\xe7\x78\x24\x0b\xa8\x85\x41\xe5\x08\x93\x76\xdd\xa7\xf6\xd2\xe8\xaa\x65\x2f\x73\xb7\xf1" +
			"\x37\x7d\xf8\x2f\xce\x41\xc9\x92\x34\x35\xb2\x35\xec\x21\x3b\x61\x18\x2a\xb0\x3f\x1d\xac\x5e\xac" +
			"\x64\x99\xbf\x29\xa2\x1d\xb1\x9d\x12\xe2\x78\x3c\xba\x07\x2c\x2d\x7e\x1e\x65\x02\xf7\x7e\xcf\x1c" +
			"\xff\x5d\xaa\x3c\x99\xa3\x8b\x6c\x3d\x85\xc1\xdb\x77\x6f\x2f\xfc\x39\x5d\xa9\xa6\x8a\x59\x78\x34" +
			"\x86\xa4\xb6\x75\x72\x6d\x44\x86\x26\x8a\x93\xef\xd5\xaf\x98\x11\x76\xcf\xb4\xc6\xa3\x7e\x30\x4a" +
			"\x5e\x5d\x5f\xbf\x7d\x85\x22\x47\x63\x1f\x59\xba\x10\xc6\x48\x34\x91\x49\xfc\x8b\x38\xfe\x86\xf7" +
			"\xeb\x69\x2d\x18\xb4\x92\xe5\x14\x8a\xca\x25\x57\x64\x1c\x45\x34\xc9\x74\x53\xe6\xea\x89\x03\xc9" +
			"\xcc\x74\xc6\xbb\xf2\x94\x21\xfa\x72\x1d\x4f\xd8\x96\xbc\xf0\x39\x16\x64\xb8\x75\xf2\x52\x2a\x69" +
			"\x57\x64\x48\x81\x74\x9e\xe4\xe4\x27\x7d\xd7\x30\xe8\xcc\xb6\x75\x6d\x7a\x90\x68\xe1\xf9\xe9\xfb" +
			"\x63\x7e\xc1\xb0\x07\x5e\xb1\xfb\xb0\x7f\x8c\x18\xea\xad\x2e\x65\xb6\x85\x77\xbb\xdf\x61\xbf\xde" +
			"\x1b\xc8\xb1\x90\x0a\x2d\x08\x4f\x19\x6a\x7e\x9d\xf8\xcd\xfa\x80\x83\x68\x97\xa6\xf0\x9d\xc8\x6e" +
			"\x74\x51\x90\x29\x93\x5c\x3e\x14\xa9\xa6\x5a\x90\x7f\xab\x1c\x9c\xac\x48\x41\xba\x08\x84\x85\x73" +
			"\x58\xd5\xce\x26\xe3\x51\x8b\x1a\xc5\xf0\xe1\x23\xe5\xa9\xe4\xb2\x31\xc2\x49\xed\x5d\x85\x77\x05" +
			"\x83\x19\xca\x35\x7a\xba\x7d\x45\x4c\x41\x58\xd8\x60\x59\xd2\x37\x2d\x1a\xb4\x4d\xe9\x40\x17\x8c" +
			"\xdd\xe6\xc2\x10\x01\x9e\x58\xf8\xe5\x52\xff\x02\x15\xba\x95\xce\x93\xf1\x88\xa9\x47\x83\xa0\x30" +
			"\x85\x07\x62\xc2\x42\xeb\x32\xe8\x6c\x2e\xd5\xb2\xc4\xc7\x34\xe7\x56\xc2\x75\xa7\x27\x5a\x6e\x41" +
			"\xab\x0c\xbd\x36\x0f\x49\x0c\xc2\xfc\x11\x85\x0a\x07\x5b\xdd\x80\x5d\x91\xf5\x75\xdb\x60\x47\xfb" +
			"\xcc\x62\xa6\x55\x0e\xa2\x70\x94\x8f\x1c\x14\x42\x96\x36\x09\xc1\xf1\x60\xbf\x18\x1e\xd6\x7c\x2f" +
			"\x9a\xef\xad\xdc\x9d\xc1\x53\xe0\x37\x73\xde\xed\xbe\x6f\x45\xb0\x91\x65\x19\x38\x53\x5a\x9d\xbc" +
			"\x7d\x33\xbf\x9e\xfa\x5f\xdf\x5e\x5f\xbc\xda\x65\x53\x16\xe6\xf9\xfb\xf7\xc9\xb8\x0b\x86\xdf\x3b" +
			"\xb2\x56\x0b\x4a\x3b\xc8\x1a\x43\x71\xa7\xdc\xb6\xd6\xa2\xb6\xfe\x10\x5a\x75\x60\x0e\x8b\xed\x03" +
			"\x87\xfb\x88\xc0\xfe\xb4\x0d\xfe\x06\x7b\x27\x6e\xd0\xd6\xc7\x8e\xbd\x7f\xf4\xa4\x93\x10\x92\x42" +
			"\x88\xf8\xe7\x3f\x49\xa2\xe4\x47\x36\x26\x38\x3f\x87\x09\x09\x3c\x39\xf6\x9e\xc4\xa7\x05\x0e\x2a" +
			"\xb6\xa6\x20\xe9\x1a\x7b\xa1\x73\x84\xff\x80\xe7\xa7\xa7\xfd\x70\x53\x88\xd2\x22\xc7\x8d\xf0\xc2" +
			"\x99\x06\x83\x9a\xaf\x6e\x6b\xad\x50\x39\x29\xca\xa3\xd6\xa7\x00\x77\x10\x03\x27\xf6\x56\xf7\x00" +
			"\xfe\xe3\xa6\x57\xc8\x35\x15\x10\xe1\x2d\x17\x40\xbd\x5d\x4a\x8a\x06\x99\x41\x61\xc9\xc3\x37\x42" +
			"\x3a\xb6\x0f\xcb\xc5\x0a\xba\x0d\xa2\xea\x0e\x7e\x06\x67\xa7\xa7\x53\x78\x46\x7f\xfe\x42\x7f\xfe" +
			"\x4a\x7f\x28\x40\x9c\xbd\x38\x3d\x85\x4a\x96\xa5\xf4\x56\x6c\xe1\xab\xf4\x04\x9a\x9a\x52\xe2\xf3" +
			"\x2f\xe1\x57\xe9\x1c\x9a\xf6\x68\x8f\x4b\xf1\x19\x06\x4d\xc9\xa4\x12\x37\x18\xed\x2d\x4f\xe1\x79" +
			"\x3c\x1e\x29\xbc\x65\x88\xb3\xd3\xd3\xd6\xc8\x7f\xdc\x71\x34\x1e\x19\x95\x73\x41\x20\x54\x9e\xbc" +
			"\xc6\x4d\xd4\xfe\x98\x73\x45\x1c\x31\xc2\x6b\xbd\x89\xe2\xe4\x27\x25\x6f\x5f\x0b\xa5\x7d\xb6\xe4" +
			"\x7a\xe1\x34\x39\x7d\x0e\x69\xca\x62\x3d\xa7\x92\x2d\x43\xe5\x82\x5c\xe3\x11\x15\x9e\x32\x10\x5f" +
			"\x72\x5c\x6f\x2d\xe2\x83\xfc\x08\xe7\xc0\xac\x7d\x05\x03\xa6\xa3\x28\x32\x2a\x4f\x5e\x96\x5a\xb8" +
			"\x17\x7f\x89\xe2\xa7\xcf\xe2\x93\xb3\xf8\x29\x3e\x2d\xc2\x1b\x42\xa2\xfd\xbd\x60\x4f\xcf\xe1\x59" +
			"\xdf\xaa\x0c\xba\xff\xb3\xbe\xfb\xd0\x01\xff\xff\x77\xe0\xd7\xfa\x78\xd6\xf0\x4e\x4a\x09\x52\x51" +
			"\xe7\xe2\x95\x47\x0e\xd5\xe5\x8e\x90\x85\x87\x04\x1e\x77\x5c\x0a\x07\x55\xed\xb6\x60\x4b\x99\x61" +
			"\xab\xdc\x01\x85\x7f\x33\x0b\x0c\xc3\xbe\x28\x37\x62\xdb\x8b\x17\x24\xff\x03\xbb\xfd\xab\x09\xb7" +
			"\xc7\x83\x57\x6b\xdb\x1e\xb1\x82\x42\x09\x38\x54\xc3\xcf\xd2\xad\xfa\x3a\xea\xb4\x01\x0a\x37\x10" +
			"\x9a\x47\x6f\xc6\x7a\x8d\xc6\xc8\x3c\xd4\x15\xbe\x53\x07\xbd\xa0\xa2\xee\x89\xed\x8a\xb1\xae\x0c" +
			"\x62\x89\xf6\xc8\x53\xd9\xdd\x12\x6d\x4b\xd2\x29\x3c\x50\x72\xc5\xfb\x90\xfd\xb6\x29\xac\x10\x7d" +
			"\xdf\x58\x64\xee\x76\x3a\x90\xf3\xee\x7e\x40\x39\xee\xb7\x3e\x4f\xbb\x5a\xf0\x8f\xe8\xe3\xda\x2d" +
			"\xa6\xa0\x6f\xf6\x9a\xa0\xd0\xf5\x0c\xf9\x8a\x93\xa8\x2f\x26\x3b\xda\x17\xfa\xa6\xf5\x8a\x4e\x17" +
			"\xe7\x90\x27\xbd\x67\x76\x92\x2e\xb3\xd0\x3e\xbb\xb5\x64\x67\x98\xbe\x99\x3a\xe2\xe3\x7e\xa1\xf3" +
			"\xf3\x31\xd7\x7c\x73\xb1\xc6\x41\x61\xb4\xd0\x39\xe5\x28\xc8\xa8\x35\xde\x20\xac\x18\x40\xfb\xcd" +
			"\x12\x78\xe3\x56\x68\x36\xd2\xaf\x71\x14\x64\x00\x51\x1a\x14\x39\x99\x8f\xc8\x99\x2e\x77\xd7\x4d" +
			"\x41\xa5\xbc\x56\x5d\x74\xcb\x07\x5b\x31\x3a\xd5\x5d\x09\xcc\x11\x19\x8d\x18\x9e\xa5\xa9\x75\x24" +
			"\xce\x1a\x4d\x51\xea\x0d\x4f\x3e\x18\x43\x6a\x65\xd3\x67\x7f\x3e\xfd\xfa\xf4\xaf\x5f\xbf\x48\x69" +
			"\x2f\xa9\x96\x27\xc4\xf1\x89\x2e\x4e\x08\xf7\x24\xd0\x3e\xa1\xc4\xab\x1b\x77\x52\xe9\x5c\x16\x14" +
			"\x1b\xba\x15\xeb\x84\x0b\xba\x58\x34\x05\x7c\xf8\xb8\xd8\xd2\xb3\x2c\xc0\x24\xdf\x91\xf0\xbd\x9e" +
			"\x66\xa8\xb0\xd1\x68\xd1\x14\x3e\x52\x9e\x83\x9f\x2e\x25\xef\x50\xe4\xdf\x96\x65\xe4\x71\x29\x7f" +
			"\x0c\xa3\x26\x51\x19\xb4\x46\x68\x88\xd0\x3d\x1d\xa6\xcf\x64\x6d\xdd\x4b\x69\xef\x1b\x8e\x7e\xdf" +
			"\xb4\xef\xbe\xfa\x8a\xf1\x8f\xb2\x36\x32\x39\xb7\x7b\x81\x8f\xd7\xba\xbe\x28\xb5\x45\x13\xf1\xbc" +
			"\x8c\x32\xed\x77\xac\xfe\x68\xd1\x14\x9c\xd7\x46\x81\xc6\x39\x98\x3c\xb0\xc0\xd1\xb9\x15\x68\xd0" +
			"\x5d\xf9\x4d\x03\x67\xe7\xe7\x50\xa2\x8a\x5a\xd3\x8b\x29\xe4\x7f\xd1\x37\xbe\x90\x69\x7c\x66\xf1" +
			"\xad\x9c\xe7\x71\x61\x50\xdc\x84\xbd\xd2\x14\x98\xc3\xb6\xf1\x60\x9b\xf4\xe6\xc6\x86\x41\x06\xb2" +
			"\x14\x52\xb5\x49\x83\x98\x4d\x18\x83\x6c\x7a\xe4\xcb\xe8\x12\xb1\xee\x18\xf9\x10\x18\xfc\x18\x0f" +
			"\x53\x75\xe0\x21\x44\xdd\x4c\x9a\xac\x91\xee\x3b\x62\x05\x0d\xf7\x7f\xb2\xaa\x4b\xac\x50\xb9\x10" +
			"\xca\x3c\x04\x2c\x3c\x08\xd4\xd4\x70\x19\xc5\x39\x7b\x8e\x0e\x72\x5c\x34\x3c\x6e\xa0\xc3\xa1\x6f" +
			"\x5d\xa3\x11\x0e\x07\xc8\x52\x81\x80\x8a\x52\xdc\x66\x85\x06\xa9\xa5\x60\xfb\xd6\xaa\xdc\x42\xa9" +
			"\x97\x3d\x56\x80\x4d\xd0\x97\x72\x0c\x43\xa5\xc0\xa2\xd4\xd9\x0d\x17\x00\x5d\xf1\x50\x18\x5d\xc1" +
			"\x52\xf3\xac\x63\x65\x74\xb3\x5c\x85\xb4\x76\x44\xa4\xc7\x5a\x5a\xcf\xbf\xff\x70\x5f\x36\x0a\x04" +
			"\x78\x3c\xe3\x67\x30\xdd\x58\x90\x3f\xfe\x77\xf2\x77\x9e\x08\xfe\xc0\x0f\xa4\x4d\x72\x87\x80\x3a" +
			"\x9f\x5f\xbd\x51\x19\x82\xdd\xaa\x2c\xa1\x5f\xac\xeb\x57\x7e\x2a\x3a\x9f\x5f\x5d\xad\x29\x3b\x48" +
			"\x0b\x58\x51\xd5\xc6\x65\xcc\x6e\x7c\x0a\x6b\x29\xc0\xa2\x59\xa3\x39\xb1\x04\xe8\x87\xa5\x09\x17" +
			"\x47\x68\x33\x23\x17\xbe\x26\x26\x0d\xb3\xb6\x28\xd9\x8b\x76\xf3\xa0\x86\xfd\xdd\x76\x3a\xb8\xa6" +
			"\xe5\x47\x3e\x5e\x66\xf8\xe5\x57\xab\xd5\x6c\x42\xc4\x26\xbf\x8c\x47\xac\x8e\xcf\xc6\x52\xa2\x62" +
			"\xac\x90\x24\x2e\x74\xa3\xdc\x31\x2c\xe9\x5f\x07\x2c\xd3\x83\x26\x6c\x9e\x92\x3c\x88\xbb\x8f\x8d" +
			"\x1d\x74\x87\xfb\xd6\x17\xc7\x62\x89\x9f\x83\xbb\x83\x26\x02\xdf\xdb\x8b\x81\x25\xbd\xa9\x51\xf5" +
			"\x09\x70\x4d\xd1\x11\x90\x47\xa0\x59\x01\xba\x2c\xa5\x5a\x32\x5b\x2f\x85\x2c\x1b\x83\x8f\x29\xe0" +
			"\x10\xfa\x90\x48\x59\x92\x8f\xf7\x89\x3d\x46\x64\x00\xfd\x10\xb1\x79\x93\x65\x68\xed\x67\x12\x0b" +
			"\xd0\xfb\xc4\xe6\x2b\x6d\x5c\xd0\x02\xe6\x9f\x12\x6f\x08\x7d\x40\xab\xc7\xd0\xa7\x55\xf5\x00\x43" +
			"\xd7\x2b\xca\x82\x6f\xb5\x2e\xdf\x21\x15\x62\xc4\xd4\xc3\x44\x0e\xa1\x0f\xe8\xc9\x0a\x75\xe3\x3e" +
			"\x93\xa9\x00\x4d\x44\x2e\x7c\x27\x73\xa1\x55\xe8\x69\xae\x6e\x31\x6b\x28\x63\x7b\xe3\x1e\x12\xc9" +
			"\x1e\x87\x26\x82\x3f\x08\x87\x2a\xdb\x5e\x6b\x27\xca\x1f\x51\xa8\xc7\x8d\xbb\xec\x41\xff\xa3\x42" +
			"\x41\x86\xd9\xd6\x7b\xa5\x5e\x72\x7c\x88\xca\x63\x71\x6d\x0a\x07\x81\x84\x93\x57\x99\x7c\xaf\x0a" +
			"\x7d\x19\x61\xe2\x27\xbe\x95\xa8\x3f\xf8\x00\xf0\xb1\x9b\xe7\xdd\xdd\x53\x96\x1b\xfa\xf4\xec\x98" +
			"\x17\x63\xd2\x8f\x12\x53\x42\xea\xb9\xf2\xec\xb8\xeb\x63\xb2\x0b\x0e\x3b\x94\x9e\x07\xcf\x1e\x42" +
			"\xd9\xc1\x30\xde\x51\xc7\x9d\x0d\xf1\x8e\x85\x02\x46\x3e\xe6\xaf\xb3\x7d\xe1\x0e\x61\x8e\xe0\x0e" +
			"\xdd\x74\x76\x14\x77\x00\xf3\x20\x8d\xd6\x19\x1e\xa3\x11\x60\x0e\x68\xec\x39\xe5\xec\x98\x0c\x43" +
			"\x98\x43\x12\x83\xed\x8f\xab\xe1\xa1\xed\x8f\xb8\xe0\x6c\x1f\xf7\x10\xe6\x90\x4c\xf0\xbc\xc7\x58" +
			"\x08\x30\x8c\xfb\x29\x87\x9b\x01\x26\x9f\x70\x61\xa6\x53\xee\x79\xe5\xa1\x0d\x62\xb2\xef\xb9\xd3" +
			"\xf1\xe8\x3e\x1e\x0f\xda\xaf\xc3\x02\x26\x06\xa9\xa4\x8b\xe2\x30\x22\x7f\x8b\x46\xea\x5c\x66\x3c" +
			"\x31\x2b\xf5\xd2\xcf\xd0\x95\x28\x87\x35\x14\x15\x63\xc2\x5a\x69\xb9\xfe\xb2\xe8\x1c\x97\x32\xbd" +
			"\x52\xcb\xad\x0c\xda\x95\x2e\x73\xcb\xe5\x56\xa3\x72\x34\xd6\x09\x95\xf3\xb8\xa0\xae\x4b\x99\xf9" +
			"\xf6\x7d\x81\x2b\xb1\x96\xda\x24\x8c\xfe\x93\x2a\xb4\x71\x8d\x12\x0e\xcb\xed\xb4\x5f\xb9\xe4\x1a" +
			"\xad\x7a\xe2\x42\xdb\x03\x4b\x83\xc2\xc1\x46\x6c\x89\x15\xbc\xad\x7d\x81\x2b\x2d\x53\xc9\x85\x13" +
			"\x53\xb0\x9a\x7a\x25\x83\x56\x1b\xc7\x55\x64\x63\x14\xcf\xf7\x15\x48\x67\xc1\x36\x35\xdf\x75\x53" +
			"\x2f\xb0\x30\x5a\xe4\x99\xb0\x07\x62\x54\x54\xe9\x66\x96\xeb\x26\x9e\xe8\x1f\x16\x4f\x10\xcd\xe7" +
			"\x57\xb1\x67\x7f\x8e\x7e\xf0\x6f\x67\x69\xfa\xc8\x25\xb6\xb4\xb6\x41\x9b\x3e\x7f\x91\x74\x25\x61" +
			"\xa8\xeb\xa8\x13\xa0\xd3\xf2\x07\x32\x0a\x38\x73\x67\x50\x54\xed\x75\xcb\xec\xbc\xd5\x0b\xcf\xf5" +
			"\xfa\x6b\x5c\xb1\x1f\x43\xf2\x17\x5e\xbc\x5c\x4a\xeb\x50\x71\x00\xf6\x17\x57\x0a\x5d\xf2\x03\xbf" +
			"\x8c\x26\x2e\xab\x27\x53\x98\x9c\x3d\xfb\x3a\x39\x4d\x4e\x93\xb3\xd9\xe9\xe4\x81\xde\xaa\x16\x4a" +
			"\x66\x91\xbf\x3d\xe2\x9e\x6a\xb4\xf4\xb7\xa2\xc9\x9c\x54\x14\xed\xb6\x39\xc6\x4f\xec\xe1\x7b\xa2" +
			"\x92\xfa\x7e\x46\xb6\x39\x5c\xa3\xd9\xc2\xd9\x29\xb4\x53\xd6\x05\x66\xa2\x09\x1d\x0c\x51\x43\x23" +
			"\x6f\xbb\xa3\x11\x06\xe9\x48\x05\x9c\x9d\x9e\xb4\x43\x50\xa6\x16\xfc\x16\x36\x52\xe5\x7a\x93\xc0" +
			"\xf5\x4a\x5a\x28\xd1\x3d\xb1\xd0\xd0\xf1\x57\x3c\xb9\x3d\x46\xd2\x69\x58\x22\x5f\x4d\x98\x72\x1b" +
			"\xa8\x89\x2c\x6b\x7c\xf3\x41\xfe\x15\xae\x8d\x2c\x44\x4a\x73\x43\x22\x1c\x9b\x1f\x48\x36\xd2\x1a" +
			"\x4d\x81\x99\xeb\x18\xd7\x8d\x09\xb7\x4b\x81\x5a\x6b\xcd\x01\xb0\xdc\x42\x25\x5c\xb6\xea\x58\x79" +
			"\x62\x43\x9b\x42\x2d\xbe\xd5\xac\x96\xcd\x0a\xd5\xb1\xbe\x29\x90\xb4\x3c\xec\x83\x6c\x25\xd4\x12" +
			"\x2d\x77\x9e\xa5\x5e\xbe\xe4\x24\xa9\xb2\xad\x9f\x19\x0f\xef\x45\x18\x46\x58\xc7\xd9\x77\x8e\xa8" +
			"\xfc\xe8\xb9\x4b\xb8\x7b\xf9\xf9\xee\x7e\x80\xf0\x83\x5e\x52\xa8\xdb\xc3\x61\xf2\xf4\xfe\x8e\x8d" +
			"\x82\x5b\xed\x7f\x40\x3b\x33\x0e\xab\xd9\x4d\xb4\x77\x45\x13\xc3\x1d\x74\xa3\x2c\xa9\x78\xe6\x28" +
			"\x29\x08\x10\x8d\x51\x63\x4a\xda\x66\x12\xc6\x14\x13\xf8\x0a\x5a\xfb\x4a\xbe\xcd\x73\x13\xc5\xc9" +
			"\x9c\xb7\x67\x0b\xa7\x46\xf6\xb7\xce\xbc\xd9\x26\x5f\xe3\x26\x54\x02\xd1\xe4\xbf\xae\xae\x27\x53" +
			"\x68\x4c\x39\x25\x6b\xf6\x08\x47\x0c\x9c\xd5\x97\xbc\x35\x52\xb9\x22\xf2\x35\x00\x64\x5a\x29\xcc" +
			"\xda\x5b\xf0\xf6\x1c\xe6\xf3\x2b\xea\x51\x50\x54\x33\xf8\xd2\x76\x77\xaa\xf4\xc9\xb4\x72\x52\x35" +
			"\xc8\x4f\xac\xbe\x91\x87\xec\xd8\xeb\xfd\xbb\x4a\x32\x6f\x16\xbe\x07\xfb\x59\xba\x55\x34\x99\x4c" +
			"\xe1\x4f\xbd\xf9\x98\x1f\xac\xfd\xf6\xbf\xce\x30\x9d\x20\xae\x77\x73\x7f\x8f\x99\x5c\xf9\xe8\x17" +
			"\xb6\xe6\x89\xcd\x7e\x41\xe7\x97\x76\x57\xe4\x54\x33\x26\x3f\xa9\x4a\x18\xbb\x12\x65\xe4\x47\x40" +
			"\x11\xae\x93\x4b\xe1\x44\x14\xc7\x53\xf8\x13\x1e\x5e\x70\x1f\xb0\x15\xf8\x62\xc2\x09\xb7\x9c\x5f" +
			"\x9c\xc3\x24\xec\x7d\xa1\xab\x4a\xa8\x7c\xf2\x38\x2a\x19\x31\x19\x7c\x3b\x3a\x1c\x78\xc1\x07\x5f" +
			"\x7b\x7e\xdc\x81\x1e\x2c\xc1\x39\xe0\xd8\xaf\xa7\x29\x7b\x67\xdf\x31\x7d\x8e\x94\x05\x48\x0a\x36" +
			"\x28\xdd\xca\x7b\x29\x03\x47\x67\x31\x03\x17\xd2\xd8\x90\x43\x60\x83\x4f\xd6\x08\x96\x3c\x90\xb4" +
			"\xdd\xa7\xa5\x7b\x98\xcf\xe2\xe1\x12\xb5\x8d\x7e\xaf\x95\x68\x3d\x3f\x1f\x60\xfc\x39\xee\xc7\x51" +
			"\xce\x9d\xb5\xb0\x16\x73\xb0\x52\x65\x3c\x4c\xe4\xda\x3c\x07\xab\x2b\x74\x2b\x32\x94\x3d\x0e\x3a" +
			"\x5d\xb7\xa3\xd2\xd1\x91\x20\xd0\xd3\xcb\xee\x86\xa9\x85\x6d\xfb\x80\x3c\x29\xdb\xd2\x3f\xfe\xc4" +
			"\xb9\xb6\xe7\x73\xb4\x3e\xa6\xe3\x3e\x5e\x39\xff\xd1\xfc\x85\x7f\x21\x91\x45\x0f\x8b\xbc\x34\x7a" +
			"\x88\x7e\x0c\x7f\x83\x41\xd4\xfd\xa3\x19\xda\xf9\x25\xfd\xb9\x27\x9c\xfb\xf8\x93\x35\xde\xef\x9c" +
			"\xb5\xcb\x02\xf2\xc4\x4f\xb3\xee\x06\xd3\xcb\xd9\xc1\xf8\xb2\xad\x4c\x2e\x75\x94\x27\xbd\x71\xd7" +
			"\xb4\xcd\xf5\x3e\x2e\xb1\x5a\x8e\xc5\xb0\x30\x4c\xf4\xd3\x5a\x2f\x28\x4f\x44\x87\xb7\x59\x7f\x3b" +
			"\xef\xae\xb3\x46\xfe\x3f\x28\x30\x0f\xc3\x72\xc2\x16\x2a\x6c\xc3\xb3\x43\xc9\xf3\xb5\xbe\xd3\x84" +
			"\x3c\xdc\xdb\x4c\x1b\x1e\xdd\x46\x93\xe7\xef\xdf\x73\xc5\xe3\xb7\x1e\x70\x73\xdf\xe5\x8b\x83\x89" +
			"\x27\x17\x40\x9f\x39\xfe\x1f\xf9\xb1\xef\xbf\xa0\xa8\xc7\xa7\xc5\x0f\x0c\xbd\xbb\x79\xf7\xa7\xf4" +
			"\xf7\x6f\xab\xef\x11\xed\xdd\x8f\x87\x7c\x78\xd5\x41\xfa\x14\x94\x86\x22\x74\x8a\x2c\xa8\xbf\xd8" +
			"\xde\xa2\x83\xa7\x69\x7c\x74\x96\xfc\x3f\x01\x00\x00\xff\xff",
		size: 10915,
	},
	"../_hardcoded/middleware.go": &asset{
		name: "middleware.go",
		data: "" +
			"\xbc\x57\x6d\x6f\xdb\x46\xf2\x7f\x2d\x7e\x8a\x29\xff\x48\x4c\x1a\x34\xe5\xff\xe1\xae\x2f\x5c\xf8" +
			"\x80\x40\xb5\x9b\xe0\x92\xc6\x67\x39\xed\x01\x41\x70\x5d\x91\x23\x72\x2b\x6a\x97\xdd\x1d\x8a\x16" +
			"\x0c\x7f\xf7\xc3\xec\x2e\x29\xca\x76\x8a\xbc\xb9\x0b\x10\x8b\x9c\xd9\x79\xd8\x99\xdf\x3c\xb0\x15" +
			"\xc5\x46\x54\x08\x16\xcd\x0e\x4d\x14\xc9\x6d\xab\x0d\x41\x12\xcd\xe2\x42\x2b\xc2\x7b\x8a\xa3\x59" +
			"\xbc\xde\xba\x1f\x85\x34\xaf\x89\x5a\x7e\x36\x9d\x22\xb9\xc5\x79\x89\xab\xae\x8a\xa3\x68\xa6\x5b" +
			"\x54\x64\x44\x21\x55\x05\x71\x25\xa9\xee\x56\x79\xa1\xb7\xf3\x09\x7d\xfa\x7c\x56\xe9\x38\x9a\x91" +
			"\xa8\xec\x37\x9e\x9e\x7b\x5f\x26\xc4\x46\x7f\xab\xa5\x79\xa3\x2b\x76\xba\xd2\xed\xa6\xca\xa5\x9a" +
			"\x2f\x1a\xdc\xa1\x99\x6f\xc4\x7e\x87\x78\x56\xe9\x7c\xf7\x3d\x9f\xa9\xd0\xc4\x51\x1a\x45\xf3\x39" +
			"\xdc\x08\x25\x8b\x0f\xb2\x2c\x1b\xec\x85\x41\x68\x74\x65\x41\xa8\x3d\xb4\xcc\xb0\x39\x5c\x6b\x03" +
			"\x4a\xf7\x19\xf4\x78\x62\x10\x38\x5a\x52\x75\x08\x54\x1b\xdd\x73\x10\xa8\x46\x7f\x18\xba\x96\x35" +
			"\xf2\xbb\x25\x51\x6c\xc0\x6a\xa0\x5a\x5a\xd8\x8a\x3d\x14\x46\xd8\xda\x9f\x35\xba\x40\x6b\xf3\x68" +
			"\xdd\xa9\xe2\xa9\xfd\xa4\x06\x8e\x7c\xfe\x56\xa8\xb2\x41\x93\x1e\xbd\xc1\x43\x34\x33\x48\x9d\x51" +
			"\x47\xe4\xeb\x4e\x15\x09\x2b\x4b\x7a\x4f\xbf\x45\xdb\x6a\x65\xf1\x57\x23\x09\x4d\x06\x06\x4e\x03" +
			"\xfd\x8f\x0e\x2d\xa5\xac\x67\x56\xe2\x1a\x0d\x38\x31\x4f\x98\xb9\x4b\x5c\x19\x03\x17\x97\x60\xb0" +
			"\xd0\x3b\x34\x49\xca\x0c\xb9\x86\x91\x77\x79\x09\x4a\x36\x5e\x20\x38\xc3\x8f\x8f\xfc\x67\x27\x0c" +
			"\xa0\x71\xff\xb5\x89\x98\x62\x7b\x49\x45\x0d\x53\xcd\xc3\x73\x9e\xd0\xbe\xc5\x60\xba\x10\x96\x83" +
			"\x66\xa4\xaa\x2e\x9c\x66\x56\x73\x09\xeb\x2d\xe5\x57\xac\x6c\x9d\x0c\x62\xe9\x78\xdc\x59\x99\x9e" +
			"\x1e\x8e\x30\xa9\xc4\xb5\xe8\x1a\xfa\x8a\xb2\xb8\x53\x1b\xa5\x7b\x15\xf2\xf6\xea\xff\x76\xa0\xd7" +
			"\xc0\xfe\xc0\xab\xbb\x38\x1b\x35\x1d\x9e\x52\x7f\x49\xfe\xeb\xf1\x93\x5f\x1b\xbd\x5d\xf8\xd2\x49" +
			"\x4c\x3e\x3c\xa5\xa9\xb7\xf1\x63\x12\x3b\xd1\x38\x73\x1e\x04\x99\x0f\x0f\x31\x1a\x13\x5f\xb0\xef" +
			"\x19\xc4\x0e\x25\x8c\x5e\x8c\x2f\xc2\xed\x13\x57\x67\xf9\x92\x39\x49\x9a\x3e\xa6\x63\x62\x8e\x22" +
			"\xf0\xe8\x12\x53\xe7\x4b\x2e\xe7\xb7\x77\x77\x37\x49\x9f\x01\x73\x1e\xd3\xe8\xd1\xe1\xda\x92\xa0" +
			"\xce\x1e\x23\x01\x7a\x23\x5a\x0b\x02\x4c\x20\x43\xef\xe8\x91\xbb\xf9\x8b\x12\x96\x4c\x57\x10\x27" +
			"\xe9\x05\x64\x45\x33\x2f\x03\x52\x11\x9b\x75\x80\x4e\x2c\x9c\xbe\xa4\x2a\x05\xf7\xfb\x16\x45\x89" +
			"\x26\x29\x74\x89\x2c\xe6\xf2\x6f\xf3\xa0\xe7\x12\x98\xce\x84\x63\xd9\xfc\xa9\xa8\xbb\xa5\xf3\x3a" +
			"\x14\xff\xc7\xf6\x67\xb1\xc5\xe0\xee\x83\x0f\xc1\xaf\x92\xea\xbb\x23\xb6\x28\x4b\xeb\x6a\x50\xb7" +
			"\xa0\x98\x40\x1a\x04\x84\x06\x08\x6b\x6d\xa0\xb3\x08\xab\xbd\x3b\x33\x34\xb9\x46\xae\x8c\x30\xfb" +
			"\x1c\xde\x11\xb3\x2d\xab\x16\xd0\x6a\xa9\x38\x40\x2b\x2c\x04\x0b\x49\x3a\xb1\x50\x88\xa6\xc1\x12" +
			"\x56\xd8\xe8\x1e\xa4\x9a\xb4\x02\xa1\x4a\x6f\x58\x35\x7b\xe8\xc5\x9e\x2d\xb7\xc2\x7a\x6f\xa4\x5a" +
			"\xeb\xd0\x3c\xa4\x65\x4e\x2d\x76\xac\x11\x04\x58\xa4\x83\xb1\x1c\xae\x76\xc8\x5a\x75\x57\xd5\xcc" +
			"\x2f\x35\x5a\x75\x42\x50\xd4\x42\x55\xe8\x74\x0d\x97\xe9\xd9\xb2\x6c\x1a\xa7\xcb\xb7\x25\x69\x21" +
			"\x74\x8f\xc3\x9d\x49\xc3\x56\x48\x45\x22\x78\x2b\x9b\xa6\xb3\x52\xab\xd0\x9d\x9e\x85\x30\x29\xe8" +
			"\x7e\x10\x1e\x40\x9f\x81\x1e\xa3\x2f\x55\x95\x3e\xe5\xbb\x14\x93\xb9\x21\x57\xff\x05\xdd\xe7\xbf" +
			"\x88\xa6\xc3\xe4\x28\x75\x0f\x8f\x69\x9e\x9c\x06\x0d\x11\xb7\x9c\x20\xf2\xdd\xa1\xe1\x9c\x06\xd2" +
			"\x65\x30\x18\x71\xdb\x09\x57\x2a\xe8\x3e\x20\x3f\xf8\x3b\xe9\xe9\x85\x41\x41\xc8\xc0\x57\xd8\x83" +
			"\x6d\x85\x72\xd9\x2f\x41\xac\x39\x85\x7c\xef\x4f\xb7\xef\xa1\x15\x54\xbb\x3e\x50\x23\x18\xdf\x2a" +
			"\x73\x56\xf8\x8e\xa0\x6d\x44\x81\xd6\xc7\xd0\xc9\x87\x70\x85\x63\xc3\x8d\xb3\x29\x86\x34\xd5\x68" +
			"\xa0\xf6\x3d\xda\xc2\x4e\x0a\x98\x4c\xab\x7c\xd9\x0a\x35\xed\x21\xa9\x33\xb5\xe6\x9c\xb3\x01\xbc" +
			"\x97\x96\xb8\xb2\x46\x1b\xb5\x83\xbf\xcd\x3c\xaa\xf8\x8c\xbf\x57\xe9\x01\xcb\x73\xe6\x70\xe5\x9e" +
			"\x53\xbf\x42\xce\x74\x2d\x9b\xd2\x5f\x4b\x90\x93\x0b\xb9\x7d\x16\xa7\xff\xdd\xec\x99\xcf\xe1\x0d" +
			"\x11\x6e\x5b\x07\xc0\xdf\xb5\x54\xc3\xb5\x57\x7b\xa8\x90\xc8\xcd\x55\x6e\x8c\xbe\x36\xd6\x46\x6f" +
			"\xdd\xb5\x43\x0c\x72\xaf\xe3\x4e\x73\x75\x19\x82\x5e\x52\xed\xc2\x3e\xa4\x52\x0c\x65\xee\x71\x29" +
			"\x55\x81\x5c\x11\x5c\x0b\x5c\x2f\x95\x26\xe2\x42\xd2\x3e\x89\xba\x63\x18\xec\xb9\xd4\x54\xe9\x55" +
			"\x4f\xe8\x3c\x29\x2c\x88\x95\xee\x28\x28\xb4\xd1\x6c\x16\x54\xf3\xa8\xcc\x3f\xdd\xbe\xcf\x6f\x04" +
			"\xd5\x91\x1f\x81\xb6\x7d\x96\xe8\xc8\x0d\x51\x5b\x64\x6e\x3e\x5e\x5c\x1e\x1d\xf8\xa9\xd1\x2b\xd1" +
			"\x70\x3a\x78\xe0\xf2\xdd\x66\x57\xf7\xcc\xa4\x64\x7a\x8c\xdb\xfc\xdb\x80\x01\x37\x54\xbe\xc2\x5c" +
			"\x08\x63\x24\x9a\xc4\xe4\x9e\x90\xa6\x3f\x38\xab\x93\x42\x9a\xd9\x16\x8e\x7d\x58\x72\x1c\xd9\xd3" +
			"\xc4\x5f\xcc\x0d\x19\xc0\xc6\xe2\x37\x0a\x64\x47\xdc\x05\x83\xee\xe3\x3a\xb1\x45\xea\x34\x8d\xfb" +
			"\x86\x6d\xf3\x6b\xa9\xa4\xad\x93\x34\xf2\x91\x96\xea\x77\x2c\x3c\x30\xe1\xdd\x8f\x3c\x13\xb4\x5f" +
			"\xc2\xb8\x37\xcb\x72\x5a\x01\x6e\x36\x56\x52\x55\xd1\x6c\x46\x1c\xc5\xad\xd8\x60\xb2\x15\xed\x67" +
			"\xdf\x37\xbe\x8c\xed\x83\xa3\x1d\x22\x6d\xdb\x7c\x0c\xed\x3b\x67\x2b\xb1\xed\x61\x5e\x1f\xfb\x7d" +
			"\x87\xf7\xf4\x41\xb4\x2e\xbe\x2f\xd0\x87\xd0\xd2\x10\xd3\xe9\x36\xc4\x09\xe6\x19\x5d\x66\xa0\x37" +
			"\x6c\x99\x3e\xc7\x9a\xce\x1c\x8c\xcd\x99\x67\xc5\x5f\x7e\x60\xe6\xc3\x74\x29\xf8\xea\x22\xf1\xa6" +
			"\x2c\x87\xb7\xe7\x8a\xb2\x60\x2c\x1d\xb6\x2f\xb7\x9c\xd8\x36\x7f\xaf\x2b\x9e\x12\x94\xc4\x21\x6c" +
			"\xff\x36\x58\xa0\xdc\x61\x19\xa7\x2f\xae\x7d\x2f\xca\xac\x5d\x92\x82\x8c\xdf\x36\x14\xf6\x0b\xba" +
			"\x7f\x0a\xde\xe0\x21\x0f\x0a\x87\x06\x33\x0d\xad\x6d\x53\x9f\xe4\x4f\x96\x5b\x91\x4f\xcf\x38\x3a" +
			"\xad\x86\x46\xec\xb9\x37\xfa\x81\x59\x08\x05\x5b\x5d\xca\xf5\x1e\x24\xf1\x65\xc6\x99\x11\xc7\x07" +
			"\xfb\x97\xe3\x78\x61\x9b\x7e\x92\x78\x56\x06\x4f\x26\x4a\x06\xaf\xbd\x0e\x87\x35\x6b\x7a\xd6\xf5" +
			"\xfa\xa5\xe5\xc4\x07\xc2\x31\x2e\x60\xf8\xf7\x97\xf3\x73\x07\x84\xe3\xa3\x17\xd0\x67\x43\xb8\xf9" +
			"\xb3\xc6\x95\xde\x07\xa4\x5a\x97\xf9\x12\x19\x5c\x19\x98\xdc\x13\xd2\xe1\x0c\x87\xe6\x1f\x52\x1d" +
			"\x4e\x1c\x51\x6f\x6f\x16\x6e\x91\x33\x57\xaa\xdb\xa6\x53\xbd\x9f\x4c\x33\x51\x3a\xf4\x99\x74\xcc" +
			"\xf4\xb5\xc4\xa6\xb4\xc9\xf1\xc7\x52\xbe\xf4\xab\x64\xdc\x99\xe6\xec\x8f\x0e\xcd\x3e\x1e\xa4\x6f" +
			"\x45\xff\x4f\x26\xa4\x2e\x22\xcf\xb1\x30\x1a\x5e\xba\x58\x2c\x74\x89\xa3\xfd\x4e\x2a\xfa\xff\xef" +
			"\x13\x6b\xfa\xb0\xae\xa5\xc3\xc7\xc1\x81\x04\x7f\xbf\x84\xbf\x9d\x9f\x07\x80\x3b\x6d\x6e\x1d\x3e" +
			"\xdc\xdb\x74\x38\x42\x96\x91\xf1\xb3\xee\xfd\x64\x0a\xed\x79\xda\xb7\x1b\xe4\xa5\x8a\xcc\x9e\xd7" +
			"\x20\x37\x13\x1c\x2e\x66\x63\xc7\x71\x65\xe6\x93\xff\x0d\x3b\x85\xf3\x55\x6f\xe0\xf5\xeb\xc1\xc0" +
			"\xb4\x25\x72\x44\x97\x48\x1f\x5b\x34\x82\xa4\x56\x6e\xdb\x39\x3d\x74\x43\x5f\x64\xbe\x6d\x4d\x17" +
			"\x6f\x6b\x78\xf5\x76\x60\x1c\x90\xef\x3d\x4a\xa7\xeb\xf8\x2f\x68\x78\xad\x7a\x53\x14\xd8\x32\xf6" +
			"\x4b\x2c\x64\x89\x16\xfa\x1a\xdd\x9a\xc0\xcd\xce\xf1\x40\xc0\xce\x9f\xcd\xfd\x82\xfb\x54\xd2\xa5" +
			"\xab\x68\x24\x2a\x0a\xac\x71\xef\x5a\x69\xdd\x38\x6b\x8b\x29\x7b\x51\x63\xb1\x99\x6e\x43\xfc\xee" +
			"\xe7\xa3\x57\x73\x30\xe8\xf6\x82\x3f\x13\x7e\xb2\x22\x64\x83\xd3\x4f\x9c\xfc\x2f\xae\x0e\xc1\x57" +
			"\x3f\x78\xfd\x80\xcb\x7f\x42\x4a\xe2\x7f\x9d\x79\xc7\xcf\x82\x2f\x71\x18\x03\xdf\x79\x17\x93\x20" +
			"\x18\x80\xde\x1f\x7d\x52\xfc\xf5\xfc\x3c\x9d\x50\x93\xcf\x5f\x56\x7b\xc2\x84\xbf\x18\x97\xad\x91" +
			"\x8a\xd6\xc9\x6f\x0f\xf1\x16\xad\x15\x15\x7f\xab\xc5\x83\x17\x27\xaf\xec\x09\x28\x4d\x21\x0e\x58" +
			"\xc6\x8f\xbf\xa5\xbe\x2e\xc6\x6f\xe3\xc7\x3f\xf9\x52\xfb\x4f\x00\x00\x00\xff\xff",
		size: 4503,
	},
}

// AssetAndInfo loads and returns the asset and asset info for the
// given name. It returns an error if the asset could not be found
// or could not be loaded.
func AssetAndInfo(name string) ([]byte, os.FileInfo, error) {
	a, ok := _bindata[filepath.ToSlash(name)]
	if !ok {
		return nil, nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
	}

	a.once.Do(func() {
		fr := flate.NewReader(strings.NewReader(a.data))

		var buf bytes.Buffer
		if _, a.err = io.Copy(&buf, fr); a.err != nil {
			return
		}

		if a.err = fr.Close(); a.err == nil {
			a.bytes = buf.Bytes()
		}
	})
	if a.err != nil {
		return nil, nil, &os.PathError{Op: "read", Path: name, Err: a.err}
	}

	return a.bytes, a, nil
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	a, ok := _bindata[filepath.ToSlash(name)]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
	}

	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	data, _, err := AssetAndInfo(name)
	return data, err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}

	return names
}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	return restore.Asset(dir, name, AssetAndInfo)
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	return restore.Assets(dir, name, AssetDir, AssetAndInfo)
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree

	if name != "" {
		var ok bool
		for _, p := range strings.Split(filepath.ToSlash(name), "/") {
			if node, ok = node[p]; !ok {
				return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
			}
		}
	}

	if len(node) == 0 {
		return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
	}

	rv := make([]string, 0, len(node))
	for name := range node {
		rv = append(rv, name)
	}

	return rv, nil
}

type bintree map[string]bintree

var _bintree = bintree{
	"..": bintree{
		"_hardcoded": bintree{
			"doer.go":       bintree{},
			"middleware.go": bintree{},
		},
	},
}
