// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../_hardcoded/doer.go (10.416kB)
// ../_hardcoded/middleware.go (1.683kB)
// ../_hardcoded/tracing.go (6.966kB)

package hardcoded

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __hardcodedDoerGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x3a\x7f\x6f\x1b\x37\xb2\x7f\x4b\x9f\x62\x22\xe0\x2e\xbb\x8e\xbc\x2b\xe7\xce\xe9\x41\x7d\x3e\xa0\xb5\xdd\xd7\xe2\xa5\x49\x50\xb9\xaf\x01\x82\xe0\x4a\xed\x8e\x24\xd6\x14\xa9\x90\x5c\xc9\x82\xcf\xdf\xfd\x61\x86\xdc\xd5\xae\x24\x3b\xb9\x6b\xf1\xf0\x9e\xff\x90\xb4\xcb\x99\xe1\x70\x7e\xcf\xd0\x2b\x51\xdc\x8a\x39\x42\xa1\x24\x6a\xdf\xef\xcb\xe5\xca\x58\x0f\x49\xbf\x37\x98\x6e\x3d\xba\x41\xbf\x37\x28\x8c\xf6\x78\xe7\xe9\x27\xea\xc2\x94\x52\xcf\xf3\xdf\x9c\xd1\xfc\xc2\x5a\x63\x19\x4a\x9a\x5c\x9a\xca\x4b\x45\x0f\xca\xcc\xe9\x6b\x29\xfc\x22\xb7\x42\x97\xf4\xa0\xd1\xc7\xaf\x7c\xe1\xfd\x8a\x7e\xbb\xad\x2e\xe8\xdb\xcb\x25\x0e\xfa\xfd\xde\x60\x2e\xfd\xa2\x9a\x66\x85\x59\xe6\x62\x86\x77\xf9\x62\xeb\xbc\x95\x77\xa7\x73\x53\xff\x1c\x74\xa1\x4a\xa3\xcd\x5a\xe8\x85\x2c\x31\xc7\x35\x6a\xef\x4c\x65\x0b\x64\x28\xa3\x84\x9e\x67\xc6\xce\xf3\xbb\x9c\x76\x8d\xe7\xc8\x0b\x7f\x17\x19\x50\x66\x3e\x47\x0b\x83\xb9\x59\xdd\xce\x33\xa9\xf3\x4b\x85\x6b\xb4\xf9\xad\xd8\xae\x11\x4f\xe7\x26\x5b\xbf\xca\x03\xd0\xa0\x9f\xf6\xfb\x79\x0e\xa5\x41\x0b\xd2\x81\xd0\x20\xb5\x47\x3b\x13\x05\xc2\xcc\x58\x18\x94\x46\xea\xf9\x00\x88\x34\x58\xfc\x54\xa1\xf3\x0e\x56\xc6\x39\x39\x55\x5b\xd8\x48\xbf\x80\x8d\x15\xab\x95\xd4\xf3\xbe\xdf\xae\x30\x92\x6a\x88\xdc\xf7\x7b\x57\x26\x29\xe0\x84\x28\x64\x97\xac\x90\x21\xd8\xf8\xfc\x53\xa0\x98\x42\x52\x3f\xbb\x95\xd1\x0e\x87\xc0\x2a\x48\xfb\x0f\xfd\x40\xd5\xac\xde\x88\x25\x5e\xfa\x3b\x70\xde\x56\x85\xbf\x7f\x60\xbe\xa7\xc2\x61\xa4\xf1\xbd\xd0\xa5\x42\x0b\x2b\xb4\x33\x63\x97\x0e\xfc\x02\x79\xbd\xc3\x7b\xa0\x46\xaf\xaf\x88\xcf\x1d\xb1\x59\xa5\x0b\x48\xca\x66\x29\x85\xdf\xc1\x36\x9d\xda\xa2\xaf\xac\x86\xa8\x96\xec\xca\x24\x36\xbb\x0c\xba\x4a\xd2\x21\x14\x43\x08\xc7\xcb\x73\xb0\xe8\xed\xb6\xe6\x9f\x1e\x24\x3a\x38\x1f\xbd\xef\x4a\x3d\xb0\xce\xb0\x2d\xde\x69\xab\x12\x76\x7f\x24\x7e\xde\xdc\x6e\xdf\x19\x25\x8b\x2d\xfc\xb4\xfb\x1d\xf7\x6b\xbd\x81\x12\x67\x52\xa3\x03\x11\x28\xc3\x8a\x5f\x67\x61\xb3\x36\x60\x47\xa5\x79\x0e\xdf\x8a\xe2\xd6\xcc\x66\x0e\xc2\x41\x83\xbc\x75\xb5\x9c\xa2\x05\xa1\x4b\xf0\x72\x29\xf5\x1c\xcc\x2c\x12\x16\xde\xe3\x72\xe5\x5d\xd6\xef\xd5\xa8\x49\x0a\x1f\x3e\x92\x97\x64\x57\x95\x15\x5e\x1a\xcd\x94\x79\x57\xb0\x58\xa0\x5c\x63\xa0\xdb\x16\xc4\x10\x84\x83\x0d\x2a\x45\xdf\xb4\x68\xd1\x55\xca\x83\x99\x31\x76\xed\x89\x51\x69\xcf\x1d\xfc\x7a\x65\x7e\x85\x25\xfa\x85\x29\xb3\x7e\x8f\xa9\x27\x1d\x3d\x0e\xe1\x11\x35\x4e\x8d\x51\x51\x66\x13\xa9\xe7\x0a\x9f\x92\x9c\x5f\x08\xdf\x68\x4f\xd4\xdc\x82\xd1\x05\x06\x69\x1e\x92\xe8\xd8\xf2\x11\x81\x0a\x0f\x5b\x53\x81\x5b\x98\x4a\x95\xcd\x36\xd8\xd0\x3e\x73\x58\x18\x5d\x82\x98\x79\x72\x3a\x0f\x33\x21\x95\xcb\xa2\x31\x1f\xec\x97\xc2\xe3\x92\x6f\x99\xec\xde\xca\xfd\x19\x9c\x00\xbf\x99\xf0\x6e\x0f\x6d\x2b\x82\x8d\x54\x2a\x72\xa6\x8d\x3e\x7d\xf7\x76\x72\x33\x0c\xbf\xbe\xb9\xb9\xfc\x7e\x17\x32\xf8\x30\xe7\xef\xdf\x67\x84\x7a\xf3\xf6\xea\xed\x18\x7e\xf0\x64\xad\x0e\xb4\xf1\x50\x54\xd6\xa2\xf6\x6a\x5b\x5b\x8b\xde\x06\x25\xd4\xe2\xc0\x12\xa6\xdb\x47\x94\xfb\xc4\x81\x83\xb6\x2d\x7e\x82\x3d\x8d\x5b\x74\xab\x63\x6a\x6f\xab\x9e\x64\x22\x67\xfc\xf6\xd9\x05\x68\xa9\xe0\x9f\xff\xa4\x13\x65\x3f\xb2\x31\xc1\xc5\x05\x0c\xe8\xc0\x83\x63\xef\xe9\xf8\xb4\xd0\xef\xf5\x68\xaf\x6c\xe2\x85\xaf\xdc\xa5\x29\x11\xfe\x03\xce\x47\x23\x22\x5e\x4b\x7c\x26\x94\xc3\x7e\xef\xa1\x51\x81\xb7\x15\x46\x31\x5f\xdf\xad\x8c\x46\xed\xa5\x50\x47\xad\x4f\x03\xee\x20\x3a\x4e\x1c\xac\xee\x11\xfc\xa7\x4d\x6f\x26\xd7\x14\x25\xe3\x5b\x8e\xf2\xad\x5d\x14\x45\x83\xc2\xa2\x70\xe4\xe1\x1b\x21\x3d\xdb\x87\xe3\x88\x8c\x7e\x83\xa8\x1b\xc5\x8f\xe1\x6c\x34\x1a\xc2\x4b\xfa\xf8\x2b\x7d\xfc\x8d\x3e\x28\x40\x9c\xbd\x1a\x8d\x60\x29\x95\x92\xc1\x8a\x1d\xbc\xc8\x4f\xa1\x5a\x81\x37\x70\xfe\x27\xf8\x4d\x7a\x8f\xb6\x56\xed\xf1\x53\x7c\x81\x41\xc3\xf8\x02\x96\xe2\x16\x93\xbd\xe5\x21\x9c\xa7\xfd\x9e\xc6\x3b\x86\x38\x1b\x8d\x6a\x23\xff\x71\xc7\x51\xbf\x67\x75\x49\xcb\x94\xec\xb3\x37\xb8\x49\xea\x1f\x13\xce\xc7\x09\x23\xbc\x31\x9b\x24\xcd\x7e\xd6\xf2\xee\x8d\xd0\x26\x49\xd3\xb4\xdf\x43\xc2\x1a\x65\xa3\x73\xc8\x73\x3e\xd6\x39\xe5\xa5\x02\xb5\x8f\xe7\xea\xf7\x28\xbb\xca\x48\x7c\xce\x71\xbd\xb6\x88\x0f\xf2\x23\x5c\x00\xb3\xf6\x02\x3a\x4c\x27\x49\x62\x75\x99\x7d\xa7\x8c\xf0\xaf\xfe\x9a\xa4\x27\x2f\xd3\xd3\xb3\xf4\x04\x4f\x66\xf1\x0d\x21\xd1\xfe\xe1\x60\x27\x17\xf0\xb2\x6d\x55\x16\xfd\xff\x59\xdf\x7d\x4c\xc1\xff\xff\x1d\xf8\x8d\x39\x9e\x35\x82\x93\x52\x82\xd4\x54\x9e\x05\xe1\x91\x43\x35\xb9\x23\x66\xe1\x2e\x81\xa7\x1d\x97\xc2\xc1\x72\xe5\xb7\xe0\x94\x2c\xb0\x16\x6e\x87\xc2\xbf\x99\x05\xba\x61\x5f\xa8\x8d\xd8\xb6\xe2\x05\x9d\xff\x91\xdd\xfe\xd5\x84\xdb\xe2\x21\x88\xb5\xae\x01\x59\x40\xb1\x84\xea\x8a\xe1\x17\xe9\x17\x6d\x19\x35\xd2\x00\x8d\x1b\x88\x15\x72\x30\x63\xb3\x46\x6b\x65\x19\xeb\x8a\xd0\x20\x80\x99\xfe\x86\x85\x7f\xee\x9a\x62\xac\x29\x83\xf8\x44\x7b\xe4\x93\xc2\xdf\xd5\x44\xeb\x92\x6e\x08\x8f\x94\x5c\xe9\x3e\x64\xbb\x36\x8c\x2b\x44\xff\xbf\x85\xaa\x90\x28\x0f\x3b\xe7\xbc\x7f\xe8\x50\xe6\x8a\xb1\x2e\x55\x4f\x9a\x5a\xf0\x8f\x28\x56\xeb\x2d\x86\x60\x6e\x39\x2c\xed\xaa\xd5\x2c\x30\xd7\xe5\x2b\xcd\x92\xf6\x31\xd9\xd1\x9e\x99\xdb\xda\x2b\x1a\x59\x5c\x40\x99\xb5\x9e\xd9\x49\x9a\xcc\x42\xfb\xec\xd6\xb2\x9d\x61\xf6\x7b\x6b\x61\x8f\xf9\x78\x58\x68\xfc\xbc\xcf\x35\xdf\x44\xac\xb1\x53\x18\x4d\x4d\x49\x39\x0a\x0a\xaa\xff\x37\x08\x0b\x06\x30\x61\xb3\x0c\xde\xfa\x05\xda\x8d\x0c\x6b\x1c\x05\x19\x40\x28\x8b\xa2\x24\xf3\x11\x25\xd3\xe5\x16\xa2\x9a\xcd\xd0\x82\xd1\x4d\x74\x2b\x3b\x5b\x31\x3a\xd5\x5d\x19\x4c\x10\x19\x8d\x18\x1e\xe7\xb9\xf3\x74\x9c\x35\xda\x99\x32\x1b\xee\xeb\x18\x43\x1a\xed\xf2\x97\x7f\x19\x7d\x35\xfa\xdb\x57\xaf\x72\xda\x4b\xea\xf9\x29\x71\x7c\x6a\x66\xa7\x84\x7b\x1a\x69\x9f\x52\xe2\x35\x95\x3f\x5d\x9a\x52\xce\x28\x36\x34\x2b\xce\x0b\x1f\x65\x31\xad\x66\xf0\xe1\x23\xf5\xb5\xac\x03\x9b\x7d\x4b\x87\x8f\xf1\x8e\xb4\xd1\x15\x58\xaf\x37\xad\x66\x21\x52\x5e\x40\xe8\x6d\xb3\x9f\x50\x94\xdf\x28\x95\x04\x5c\xca\x1f\xdd\xa8\x49\x54\x6a\xa3\xd5\x52\x31\x76\xbf\x47\x9a\x7c\xe8\x87\x4c\x56\xd7\xbd\x94\xf6\xbe\xe6\xe8\xf7\x75\xfd\xee\xc5\x0b\xc6\x3f\xca\x5a\xcf\x96\x96\x70\x22\x1f\x6f\xcc\xea\x52\x19\x87\x36\xe1\x36\x9d\x32\xed\xb7\x2c\xfe\x64\x5a\xcd\x38\xaf\xf5\x22\x8d\x0b\xb0\x65\x64\x81\xa3\x73\x7d\xa0\x32\x2b\xa9\xd5\x0a\xdd\x55\xd8\x34\x72\x76\x71\x01\x0a\x75\x52\x9b\x5e\x4a\x21\xff\x59\xdb\xf8\x62\xa6\x09\x99\x85\xe9\xa5\x81\xc7\xa9\x45\x71\x1b\xf7\xca\x73\x60\x0e\xeb\xc6\x83\x6d\x32\x98\x1b\x1b\x06\x19\xc8\x5c\x48\x0d\x46\x53\x95\x34\xdb\xc1\xc8\x90\x2c\xb5\x54\x35\x5f\x6e\xb5\x27\x5f\xb7\xe2\xc3\x65\xbc\x03\xf9\x00\x6f\x19\x4a\x6f\x85\xb8\x6a\x98\xff\x10\x0f\xf5\x31\xed\xa6\xf7\xc8\x77\x8c\xd4\x85\xb4\x45\x25\xfd\xb7\xc4\x3e\x5a\xee\x19\xe5\x72\xa5\x70\x89\xda\xc7\xf0\x17\x20\x60\x1a\x40\x60\x45\x4d\x9a\xd5\x9c\xe7\x27\xe8\xa1\xc4\x69\x35\x27\xbf\x21\x85\xd2\xb7\x59\xa1\x15\x1e\x3b\xc8\x52\x83\x80\x25\xa5\xc5\xcd\x02\x2d\x52\x1b\xc2\x3e\xc1\x12\x50\x66\xde\x62\x05\xd8\x6c\x43\xf9\xc7\x30\x24\x91\xa9\x32\xc5\x2d\x17\x0d\x4d\xc1\x31\xb3\x66\x09\x73\x43\xc9\xd0\x2f\xac\xa9\xe6\x8b\x98\x0a\x8f\x1c\xe9\xa9\x36\x38\xf0\x1f\xfe\xb8\x97\xeb\x45\x02\x6f\xc4\x12\x09\x53\xea\x79\x33\x2f\xe1\xbf\xf0\x3b\xfb\x2f\x1e\x95\xbc\xe6\x07\x92\x26\xb9\x50\x44\x9d\x4c\xae\xdf\xea\x02\xc1\x6d\x75\x91\xd1\x2f\x96\xf5\xf7\x61\x8e\x33\x99\x5c\x5f\xaf\x29\xa3\x48\x07\xb8\xa4\x4a\x8f\x4b\x9f\xdd\xc0\x07\xd6\x52\x80\x43\xbb\x46\x7b\xea\x08\x30\x8c\x77\x32\x2e\xa8\xd0\x15\x56\x4e\x43\x1d\x4d\x12\x66\x69\x51\x81\x20\xea\xcd\xa3\x18\xf6\x77\xdb\xc9\xe0\x86\x96\x9f\xf8\x0b\x67\x86\x5f\x7f\x73\x46\x8f\x07\x44\x6c\xf0\x6b\xbf\xc7\xe2\xf8\x62\x2c\x2d\x96\x8c\x15\x13\xcb\xa5\xa9\xb4\x3f\x86\x25\xc3\xeb\x88\x65\x5b\xd0\x84\x7d\x4d\xd1\xe8\x51\xdc\x7d\x6c\x6c\xa0\x1b\xdc\x77\xa1\xa0\x16\xf3\x43\xd6\x8f\xe0\xee\xa0\x89\xc0\x0f\xee\xb2\x63\x49\x6f\x57\xa8\xdb\x04\xb8\x0e\x69\x08\xc8\x23\xd0\x2c\x00\xa3\x94\xd4\x73\x66\xeb\x3b\x21\x55\x65\xf1\x29\x01\x1c\x42\x1f\x12\x51\x8a\x7c\xbc\x4d\xec\x29\x22\x1d\xe8\xc7\x88\x4d\xaa\xa2\x40\xe7\xbe\x90\x58\x84\xde\x27\x36\x59\x18\xeb\xa3\x14\xb0\xfc\xdc\xf1\xba\xd0\x07\xb4\x5a\x0c\x7d\x5e\x54\x8f\x30\x74\xb3\xa0\xcc\xf9\xce\x18\xf5\x13\x52\xf1\x46\x4c\x3d\x4e\xe4\x10\xfa\x80\x9e\x5c\xa2\xa9\xfc\x17\x32\x15\xa1\x89\xc8\x65\xe8\x7e\x2e\x8d\x8e\x7d\xd0\xf5\x1d\x16\x15\x65\xf9\x60\xdc\x5d\x22\xc5\xd3\xd0\x44\xf0\xb5\xf0\xa8\x8b\xed\x8d\xf1\x42\xfd\x88\x42\x3f\x6d\xdc\xaa\x05\xfd\x8f\x25\x0a\x32\xcc\xba\x46\x54\x66\xce\xf1\x21\x51\xc7\xe2\xda\x10\x0e\x02\x09\x27\x3c\x95\xfd\xa0\x67\xe6\x2a\xc1\x8c\xc2\xc2\x10\x96\x62\xf5\x21\x04\x80\x8f\xcd\x0c\xf0\xfe\x81\x52\x56\xd7\xa7\xc7\xc7\xbc\x18\xb3\x76\x94\x18\x12\x52\xcb\x95\x8f\xa2\x10\xd2\x2e\x38\xec\x50\x5a\x1e\x7c\x88\x17\x51\x76\x30\x8c\x77\xd4\x71\xc7\x5d\xbc\x63\xa1\x80\x91\x8f\xf9\xeb\x78\xff\x70\x87\x30\x47\x70\xbb\x6e\x3a\x3e\x8a\xdb\x81\x79\x94\x46\xed\x0c\x4f\xd1\x88\x30\x07\x34\xf6\x9c\x72\x7c\xec\x0c\x5d\x98\x43\x12\x9d\xed\x8f\x8b\xe1\xb1\xed\x8f\xb8\xe0\x78\x1f\xf7\x10\xe6\x90\x4c\xf4\xbc\xa7\x58\x88\x30\x8c\xfb\x39\x87\x1b\x03\x66\x9f\x71\x61\xa6\xa3\xf6\xbc\xf2\xd0\x06\x31\xdb\xf7\xdc\x61\xbf\xf7\x90\xf6\x3b\x2d\xdb\x61\x01\x93\x82\xd4\xd2\x27\x69\x1c\xab\xbf\x43\x2b\x4d\x29\x0b\x9e\xb2\x29\x33\x0f\x73\x77\x2d\x54\xb7\x86\xa2\x62\x4c\x38\x27\x1d\xd7\x5f\x0e\xbd\xe7\x52\xa6\x55\x6a\xf9\x85\x45\xb7\x30\xaa\x74\x5c\x6e\x55\xba\x44\xeb\xbc\xd0\x25\x8f\x18\x56\x2b\x25\x8b\xd0\xf2\x4f\x71\x21\xd6\xd2\xd8\x8c\xd1\x7f\xd6\x33\x63\x7d\xa5\x85\x47\xb5\x1d\xb6\x2b\x97\xd2\xa0\xd3\xcf\x7d\x6c\x95\x60\x6e\x51\x78\xd8\x88\x2d\xb1\x82\x77\xab\x50\x14\x4b\xc7\x54\x4a\xe1\xc5\x10\x9c\xa1\xfe\xca\xa2\x33\xd6\x73\x15\x59\x59\xcd\x77\x02\x1a\xa4\x77\xe0\xaa\x15\x5f\xcb\x51\xff\x30\xb5\x46\x94\x85\x70\x07\xc7\x58\x52\xa5\x5b\x38\xae\x9b\xf8\x16\xe0\xb0\x78\x82\x64\x32\xb9\x4e\x03\xfb\x13\x0c\x97\x05\x6e\x9c\xe7\x4f\x5c\xbb\x49\xe7\x2a\x74\xf9\xf9\xab\xac\x29\x09\x63\x5d\x47\xdd\x03\x69\x2b\x28\xa4\x17\x71\x26\xde\xa2\x58\xd6\x57\x34\xe3\x8b\x5a\x2e\x3c\x0b\x6c\xaf\x71\xd5\x7e\x0c\x29\x9b\x78\x61\x3d\x2f\x2b\xe9\x3c\x6a\x0e\xc0\x96\x89\x69\xf4\xd9\x6b\x7e\x99\x0c\x7c\xb1\x1a\x0c\x61\x70\xf6\xf2\xab\x6c\x94\x8d\xb2\xb3\xf1\x68\xf0\x48\x3f\xb6\x12\x5a\x16\x09\xb5\x29\xdc\x28\xf4\x7b\xbd\xb9\xe1\xb3\x67\x13\x12\x51\xb2\xdb\xe6\x18\x3f\x69\x80\x6f\x1d\x95\xc4\xf7\x0b\xb2\xcd\xe1\x1a\xed\x16\xce\x46\x50\x4f\x66\xa7\x58\x88\x2a\x76\x3d\x44\x0d\xad\xbc\x6b\x54\x23\x2c\x92\x4a\x05\x9c\x8d\x4e\xeb\xc1\x29\x53\x8b\x7e\x0b\x1b\xa9\x4b\xb3\xc9\xe0\x66\x21\x1d\x28\xf4\xcf\x1d\x54\xa4\xfe\x25\x4f\x7b\x8f\x91\xf4\x06\xe6\xc8\xd7\x19\x56\x6d\x23\x35\x51\x14\x55\x68\x3e\xc8\xbf\xe2\x55\x93\x83\x44\x1b\x6e\x48\x84\x67\xf3\x03\xc9\x46\xba\x42\x3b\xc3\xc2\x37\x8c\x9b\xca\xc6\x1b\xa9\x48\xad\xb6\xe6\x08\xa8\xb6\xb0\x14\xbe\x58\x34\xac\x3c\x77\xb1\x4d\x41\x10\xca\x19\x16\xcb\x66\x81\xfa\x58\xdf\x14\x49\x3a\x1e\x10\x42\xb1\x10\x7a\x8e\x8e\xbb\x55\x65\xe6\xdf\x71\x92\xd4\xc5\x36\xcc\x99\xbb\x77\x29\x0c\x23\x9c\xe7\xec\x3b\x41\xd4\x61\x5c\xdd\x24\xdc\xbd\xfc\x7c\xff\xd0\x41\x78\x6d\xe6\x14\xea\xf6\x70\x98\x3c\xbd\xbf\x67\xa3\xe0\xf6\xfc\x1f\x50\xcf\x99\xe3\x6a\x71\x9b\xec\x5d\xeb\xa4\x70\x0f\xcd\xf8\x4b\x6a\x9e\x53\x4a\x0a\x02\x44\xa3\x57\x59\x45\xdb\x0c\xe2\x68\x63\x00\x2f\xa0\xb6\xaf\xec\x9b\xb2\xb4\x49\x9a\x4d\x78\x7b\xb6\x70\x6a\x66\x3f\x35\xe6\xcd\x36\xf9\x06\x37\xb1\x12\x48\x06\xff\x79\x7d\x33\x18\x42\x65\xd5\x90\xac\x39\x20\x1c\x31\x70\x16\x5f\xf6\xce\x4a\xed\x67\x49\xa8\x01\xa0\x30\x5a\x63\xe1\xb9\x33\x34\x8d\x1e\x26\x93\x6b\xea\x51\x50\x2c\xc7\xf0\x27\x37\x08\xcd\x7b\x20\x51\x18\xed\xa5\xae\x90\x9f\x58\x7c\xbd\x00\xd9\xb0\xd7\xba\x60\xcf\x26\xd5\x34\xf4\x60\xbf\x48\xbf\x48\x06\x83\x21\xfc\xb9\x35\x53\x0b\xc3\xb8\x4f\xff\xeb\x0c\x93\x06\x71\xbd\xbb\x2b\x08\x98\xd9\x75\x88\x7e\x71\x6b\x9e\xf2\xec\x17\x74\x61\x29\xb2\x3a\xbe\x00\xaa\x19\xb3\x9f\xf5\x52\x58\xb7\x10\x2a\x09\x63\xa3\x04\xd7\xd9\x95\xf0\x22\x49\xd3\x21\xfc\x19\xd3\xaf\x8f\x1c\xac\xcb\x56\xe4\x8b\x09\x67\xdc\x72\x3e\xbb\x80\x41\xdc\xfb\xd2\x2c\x97\x42\x97\x83\x47\x51\xc3\x77\x9e\xc3\x8d\x29\xc5\x96\x3d\xcc\x22\x14\x94\x4f\xc2\xf8\x3b\x9c\x0f\xc2\xb1\x29\x12\xc5\x31\x2d\xb9\x21\x7a\xd7\x4c\x16\xea\xf8\x4f\x80\x21\xf5\x44\xc2\x75\xb7\x0c\x3f\x68\xfe\x97\x86\x12\x85\x82\x8d\xb1\x8a\xfd\x99\xd1\x79\x3b\xca\x63\x8e\x2f\x0d\xeb\x3d\xc9\xe5\x57\xc2\x39\x90\x21\x63\x35\x33\xe2\xac\x21\xfe\x9a\x58\xd8\x18\x6b\xb7\x20\xa6\xd4\x32\x94\x71\x50\x21\x5d\x88\x10\x1b\xdc\xcd\x59\x98\x18\x2d\x17\x7b\x45\x26\x8f\x01\x1b\x9a\xde\x40\x29\x9d\x98\x2a\x8c\x33\x97\xa5\x29\xb1\x25\x63\x6e\xd0\x9f\x5d\x40\x99\xb5\x07\x18\x4f\x0b\x98\xc2\x04\x85\x94\x7a\xa0\xdb\x89\x33\x1f\x02\xcd\x8f\x3b\xd0\x83\x25\xb8\x00\xdc\xe9\x8a\xc4\xdd\x0e\x7d\xa1\x0a\x91\x33\x90\x14\xce\x51\xfa\x45\x88\x83\x0c\x9c\x9c\xa5\x0c\x3c\x93\xd6\xc5\x2c\x0d\x1b\x7c\xbe\x46\x70\x14\xe3\x82\xbe\x76\xb4\x4c\x0b\xf3\x65\xda\x5d\xa2\xc6\x3c\xec\xb5\x10\x75\x6c\x2d\x3b\x18\x7f\x49\xdb\x99\x8a\xab\x13\x12\x3a\x96\xa4\xda\x82\x47\xbc\xdc\xfd\x94\xe0\xcc\x12\xfd\x82\xb4\xb1\xc7\x41\x23\xe9\x7a\x80\xdd\x3b\x12\x66\x5b\x72\xd9\xdd\xfb\xd5\xb0\x75\xa7\x55\x66\xaa\x6e\xae\xd2\xcf\x78\x4e\xad\x9f\xa3\x1d\x08\x29\xfb\x78\x6f\xf2\x47\xf3\xf7\x00\xa8\x1c\x6b\xb2\x75\x9b\x39\xa9\xa6\xc9\x63\xf4\x53\xf8\x3b\x74\xf2\xda\x1f\xcd\xd0\x2e\xf2\xd1\xc7\x03\xe1\x3c\xa4\x9f\xad\xa2\x7f\xe7\x0d\x88\x9c\x41\x99\x05\xdf\xbb\xef\xcc\x94\xc7\x07\x43\xe5\xba\xf6\xbb\x32\x49\xc7\x1f\x87\x75\x35\x15\x22\x3f\x8b\xe5\x58\x96\x88\xe3\xda\x30\x43\x0f\x07\x8d\xf3\xe0\xf6\x1d\xe3\xdf\x2f\x9a\x4b\xc6\x5e\xf8\xbf\x16\x2c\xe3\x15\x06\x61\x0b\x1d\xb7\xe1\xe9\xac\xe4\x09\x66\xdb\x69\x62\xa5\xd3\xda\xcc\x58\x1e\xa8\x27\x83\xf3\xf7\xef\xb9\xa6\x0c\x5b\x77\xb8\x79\x68\x32\xf2\xc1\x4c\x99\xe3\xca\x17\x5e\xca\xf4\xc2\x30\xfe\x5f\x10\xd4\xd3\x33\xfc\x47\xae\x22\x9a\x5b\x88\xcf\xc9\xef\xdf\x16\xdf\x13\xd2\x7b\xe8\x77\xf9\x08\xa2\x83\xfc\x04\xb4\x81\x59\xec\xc5\xf9\xa0\xe1\xdf\x0d\xb6\xe8\xe1\x24\x4f\x8f\x4e\xeb\xff\x27\x00\x00\xff\xff\x36\x3b\x08\x45\xb0\x28\x00\x00")

func _hardcodedDoerGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedDoerGo,
		"../_hardcoded/doer.go",
	)
}

func _hardcodedDoerGo() (*asset, error) {
	bytes, err := _hardcodedDoerGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/doer.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x55, 0x91, 0x2a, 0x7, 0xd9, 0x75, 0xdb, 0xc0, 0xe6, 0x40, 0x3f, 0x51, 0x20, 0x17, 0x68, 0x10, 0x29, 0x4d, 0xa, 0x57, 0x5e, 0xcf, 0xc1, 0x53, 0x7a, 0xfb, 0xfc, 0x69, 0x4a, 0xbd, 0x69, 0x9}}
	return a, nil
}

var __hardcodedMiddlewareGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\xcd\x6e\xe3\x36\x10\x3e\x5b\x4f\x31\x65\x11\x84\x5a\x38\xf2\x1e\x8a\x1e\x02\xf8\x50\xa4\x9b\xe6\xb2\xc0\x62\x13\xb4\x05\x8a\x02\xcb\x50\x23\x89\xb0\x4c\xaa\xc3\x91\x55\x23\xf0\xbb\x17\x43\x49\x4e\x14\xa4\xe9\xa9\x07\xcb\xe4\xcc\x7c\xdf\xfc\xb3\x33\x76\x67\x6a\x84\x88\x74\x40\xca\x32\xb7\xef\x02\x31\xe8\x6c\xa5\xaa\x3d\xab\x6c\xa5\x3c\xf2\xa6\x61\xee\xe4\x4c\xbd\x67\xb7\xc7\x4d\x89\x8f\x7d\xad\xb2\x6c\xa5\xea\xd0\xed\xea\xc2\xf9\xcd\x4d\x8b\x07\xa4\xcd\xce\x1c\x0f\x88\x57\x75\x28\x0e\x3f\x6e\xda\x50\xd7\x48\x2a\xcb\xb3\x6c\xb3\x81\x2f\xc6\x3b\xfb\xd9\x95\x65\x8b\x83\x21\x84\x36\xd4\x11\x8c\x3f\x42\x27\x8a\x58\xc0\x6d\x20\xf0\x61\x58\xc3\x80\x97\x84\x60\x83\x67\xe7\x7b\x04\x6e\x28\x0c\xce\xd7\xc0\x0d\x8e\xc6\xd0\x77\xc2\x28\xf7\xc8\xc6\xee\x20\x06\xe0\xc6\x45\xd8\x9b\x23\x58\x32\xb1\x19\x6d\x29\x58\x8c\xb1\xc8\xaa\xde\xdb\xd7\xfe\x75\x03\x92\x56\x71\x67\x7c\xd9\x22\xe5\x8b\x1b\x3c\x65\x2b\x42\xee\xc9\x2f\xc4\xb7\xbd\xb7\x5a\xc8\xf4\x30\xca\xbf\x62\xec\x82\x8f\xf8\x1b\x39\x46\x5a\x03\xc1\x87\x49\xfe\x57\x8f\x91\x73\xe1\x59\x95\x58\x21\x41\x82\x8d\x82\x55\x4a\xe2\x13\x11\x5c\x6f\x81\xd0\x86\x03\x92\xce\x45\xe1\x2a\x38\xeb\xb6\x5b\xf0\xae\x1d\x01\x53\x30\x72\x3c\xc9\xe7\x60\x08\x90\xd2\x2f\x50\x26\x92\x38\x38\xb6\x0d\xbc\x64\x9e\xcf\x85\xe6\x63\x87\x93\x6b\x6b\xa2\x14\x8d\x9c\xaf\xaf\x13\xb3\xd0\x6c\xa1\xda\x73\xf1\x49\xc8\x2a\x3d\xc3\xf2\xb3\x79\xf2\xf2\xd2\x7a\x36\x11\x51\x89\x95\xe9\x5b\xfe\x17\x32\xd5\xfb\x9d\x0f\x83\x9f\xfa\x76\xf1\xfd\x01\x42\x05\x12\x0f\x5c\x3c\xa8\xf5\x99\xe9\xf9\x94\x8f\x49\xca\x77\x9c\x9f\xe2\x96\xc2\xfe\x26\x78\xc6\xbf\x59\x53\x31\x9f\xf2\x7c\xf4\xf1\xb3\x56\x09\xaa\xd6\x29\x82\x09\xf3\xf9\x49\x21\x91\xba\x96\xd8\xd7\xa0\xd2\x94\x30\x19\x8b\xea\x7a\xca\x5e\xa7\x21\x2e\xee\x45\xa3\xf3\xfc\x94\x9f\x1b\xb3\xa8\xc0\x29\x35\xa6\x29\xee\x65\x41\xee\x1e\x1e\xbe\xe8\x61\x0d\xa2\x39\xe5\xd9\x29\xcd\x75\x64\xc3\x7d\x5c\x4e\x02\x0c\x64\xba\x08\x06\x68\x12\xc3\x90\xe4\x59\xca\xfc\x4d\x44\x64\xea\x2d\x4b\x93\xde\x98\xac\x6c\x35\x62\xc0\x79\x16\xb7\x69\xa0\x75\x84\x0f\x6f\x51\xe5\x90\xfe\xef\xd0\x94\x48\xda\x86\x12\x05\x96\xfa\x1f\x8b\x89\x67\x0b\x22\x17\xc1\x12\x5b\xbc\x86\xce\x59\xfe\x8a\x14\x5d\xf0\x5f\x8d\xaf\x11\x4a\xb4\xae\xc4\x08\x43\x83\xdc\x20\x01\x07\x30\xd6\x62\xc7\x60\xe0\x30\x1a\x16\x63\xaa\x0b\x58\x5a\x81\x49\x3f\x75\x21\x87\xc7\x10\xda\xe4\xe1\xa6\x75\xe8\x79\x02\xdc\x34\x68\x77\x2f\x1e\x0b\x2b\xf7\x98\xb6\xda\x26\xbb\x67\x3f\xa9\x16\xef\x81\x5f\x6d\xfa\x1a\xc8\xd7\x8b\xc0\xfe\xc7\xdd\x9f\xb3\x95\x45\x2f\xc6\xb2\x16\xbf\x20\x6b\xf5\xfb\xd5\x18\xf2\xd5\x14\x88\x92\x31\xfb\xaf\x81\xff\xa9\x2c\xe7\x9b\x1a\xcb\x70\x35\x39\x50\xeb\xb9\x20\xc2\xe3\x2a\xf8\x8e\x7c\x3d\xd7\x7a\x5a\xfd\x61\xd1\xdc\x1f\x3e\x7e\xcc\x5f\x48\xf5\x1f\x7f\x3e\x1e\x19\xb5\xec\xee\x7d\x47\xce\x73\xa5\xbf\x3d\xa9\x3d\xc6\x68\x6a\xd9\x1a\xb5\xac\x3b\x5c\x5e\xc4\x4b\xf0\x81\xa7\xce\x63\xb9\x86\xae\x45\x79\x2e\xfa\xae\x26\x53\xa2\x3a\x7d\x7b\x0e\x2a\x4f\xbe\xce\xaf\xd8\xe9\x9d\x9d\xfa\x27\x00\x00\xff\xff\x64\xba\x96\x25\x93\x06\x00\x00")

func _hardcodedMiddlewareGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedMiddlewareGo,
		"../_hardcoded/middleware.go",
	)
}

func _hardcodedMiddlewareGo() (*asset, error) {
	bytes, err := _hardcodedMiddlewareGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/middleware.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x17, 0x73, 0xff, 0x36, 0x5d, 0xfe, 0x40, 0x7c, 0x33, 0x99, 0xc8, 0x19, 0x37, 0x47, 0x59, 0x51, 0x96, 0xb, 0x22, 0x81, 0x1c, 0x7d, 0xe4, 0x3, 0x2f, 0x2d, 0x3c, 0x2d, 0xc5, 0x23, 0x70, 0xb8}}
	return a, nil
}

var __hardcodedTracingGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x59\x6f\x6f\xdb\x38\xf2\x7e\x2d\x7d\x8a\x59\x03\xdd\x4a\x85\x22\x27\xdb\x36\xbf\x45\x16\x79\x91\x26\x69\x6b\x20\xc9\x06\x4d\x7e\xb7\x38\x1c\x0e\x05\x2d\x8d\x25\x22\x12\xa9\x23\x29\xff\xb9\x20\xdf\xfd\x30\x43\x49\xb6\x63\x27\xd7\x5e\x5e\xa8\x16\xff\x0c\x9f\x19\x0e\x9f\x67\xa8\x36\x22\x7b\x10\x05\x82\x33\x22\x93\xaa\x08\x43\x59\x37\xda\x38\x88\xc2\x60\x94\x69\xe5\x70\xe9\x46\x61\x30\x42\x95\xe9\x5c\xaa\x62\x3c\x95\x4a\x98\xd5\x56\x53\x89\x4b\x7a\x9f\xd5\x3c\x52\xa1\x1b\x97\xce\x35\xf4\x5b\x5b\x7a\x5a\x67\x32\xad\xe6\xf4\xd3\xc9\x1a\x47\x61\x18\x8c\x0a\x9d\xea\x06\x95\xc3\x0a\x6b\x74\x66\x95\x4a\x3d\xa6\xe5\x8c\x9c\x8e\xa5\xb2\xce\xb4\x35\x2a\x27\x9c\xd4\x6a\x5c\x48\x57\xb6\xd3\x34\xd3\xf5\xb8\xd0\x46\x56\x95\x18\xd7\xed\x72\xac\x1d\x56\x75\xcb\x4b\xff\x8c\xb5\x1e\x1f\xcf\xef\x81\xee\x33\x40\xfd\xaf\xf5\x8d\x71\x49\x91\x42\x63\xc7\xda\x55\xaf\x9a\x79\x36\x94\x1f\x85\x69\xb2\x57\xe7\x34\x46\x37\xa2\x60\xd0\xa3\x30\xb0\xf9\x03\x6d\x11\xc2\xcb\x13\x6c\xfe\x30\xe6\x31\xaf\x9a\x1d\x46\xf9\xa7\x43\xeb\x5e\x1d\xbf\x61\xb1\x79\x28\x52\xa9\xc6\xe7\x15\xce\xd1\x8c\x1f\xc4\x6a\x8e\x78\x50\xe8\x74\x7e\x3c\xae\x74\x51\xa0\x19\x85\x71\x18\x8e\xc7\xd0\x43\xd7\x06\x9c\x86\xd6\x62\x1a\xce\x85\xd9\x6c\xde\x70\x2e\xbd\xc7\xa5\xbb\x16\xcd\xed\xba\xf7\x74\xbb\x9f\x10\x9c\xfb\x5c\x7c\x7c\x82\xf1\x98\x93\x15\x1b\x61\x50\x39\x28\x51\xe4\x68\x78\xd9\x1c\x67\xa2\xad\xdc\xb9\xae\x2a\xcc\x9c\x36\xb7\x94\xc8\x0b\x61\x21\x2b\x85\x2a\x30\x87\x99\xd1\x35\x7c\xfc\xf8\xfb\xf1\x21\x48\x05\x37\x7a\x8e\xf5\x14\x0d\x08\x95\x83\x2b\x11\xbe\x68\xa8\xe4\xd4\x08\xb3\x22\x6b\xa5\xb0\xea\xad\x83\x29\xa2\x82\xb6\xc9\x85\xc3\x1c\x16\x25\x2a\x90\x0e\xa4\x5d\x37\x21\x64\x42\x91\x93\x40\xdb\x9a\x5e\xec\x01\xc1\xde\xef\x45\xd7\x4a\xe5\x8e\x8e\xe1\x14\x3e\xbc\x3f\xfa\x3f\x76\xe2\x0e\x5d\xdb\x7c\xa9\xf4\x54\x54\xec\xf8\xad\xd1\x73\x99\xa3\x39\x53\xf9\x65\x97\x45\x60\xd1\x11\x00\x10\x0a\xfa\xcc\xa2\x40\xfb\xdf\x09\x59\x11\x16\x16\x58\x55\xf4\x2f\x79\xb6\xb5\xb5\x50\xb0\x75\x1f\x45\x8a\x34\xdb\x87\x19\xed\x16\x37\x15\xa8\xd0\xd0\x46\xd8\x61\xfb\xc6\x63\xb8\x2f\x71\xbd\x1a\x85\x6c\x98\x29\x0c\x82\x41\xd7\x1a\x85\x39\x05\x56\x9b\xc1\x5e\x49\xd1\xa9\x2a\x8f\x2f\xc7\x19\x81\x2f\x5b\x97\xeb\x85\x4a\xc3\x59\xab\xb2\x1f\xf1\x37\xca\xdc\x12\x3a\x32\x4a\xbb\x44\x88\x21\xea\x8f\x44\x7a\xd7\x08\xd5\x8f\x4d\xe0\xdd\xd0\xce\xf6\x4c\x6f\x30\x01\x34\x46\x9b\x18\x1e\xc3\x60\x3c\x86\xa3\x94\xc2\x48\x51\xec\x9d\xe2\xe6\xdf\x86\x66\xb6\x61\x06\x2f\xb9\xf7\x7d\x0a\xc2\x5a\x59\xa8\xad\x18\x6e\x0c\xe2\x51\x93\x19\x2c\xf0\x2d\x05\xa5\x55\x4a\xaa\x02\x2a\x4d\x41\x58\x25\x14\x0f\x05\x14\x28\xd0\xb3\x19\x58\x51\x37\x95\x54\x45\x0a\x7f\xba\x12\xcd\x42\x5a\xf4\x6d\xe8\x11\xbe\x01\x6d\x60\x51\x0a\x47\xe7\x0d\xee\xbf\x9d\x9d\x4f\x6e\xbe\x7c\xbf\x3b\xbb\xbe\xbd\xa2\x1f\xb7\xdf\xfe\xfc\x74\xf6\x69\x72\x35\xb9\xff\x3b\xd8\x06\x33\x39\x93\x68\xd3\x30\xe8\xcd\xde\x1a\x3d\x15\x53\x59\x49\xb7\x82\x93\x53\x38\x4c\x0f\x8f\xc2\x40\xda\x2b\x02\x43\x0d\xda\xa6\x5f\xd0\xa1\x9a\x47\xa3\xef\x93\xbb\xef\x57\x7f\x9e\x9f\x5d\x8d\x62\x38\x3d\x85\x91\x33\x2d\x9d\x79\x39\x83\x7e\xfc\x63\x18\xec\x35\x7c\x0a\x47\xe9\x61\x18\x3c\x01\x56\x16\x41\xce\x60\xfe\xcc\xf4\x6b\xb0\x47\xf1\x1f\x30\x87\x5f\x4e\x61\x34\x7a\x69\x81\xcf\x46\xd7\x97\x6a\xce\x9b\x47\x96\x3b\x31\x49\x6f\x85\xb1\xf8\xb9\xd2\xc2\x45\xf3\x04\x8e\x3f\xc4\x61\x40\x70\x69\xd4\x2f\xa7\xa0\xa4\x47\x1c\xf8\xb4\xa4\xf7\xc4\x3f\x66\xb5\x4b\x2f\x29\x0f\x66\xd1\x28\xd3\x6d\x95\x83\xd2\x0e\x1a\xb2\x06\x6f\xdf\xd8\xb7\x94\xa7\x33\x32\x3b\x4a\x60\x4e\x46\x9f\x5e\x74\xfc\x65\xb4\x61\xf0\x14\x86\x81\xc8\x73\x86\x4c\x4b\xde\x35\x46\x2a\x37\x8b\x46\x6f\xec\xc9\x9b\x7c\x94\xec\xe7\x8a\xaf\xda\xba\x64\x2f\x51\xc4\x3e\xb3\x2e\xe7\x68\x56\x70\xf4\x11\x2c\x66\x5a\xe5\x74\xc8\xdf\x56\x94\x85\x2b\xc2\x9d\x69\xa5\x30\x73\xf4\x73\xfb\xc0\x67\xbd\x29\x10\x8e\xed\xd0\xb9\xec\x96\xe1\xe4\x24\x9e\x05\x3d\xf3\x89\x5a\x6a\xeb\x4e\x98\x8f\x68\xe8\x5f\x94\xb2\x7d\x22\x4b\x45\xa9\x9e\xb7\x19\x4f\x70\xa5\xb4\x44\x85\x02\xac\xcc\x31\x13\x26\x61\x5e\x58\x6c\xcc\x60\x13\x5d\xfa\x6f\x8c\xef\x5b\x7a\xbb\xba\xc1\x01\xed\xc1\x80\x36\x0d\x83\xdc\x48\xca\x7d\x4a\xa9\x4e\x33\xd3\x1b\x5c\x5c\x70\x6b\x14\x06\xc1\xd0\xfa\x97\x74\xe5\x37\xec\x22\x20\xb5\xba\x45\x23\x75\x1e\x1d\x7d\x7c\x47\x35\x47\x7a\xc7\xf1\x8a\x93\xe7\x53\x2e\x55\xde\x68\xa9\x5c\x44\x9b\xb5\xdb\x3d\x51\x16\xb3\xd6\x60\x44\x5d\x71\x18\xe0\xc0\x32\x5d\x3a\xf2\x36\xde\xe0\x62\xa0\xaa\x30\x08\x32\xb7\x24\x43\x1e\xba\x9f\xb7\x9b\x99\xaf\x26\x26\x13\x15\x64\x06\x85\xa3\xe8\xf4\xab\x9e\xc0\x9b\xf9\x88\x97\x8e\x7d\x86\xb9\x86\x30\x28\x5c\x6c\x33\x5d\xb4\x86\xb9\x27\x47\xe3\x30\x20\x61\x4f\xef\xd0\x3d\x9b\xe6\x9a\x38\x0c\xbc\x92\xa7\x94\xc9\x1d\xd5\x12\xfd\xc6\xe9\x44\xcd\xf4\x45\x34\xb2\x4e\x18\x02\x75\xe0\x99\x6f\x94\x40\x37\xe1\x9a\xbc\x1a\x51\x18\xd1\xda\xd1\x09\xf8\x3f\x7a\xa7\x60\x8c\x7a\x20\x07\x46\x38\x1c\x9d\xec\x03\x96\x84\xc1\x53\x1c\xf6\x91\x59\xfb\xe0\x1a\x0e\x51\xf8\xf4\xa3\xfa\xf8\x59\x9b\x7b\xb4\xac\xd2\x35\x0a\xc5\x07\x62\x8a\x24\x64\x2c\x4f\xad\x92\x0e\xa8\xee\x91\xaa\xf0\x62\xa9\x72\xa8\x25\xc5\xdc\xab\xa5\xa5\x25\x40\x4c\xf5\x1c\x59\xc5\x74\xeb\x28\xc1\xe9\x80\x6c\xce\x4d\x61\xe2\x3a\xdd\xb3\x24\xc5\x52\x1d\xd4\x58\x6b\x5f\x3d\x0c\x4a\x49\x06\x70\x29\x6a\xc9\x89\xde\x49\x2b\xe6\x60\x1b\xa1\xec\x8f\x6b\x60\xe7\x53\x14\x43\xf4\x6e\x28\xdc\xd2\x89\xba\xe6\x15\x7f\x4e\xfd\x06\x6c\x27\xa7\xb0\xb6\x75\x83\x8b\xe7\xe6\xa2\xf8\x47\x72\xec\x28\x3d\xfc\x2f\x39\xf5\xda\x96\x72\x00\x5e\x36\x0f\x2f\xa8\xfc\x3e\x4a\x66\xde\x3e\xfe\x10\xbf\x18\x04\x72\xbe\xc3\x32\x8c\xb8\xd9\x59\x3a\x0c\x98\xf7\x38\x61\xb6\x98\x72\x72\xb1\x2e\x8d\x52\x98\x6c\x16\x3a\x3d\x1c\x4a\xb5\x85\x36\x0f\x10\x09\x07\x15\x0a\xeb\x60\x21\x5d\xe9\xa9\xcf\x6b\x3b\x1d\xde\x9e\x83\x37\x2d\x42\xdd\x5a\x37\x24\x48\x57\x8a\x4d\x2e\x2c\xe5\xdc\x4c\x9b\xba\x5a\x81\x70\x60\x84\xca\x75\xed\x2b\x59\xb2\x80\xca\x49\x83\x94\x4d\x99\x4f\x50\xa9\xdc\xf1\x87\xd4\x2f\xf1\xb9\xcb\xbd\xa6\xc2\x64\xcb\x93\xe5\x81\x11\xab\xed\xd5\x73\x8d\x96\xb5\x30\xd7\x8c\x96\x4c\x0c\x41\x22\x2e\xbc\xf3\xe8\xd7\x65\xd7\x2d\x17\xe0\x9f\x84\xc5\x3c\xda\x0e\xf8\xe4\xe2\x1b\x49\x4a\xd7\xb5\x87\x82\x62\xa6\x5a\x5f\x54\x5a\x84\x5a\x2c\x65\xdd\xd6\x96\x2b\x49\xa7\xa1\x68\x85\xc9\x41\x14\x82\x2e\x6f\x60\x75\x8d\xae\xe4\xd3\xa3\xe9\xb9\x30\x5a\x15\x7c\x68\x2d\x2a\xba\x81\x82\x00\xe7\xf5\x2b\x17\x4e\x40\xab\x70\xd9\x60\xe6\x30\xaf\x56\x3b\x4e\x34\x42\x5d\xc9\x5a\x3a\xbb\x5d\x3e\xfa\x36\x2e\x19\xce\x1c\xdd\x1b\x5b\x87\xe7\xba\x55\x8e\x3b\x4e\xe0\xe8\xf0\x90\x10\x07\x97\x73\x54\x6e\xb3\x83\xfe\xfa\xce\x2b\xa9\x1e\x9e\xf7\xf5\x9d\x4f\xec\xf1\x36\x96\x95\xca\x36\x32\xdd\x4b\x8c\x27\xb9\xeb\x76\x79\x87\x66\x8e\xe6\x5a\xe6\x79\x85\x8b\x75\x85\x6d\xa1\x5e\x37\xb9\x52\x38\xb0\x25\x97\x31\x53\x04\xe1\x9c\xc8\x4a\xcc\x29\x84\x02\x36\xee\xca\x60\xd9\x18\x97\xf1\x13\xe7\xb7\xda\x2d\x78\x9f\x55\x61\x4f\x80\x49\xdd\x7a\x4a\xf2\x1a\x2e\xf2\xdc\xbf\xfb\xfb\x1f\x48\x35\xd3\x64\x96\x92\xc8\xe0\xbf\x5a\xb4\xee\xa0\xab\x39\xb3\x5e\x01\xc8\xfa\x37\x59\x94\x0e\x94\x5e\xd0\xbd\x48\xab\x6a\x05\xb6\x6d\xf8\x83\x02\x0d\xa2\xbd\xa2\x8c\x96\x8a\x0d\x51\x56\x0b\xe7\xbd\xb8\x10\x4e\xe4\x9a\xb5\x0e\x33\xd7\x13\xe3\x9e\x38\x44\xe4\x8b\xcc\xf0\x46\xd4\x48\xd5\xa0\x54\x45\x0c\x34\x38\xa2\xcb\x7c\xfa\x55\xa8\x9c\xce\x18\x6c\xbe\xd1\xb9\xd7\xae\xa2\x48\xb0\x66\xf3\x87\x83\x74\xbf\xcd\x64\xe8\xa7\x3d\x5a\x5f\x4a\x6d\xb4\xbe\xbe\xc6\x6b\x4e\xf3\x2b\xc3\xeb\x6b\xf7\x83\x3d\x86\x2d\xa0\x9f\x69\x3e\x1b\x31\x0b\x3f\xef\x1b\xda\x46\x2b\x8b\x7f\x19\xc9\x4c\x67\xe0\x5d\xd7\xce\x61\x8f\x7d\x61\x3b\x1e\xf7\x38\xe9\xa2\x0a\xb8\xa4\x7d\x22\x5d\x61\x01\x6b\x84\x4a\x79\x17\x9a\xd6\xf1\x7d\x55\x75\x7b\x97\xb9\xe5\xf3\x7d\x23\x6b\x76\x90\x02\x3e\x0d\x9b\xe2\x6f\xfa\x1b\x57\x44\x5e\x73\x91\x6d\x33\xae\xc4\x79\xe8\xd0\xf9\x07\xd8\x2c\xfd\x2a\x6c\x47\x00\x51\x87\x33\x20\x2c\x93\x8b\xc4\x5b\x9f\x5c\xf0\xcc\x8c\xa7\xd2\xa0\xf4\x8e\x77\x30\x8a\x13\x6a\x1d\xe6\x0e\xcd\x6c\x82\xae\xf6\x5d\x7a\x50\xed\x8f\x94\xab\x25\x2e\xbb\xdd\xf7\x97\x54\xa6\x3d\x4a\xae\x04\xac\x26\xcf\xc0\x95\x9a\xee\x53\xda\xe7\x57\xa6\x8d\xc1\xca\xd7\x53\x95\x2e\xac\xbf\xf4\xd3\x7a\x96\x09\xdb\xf2\x4a\x72\x06\x15\xaa\xa8\xc3\xca\x77\xa1\xf7\xbf\xc1\xaf\xbf\x72\xab\xf7\x84\x1b\x8f\x8e\xe1\x11\x68\x0b\xb6\xca\x6c\x9f\xcf\x27\xd4\x3b\x5d\x39\x84\xe8\xfd\x6f\x07\x59\x29\x0c\x81\x8d\x13\xf8\xbd\x6b\x3d\x3a\x5e\xb7\x76\x34\xcf\x64\xd6\x50\x0d\x91\x7b\x20\x41\x07\xe1\x93\x4d\xe0\x3b\xc5\xac\xc4\x65\x7a\x81\x99\xce\xb1\x0b\x4d\x8f\xd1\x0f\xdf\x53\xb5\x6d\x6e\x5c\x7a\x96\xe7\xfd\xdb\x88\x67\x7e\x97\xf9\x28\xf1\x73\x83\xed\x0b\x0a\xdd\x4e\xfc\x57\xbe\xf4\x93\x2c\x2e\x55\x2e\x85\x4a\xff\x9f\xe3\x1b\x0d\xa8\xfe\xf1\xfb\xc9\x3f\xe3\xb8\x5b\xdc\x07\xe6\x65\xa8\x5d\xe0\x7e\x1e\x29\x4d\xfc\xdf\x80\xf6\x90\x7a\x8c\x74\x8b\xf3\x8f\x32\x65\x46\xf9\x7a\x7f\x7f\x1b\x99\x45\x02\x2c\xc7\x4f\x31\x57\xd4\x9e\x7c\x7d\x45\xa0\x2c\xd3\x56\xcf\xba\x74\x78\xdc\xd0\xea\x3f\x8b\x10\x8f\x65\x95\x44\xe5\x7a\x4e\xb4\x3d\xc5\x3a\xf1\x80\xcc\x73\x62\x7b\xd6\xc2\x88\x26\x01\x4c\x8b\xd4\x1f\xf6\xee\x06\x38\xac\x97\x0c\x1f\xa3\x3a\x8b\x64\xaf\xfb\xf4\x01\x73\x51\xb5\xac\x8f\x4d\x4b\x97\xbe\xee\xa0\x83\x22\x26\xd4\xad\xe3\xa2\x60\xf7\x53\x8d\xb4\x3c\xbe\xff\xfc\x45\xd3\xba\x8f\x17\x5a\x11\x47\x03\x8a\xac\xec\x97\xe3\xd3\xd3\x7d\x0b\x86\x85\x56\x6f\x19\xc0\x14\x0b\xae\x9b\x9d\xac\xfc\x69\xa2\x7b\x9c\x92\x4e\x8a\x4a\xfe\x1b\x73\x88\x30\x2d\x12\xf2\x56\xaa\x4e\x6a\xbc\xa4\xb4\x4d\xdc\x11\xf9\x66\x4c\xa3\xa9\xb0\xb8\x8e\xb0\x27\x37\xdd\xaa\xfc\xde\xc8\xa6\xe1\xe2\xae\x11\x8a\xb8\xf8\xdc\x2d\xff\xc6\x3e\x4b\xe5\xd0\xcc\x44\x86\x8f\x4f\xf1\xee\x84\x8d\xb2\xce\x6c\x34\x3f\x6e\xad\x73\x02\x5b\xaf\xbb\x8b\x9c\xec\xb4\x70\x42\xb8\x55\x83\x5b\x66\x89\x76\xda\xcc\xd1\xa2\xdb\x8e\x00\xec\x42\x0b\x83\xd7\x7c\x19\xea\xdf\x88\x32\x6d\x63\x5a\x0c\x83\x91\x68\x87\xff\xa3\x77\x5b\x3a\xb1\x59\xd9\x0f\x3a\xe3\x3f\x6d\xa7\x5b\x61\x27\x1d\x72\xe9\x76\x14\xf8\xc2\xdb\x0d\x26\xbd\x7b\x56\x0a\x73\x51\xff\x65\xa7\xa8\x8f\xe3\x9d\x89\x2f\x08\xe5\xce\xb8\xbb\x2e\x1c\x9f\x99\x2b\xe9\x8e\xc1\xe2\x47\x15\x9e\xce\x3b\x46\xdf\xa3\x79\xbe\xc3\x4b\xca\x3c\x01\xfd\x40\x44\xb3\xc1\x1b\x29\xc7\x36\x32\x2e\x7d\x1e\xef\x38\x8d\xba\x2a\xa1\x53\x2f\xfd\xd0\x29\x53\x17\xac\xf9\x40\x0d\x7d\x0e\xa5\xd7\x1e\xcd\x78\x4c\x25\x3b\x82\xb0\x43\x44\xdf\xda\xa1\x86\xee\xcf\x1e\x7f\xe5\xf0\xf5\x5d\x9c\x6e\x6c\x5b\x5f\xcb\x5d\x7a\x69\x26\xc7\xcf\xa8\xcf\xcb\x60\x27\xd8\xbe\xc8\x5a\x8b\x11\x97\x47\x7c\x4e\x85\xe2\x6c\xea\x0f\x66\xf7\x9d\xbb\x3b\x4e\x7b\x6d\xee\xc9\x94\x8e\xaf\x7d\xb2\x4f\x2e\x86\x7a\xe9\x31\xfc\x71\xc9\x27\xc1\xdf\x96\xfa\x5d\x99\xef\x2f\x55\xcf\xc6\xed\xea\x79\xb2\x33\x66\xa7\x12\x20\x22\x0e\x7c\x89\xb1\x86\xd7\x8d\xdf\x44\xb9\xce\xb2\xb4\x0b\xc7\x26\xf0\x64\xeb\xbf\x10\xbe\x72\xf0\xce\x85\x31\x12\x4d\x64\xba\xf7\x78\xa3\x8e\xfb\x99\x9a\xe4\x29\xfc\x4f\x00\x00\x00\xff\xff\xe6\xe6\x42\x5b\x36\x1b\x00\x00")

func _hardcodedTracingGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedTracingGo,
		"../_hardcoded/tracing.go",
	)
}

func _hardcodedTracingGo() (*asset, error) {
	bytes, err := _hardcodedTracingGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/tracing.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf5, 0x4d, 0xd0, 0xa4, 0x31, 0x36, 0xe0, 0xe7, 0xb5, 0xe0, 0x7b, 0xc1, 0xf1, 0x1e, 0xba, 0xad, 0x67, 0x15, 0x12, 0x78, 0x74, 0x25, 0x5d, 0xc4, 0x16, 0x52, 0x52, 0xa1, 0xd, 0x89, 0xba, 0x58}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../_hardcoded/doer.go":       _hardcodedDoerGo,
	"../_hardcoded/middleware.go": _hardcodedMiddlewareGo,
	"../_hardcoded/tracing.go":    _hardcodedTracingGo,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"..": {nil, map[string]*bintree{
		"_hardcoded": {nil, map[string]*bintree{
			"doer.go":       {_hardcodedDoerGo, map[string]*bintree{}},
			"middleware.go": {_hardcodedMiddlewareGo, map[string]*bintree{}},
			"tracing.go":    {_hardcodedTracingGo, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
