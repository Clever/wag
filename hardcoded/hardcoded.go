// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../_hardcoded/doer.go (10.35kB)
// ../_hardcoded/middleware.go (1.685kB)
// ../_hardcoded/tracing.go (7.2kB)

package hardcoded

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __hardcodedDoerGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x5a\xff\x8f\xdb\x36\xb2\xff\xd9\xfe\x2b\x26\x06\xee\x22\x25\x5e\xd9\x9b\xbb\x6d\x0f\xee\xdb\x03\xda\xcd\xf6\xb5\x40\x9a\x04\xf5\xf6\x35\x40\x10\x5c\x69\x69\x6c\xb3\xa1\x48\x97\xa4\xd6\x6b\xec\xed\xff\xfe\x30\x43\x4a\x96\x6c\x79\x93\xbb\x16\x0f\xef\xf2\xc3\xda\x96\x66\x3e\x1c\x0e\xe7\x3b\xb3\x11\xf9\x47\xb1\x42\xc8\x95\x44\xed\x87\x43\x59\x6e\x8c\xf5\x90\x0c\x07\xa3\xc5\xce\xa3\x1b\x0d\x07\xa3\xdc\x68\x8f\x77\x9e\xbe\xa2\xce\x4d\x21\xf5\x6a\xf2\xab\x33\x9a\x1f\x58\x6b\x2c\x53\x49\x33\x91\xa6\xf2\x52\xd1\x0f\x65\x56\xf4\x51\x0a\xbf\x9e\x58\xa1\x0b\xfa\xa1\xd1\xc7\x8f\xc9\xda\xfb\x0d\x7d\x77\x3b\x9d\xd3\xa7\x97\x25\x8e\x86\xc3\xc1\x36\x57\x30\x5a\x49\xbf\xae\x16\x59\x6e\xca\xc9\x95\xc2\x5b\xb4\x93\xad\x58\x4d\x94\x59\xad\x68\xe1\xad\x58\x05\x59\xe9\x01\x5a\xe2\x6a\x73\x88\x25\xde\x4d\xd6\x3b\xe7\xad\xbc\x3b\x5b\x99\xfa\xeb\xa8\x4b\x55\x18\x6d\x6e\x85\x5e\xcb\x02\x27\x78\x8b\xda\x3b\x53\xd9\x1c\x47\xc3\x74\x38\x9c\x4c\xa0\x30\x68\x41\x3a\x10\x1a\xa4\xf6\x68\x97\x22\x47\x58\x1a\x0b\xa3\xc2\x48\xbd\x1a\x01\xc9\x0f\x16\x7f\xab\xd0\x79\x07\x1b\xe3\x9c\x5c\xa8\x1d\x6c\xa5\x5f\xc3\xd6\x8a\xcd\x46\xea\xd5\xd0\xef\x36\x18\xa1\x1a\x90\xfb\xe1\xe0\xa5\x49\x72\x78\x46\x08\xd9\x15\x6f\x64\x0c\x36\xfe\xfe\x31\x20\xa6\x90\xd4\xbf\xdd\xc6\x68\x87\x63\x60\x35\xa7\xc3\x87\x61\x40\x35\x9b\xd7\xa2\xc4\x2b\x7f\x07\xce\xdb\x2a\xf7\xf7\x0f\x2c\xf7\x42\x38\x8c\x18\xdf\x09\x5d\x28\xb4\xb0\x41\xbb\x34\xb6\x74\xe0\xd7\xc8\xef\x3b\xb2\x07\x34\x7a\xfc\x92\xe4\xdc\x83\x2d\x2b\x9d\x43\x52\x34\xaf\x52\xf8\x1d\x62\xd3\xae\x2d\xfa\xca\x6a\xc8\xb3\x97\x26\x09\x1b\x99\x4c\xc0\xa2\xb7\xbb\x5a\x52\xfa\x21\xd1\xc1\xc5\xf4\x5d\x57\xbf\x41\x48\xa6\x6d\x49\x49\xa0\x05\xec\xff\x91\xa2\x79\x19\xbb\x7b\x6b\x94\xcc\x77\xf0\xe3\xfe\x7b\x5c\xaf\xf5\x04\x0a\x5c\x4a\x8d\x0e\x44\x40\x86\x0d\x3f\xce\xc2\x62\x6d\xc2\xce\xe1\x4d\x26\xf0\x8d\xc8\x3f\x9a\xe5\xd2\x41\xd8\x52\xd0\xac\xae\xca\x05\x5a\x10\xba\x00\x2f\x4b\xa9\x57\x60\x96\x11\x58\x78\x8f\xe5\xc6\xbb\x6c\x38\xa8\x59\x93\x14\xde\x7f\x20\x9b\xcf\x5e\x56\x56\x78\x69\x34\x23\xf3\xaa\x60\x31\x47\x79\x8b\x01\xb7\xad\x88\x31\x08\x07\x5b\x54\x8a\x3e\xe9\xa5\x45\x57\x29\x0f\x66\xc9\xdc\xb5\x5f\xc5\xe3\x79\xea\xe0\x97\x97\xe6\x17\x28\xd1\xaf\x4d\x91\x0d\x07\x8c\x9e\x74\x4e\x6c\x0c\x27\x0e\x6c\x61\x8c\x8a\x3a\x9b\x4b\xbd\x52\xf8\x98\xe6\xfc\x5a\xf8\xe6\xf4\x44\x2d\x2d\x18\x9d\x63\xd0\xe6\x31\x44\xc7\x6a\x7b\x14\x2a\x3c\xec\x4c\x05\x6e\x6d\x2a\x55\x34\xcb\x60\x83\x7d\xee\x30\x37\xba\x00\xb1\xf4\xe4\x5e\x1e\x96\x42\x2a\x97\x45\xb3\x3d\x5a\x2f\x85\xd3\x9a\x6f\x19\xe7\xc1\x9b\xfb\x73\x78\x06\xfc\x64\xce\xab\x3d\xb4\xad\x08\xb6\x52\xa9\x28\x99\x36\xfa\xec\xed\x9b\xf9\xcd\x38\x7c\xfb\xfa\xe6\xea\xbb\x7d\x70\xe0\xcd\x5c\xbc\x7b\x97\x11\xeb\xcd\x9b\x97\x6f\x66\xf0\xbd\x27\x6b\x75\xa0\x8d\x87\xbc\xb2\x96\x82\xd9\xae\xb6\x16\xbd\x0b\x87\x50\xab\x03\x0b\x58\xec\x4e\x1c\xee\x23\x1b\x0e\xa7\x6d\xf1\x37\x38\x38\x71\x8b\x6e\xd3\x77\xec\xed\xa3\x27\x9d\xc8\x25\x3f\x7d\x72\x09\x5a\x2a\xf8\xe7\x3f\x69\x47\xd9\x0f\x6c\x4c\x70\x79\x09\x23\xda\xf0\xa8\xef\x39\x6d\x9f\x5e\x0c\x07\x03\x5a\x2b\x9b\x7b\xe1\x2b\x77\x65\x0a\x84\xff\x82\x8b\xe9\x94\xc0\x6b\x8d\x2f\x85\x72\x38\x1c\x3c\x34\x47\xe0\x6d\x85\x51\xcd\xd7\x77\x1b\xa3\x51\x7b\x29\x54\xaf\xf5\x69\xc0\x3d\x45\xc7\x89\x83\xd5\x9d\xe0\x7f\xdc\xf4\x96\xf2\x96\xe2\x61\x7c\xca\xf1\xbc\xb5\x8a\xa2\x68\x90\x5b\x14\x8e\x3c\x7c\x2b\xa4\x67\xfb\x70\x1c\x7b\xd1\x6f\x11\x75\x73\xf0\x33\x38\x9f\x4e\xc7\xf0\x82\xfe\xfc\x95\xfe\xfc\x8d\xfe\x50\x80\x38\xff\x62\x3a\x85\x52\x2a\x25\x83\x15\x3b\x78\x3e\x39\x83\x6a\x03\xde\xc0\xc5\x9f\xe0\x57\xe9\x3d\xda\xfa\x68\xfb\x77\xf1\x19\x06\x0d\xb3\x4b\x28\xc5\x47\x4c\x0e\x5e\x8f\xe1\x22\x1d\x0e\x34\xde\x31\xc5\xf9\x74\x5a\x1b\xf9\x0f\x7b\x89\x86\x03\xab\x0b\x7a\x4d\xa9\x3b\x7b\x8d\xdb\xa4\xfe\x32\xe7\x3c\x99\x30\xc3\x6b\xb3\x4d\xd2\xec\x27\x2d\xef\x5e\x0b\x6d\x92\x34\x4d\x87\x03\x24\xae\x69\x36\xbd\x80\xc9\x84\xb7\x75\x41\x19\x28\x47\xed\xe3\xbe\x86\x03\xca\xa3\x32\x82\xaf\x38\xae\xd7\x16\xf1\x5e\x7e\x80\x4b\x60\xd1\x9e\x43\x47\xe8\x24\x49\xac\x2e\xb2\x6f\x95\x11\xfe\x8b\xbf\x26\xe9\xb3\x17\xe9\xd9\x79\xfa\x0c\x9f\x2d\xe3\x13\x62\xa2\xf5\xc3\xc6\x9e\x5d\xc2\x8b\xb6\x55\x59\xf4\xff\x6f\x7d\xf7\xd4\x01\xff\xe7\x3b\xf0\x6b\xd3\x9f\x35\x82\x93\x52\x82\xd4\x54\xdd\x05\xe5\x91\x43\x35\xb9\x23\x66\xe1\x2e\xc0\xe3\x8e\x4b\xe1\xa0\xdc\xf8\x1d\x38\x25\x73\xac\x95\xdb\x41\xf8\x37\xb3\x40\x37\xec\x0b\xb5\x15\xbb\x56\xbc\xa0\xfd\x9f\x58\xed\x5f\x4d\xb8\x2d\x19\x82\x5a\xeb\x6a\x8f\x15\x74\x15\x8a\xf0\xae\x1a\x7e\x96\x7e\xdd\xd6\x51\xa3\x0d\xd0\xb8\x85\x58\xb7\x07\x33\x36\xb7\x68\xad\x2c\x62\x5d\x11\x4a\x68\x30\x8b\x5f\x31\xf7\x4f\x5d\x53\x8c\x35\x65\x10\xef\xe8\x00\x3e\xc9\xfd\x5d\x0d\x9a\x45\x79\xc6\x70\xa2\xe4\x4a\x0f\x29\xdb\x55\x60\x7c\x43\xf8\xff\x23\x54\x85\x84\x3c\xee\xec\xf3\xfe\xa1\x83\xcc\x15\x63\x5d\x94\x3e\x6b\x6a\xc1\x3f\xa2\x2c\xad\x97\x18\x83\xf9\xc8\x61\xa9\x16\x38\x49\xb3\x20\x5c\x57\xae\x34\x4b\xda\xdb\x64\x47\x7b\x62\x3e\xd6\x5e\xd1\xe8\xe2\x12\x8a\xac\xf5\x9b\x9d\xa4\xc9\x2c\xb4\xce\xfe\x5d\xb6\x37\xcc\xe1\xe0\x56\xd8\x3e\x1f\x0f\x2f\x1a\x3f\x1f\x72\xcd\x37\x17\xb7\xd8\x29\x8c\x16\xa6\xa0\x1c\x05\x39\x55\xfa\x5b\x84\x35\x13\x98\xb0\x58\x06\x6f\xfc\x1a\xed\x56\x86\x77\x1c\x05\x99\x40\x28\x8b\xa2\x20\xf3\x11\x05\xe3\x72\xb3\x50\x2d\x97\x68\xc1\xe8\x26\xba\x15\x9d\xa5\x98\x9d\xea\xae\x0c\xe6\x88\xcc\x46\x02\xcf\x26\x13\xe7\x69\x3b\xb7\x68\x97\xca\x6c\xb9\xdf\x62\x0e\x69\xb4\x9b\xbc\xf8\xcb\xf4\xcb\xe9\xdf\xbe\xfc\x62\x42\x6b\x49\xbd\x3a\x23\x89\xcf\xcc\xf2\x8c\x78\xcf\x22\xf6\x19\x25\x5e\x53\xf9\xb3\xd2\x14\x72\x49\xb1\xa1\x79\xe3\xbc\xf0\x51\x17\x8b\x6a\x09\xef\x3f\x50\x97\xca\x67\x60\xb3\x6f\x68\xf3\x31\xde\xd1\x69\x74\x15\x36\x18\x2c\xaa\x65\x88\x94\x97\x10\x3a\xd5\xec\x47\x14\xc5\xd7\x4a\x25\x81\x97\xf2\x47\x37\x6a\x12\x4a\x6d\xb4\x5a\x2a\xe6\x1e\x0e\xe8\x24\x1f\x86\x21\x93\xd5\x75\x2f\xa5\xbd\xaf\x38\xfa\x7d\x55\x3f\x7b\xfe\x9c\xf9\x7b\x45\x1b\xd8\xc2\x12\x4f\x94\xe3\xb5\xd9\x5c\x29\xe3\xd0\x26\xdc\x74\x53\xa6\xfd\x86\xd5\x9f\x2c\xaa\x25\xe7\xb5\x41\xc4\xb8\x04\x5b\x44\x11\x38\x3a\xd7\x1b\x2a\xb2\x82\x5a\xab\x7c\x0c\x36\x6e\xa3\x96\xec\xf2\x12\x14\xea\xa4\x36\xbd\x94\x42\xfe\x93\xb6\xf1\xc5\x4c\x13\x32\x0b\xe3\xa5\x41\xc6\x85\x45\xf1\x31\xae\x35\x99\x00\x4b\x58\x37\x1e\x6c\x93\xd1\xdc\x96\xfb\x07\x32\x64\x46\x2d\x55\x2d\x84\xdb\x1c\x28\xd3\x6d\x78\x27\x19\xc3\x91\xc1\x33\x7e\xa8\xb3\x15\xe2\xa6\x91\xf4\x7d\xdc\xc1\x87\xb4\x9b\xcb\xa3\x90\x31\x2c\xe7\xd2\xe6\x95\xf4\xdf\x90\xac\x68\xb9\x41\x94\xe5\x46\x61\x49\x5d\x7d\x88\x75\x81\x02\x16\x81\x04\x36\xd4\x91\x59\xcd\x49\x7d\x8e\x1e\x0a\x5c\x54\x2b\x72\x12\x3a\x3d\xfa\x34\x1b\xb4\xc2\x63\x87\x59\x6a\x10\x50\x52\x0e\xdc\xae\xd1\x22\xf5\x1c\xec\x00\x46\xab\x1d\x28\xb3\x6a\x89\x02\x6c\xa3\xa1\xd6\x63\x1a\xd2\xc8\x42\x99\xfc\x23\x57\x08\x4d\x75\xb1\xb4\xa6\x84\x95\xa1\xcc\xe7\xd7\xd6\x54\xab\x75\xcc\x7b\x3d\x5b\x7a\xac\xe7\x0d\xf2\x87\x7f\xdc\xb8\x0d\x22\xc0\x6b\x51\x22\x71\x4a\xbd\x1a\x0e\xc2\xb8\x24\x50\x6d\x73\x95\xfd\x2c\x56\x21\x60\xbe\xe2\x17\xa4\x4d\xf2\x97\xc8\x3a\x9f\x5f\xbf\xd1\x39\x82\xdb\xe9\x3c\xa3\x6f\xac\xeb\xef\xc2\x30\x65\x3e\xbf\xbe\xbe\xa5\xf4\x21\x1d\x60\x49\x65\x1d\xd7\x39\xfb\xa9\x0b\xdc\x4a\x01\x0e\xed\x2d\xda\x33\x47\x84\x61\xc6\x92\x71\xf5\x84\x2e\xb7\x72\x11\x8a\x66\xd2\x30\x6b\x8b\xaa\x01\x51\x2f\x1e\xd5\x70\xb8\xda\x5e\x07\x37\xf4\xfa\x91\x7f\x61\xcf\xf0\xcb\xaf\xce\xe8\xd9\x88\xc0\x46\xbf\x0c\x07\xac\x8e\xcf\xe6\xd2\xa2\x64\xae\x98\x45\xae\x4c\xa5\x7d\x1f\x97\x0c\x8f\x23\x97\x6d\x51\x13\xf7\x35\x85\x9e\x93\xbc\x87\xdc\xd8\x50\x37\xbc\x6f\x43\xf5\x2c\x56\xc7\xa2\xf7\xf0\xee\xa9\x09\xe0\x7b\x77\xd5\xb1\xa4\x37\x1b\xd4\x6d\x00\x2e\x3a\x1a\x00\xd9\x43\xcd\x0a\x30\x4a\x49\xbd\x62\xb1\xbe\x15\x52\x55\x16\x1f\x53\xc0\x31\xf5\x31\x88\x52\xe4\xe3\x6d\xb0\xc7\x40\x3a\xd4\xa7\xc0\xe6\x55\x9e\xa3\x73\x9f\x09\x16\xa9\x0f\xc1\xe6\x6b\x63\x7d\xd4\x02\x16\x9f\xda\x5e\x97\xfa\x08\xab\x25\xd0\xa7\x55\x75\x42\xa0\x9b\x35\xa5\xc9\xb7\xc6\xa8\x1f\x91\x2a\x35\x12\xea\x34\xc8\x31\xf5\x11\x9e\x2c\xd1\x54\xfe\x33\x85\x8a\xd4\x04\x72\x15\x5a\x9d\x2b\xa3\x63\xd3\x73\x7d\x87\x79\x45\x29\x3d\x18\x77\x17\x24\x7f\x9c\x9a\x00\x5f\x09\x8f\x3a\xdf\xdd\x18\x2f\xd4\x0f\x28\xf4\xe3\xc6\xad\x5a\xd4\xff\x28\x51\x90\x61\xd6\x05\xa1\x32\x2b\x8e\x0f\x89\xea\x8b\x6b\x63\x38\x0a\x24\x9c\xdd\x54\xf6\xca\xac\x12\x62\xf8\x5e\x2f\xcd\x18\x46\xa3\x31\x94\x62\xf3\x3e\x04\x81\x0f\xcd\xd0\xef\xfe\x81\xd2\x56\xd7\xaf\x67\x7d\x9e\x8c\x59\x3b\x52\x8c\x89\xa9\xe5\xce\xbd\x2c\xc4\xb4\x0f\x10\x7b\x96\x96\x17\x1f\xf3\x45\x96\x3d\x0d\xf3\xf5\x3a\xef\xac\xcb\xd7\x17\x0e\x98\xb9\xcf\x67\x67\x87\x9b\x3b\xa6\xe9\xe1\xed\xba\xea\xac\x97\xb7\x43\x73\x12\xa3\x76\x88\xc7\x30\x22\xcd\x11\xc6\x81\x63\xce\xfa\xf6\xd0\xa5\x39\x86\xe8\x2c\xdf\xaf\x86\x53\xcb\xf7\xb8\xe1\xec\x90\xf7\x98\xe6\x18\x26\x7a\xdf\x63\x22\x44\x1a\xe6\xfd\x94\xd3\xcd\x00\xb3\x4f\xb8\x31\xe3\xa8\x03\xcf\x3c\xb6\x41\xcc\x0e\xbd\x77\x3c\x1c\x3c\x74\x5b\xb4\xe3\x1a\x26\x05\xa9\xa5\x4f\xd2\x38\x46\x7f\x8b\x56\x9a\x42\xe6\x3c\x55\x53\x66\x15\xe6\xec\x5a\xa8\x6e\x19\x45\xf5\x98\x70\x4e\x3a\x2e\xc1\x1c\x7a\xcf\xd5\x4c\xab\xda\xf2\x6b\x8b\x6e\x6d\x54\xe1\xb8\xe2\xaa\x74\x81\xd6\x79\xa1\x0b\x1e\x29\x6c\x36\x4a\xe6\xa1\xc5\x5f\xe0\x5a\xdc\x4a\x63\x33\x66\xff\x49\x2f\x8d\xf5\x95\x16\x1e\xd5\x6e\xdc\x2e\x5e\x0a\x83\x4e\x3f\xf5\xb1\x35\x82\x95\x45\xe1\x61\x2b\x76\x24\x0a\xde\x6d\x42\x11\x2c\x1d\xa3\x14\xc2\x8b\x31\x38\x43\xfd\x94\x45\x67\xac\xe7\x42\xb2\xb2\x9a\xef\x00\x34\x48\xef\xc0\x55\x1b\xbe\x54\xa3\x7e\x61\x61\x8d\x28\x72\xe1\x8e\xb6\x51\x52\xb1\x9b\x3b\x2e\x9d\x78\xea\x7f\x5c\x3f\x41\x32\x9f\x5f\xa7\x41\xfc\x39\x86\xcb\x01\x37\x9b\x4c\x1e\xb9\xfe\x92\xce\x55\xe8\x26\x17\x5f\x64\x4d\x55\x18\x4b\x3b\xea\x16\xe8\xb4\xc2\x81\x0c\x22\xcf\xdc\x5b\x14\x65\x7d\x25\x33\xbb\xac\xf5\xc2\xb3\xbf\xf6\x3b\x2e\xdc\xfb\x98\xb2\xb9\x17\xd6\xf3\x6b\x25\x9d\x47\xcd\x31\xd8\x32\x98\x46\x9f\xbd\xe2\x87\xc9\xc8\xe7\x9b\xd1\x18\x46\xe7\x2f\xbe\xcc\xa6\xd9\x34\x3b\x9f\x4d\x47\x27\xfa\xaf\x8d\xd0\x32\x4f\xa8\x2d\xe1\x5e\x61\x38\x18\xac\x0c\xef\x3d\x9b\x93\x8a\x92\xfd\x32\x7d\xf2\xa4\x81\xbe\xb5\x55\x52\xdf\xcf\xc8\x36\x87\xb7\x68\x77\x70\x3e\x85\x7a\x12\xbb\xc0\x5c\x54\xb1\xcb\x21\x34\xb4\xf2\xae\x39\x1a\x61\x91\x8e\x54\xc0\xf9\xf4\xac\x1e\x94\x32\x5a\x74\x5b\xd8\x4a\x5d\x98\x6d\x06\x37\x6b\xe9\x40\xa1\x7f\xea\xa0\xa2\xe3\x2f\x79\xba\xdb\x07\xe9\x0d\xac\x90\xaf\x2f\xac\xda\x45\x34\x91\xe7\x55\xe8\x3f\xc8\xbd\xe2\xd5\x92\x83\x44\x1b\xee\x49\x84\x67\xf3\x03\xc9\x46\xba\x41\xbb\xc4\xdc\x37\x82\x9b\xca\xc6\x1b\xa8\x88\x56\x5b\x73\x24\x54\x3b\x28\x85\xcf\xd7\x8d\x28\x4f\x5d\xec\x54\x10\x84\x72\x86\xd5\xb2\x5d\xa3\xee\x6b\x9d\x22\xa4\xe3\x81\x20\xe4\x6b\xa1\x57\xe8\xb8\x3b\x55\x66\xf5\x2d\xe7\x48\x9d\xef\xc2\x5c\xb9\x7b\x77\xc2\x34\xc2\x79\x4e\xc0\x73\x44\x1d\xc6\xd3\x4d\xbe\x3d\x48\xd1\xf7\x0f\x1d\x86\x57\x66\x45\x91\xee\x80\x87\xe1\xe9\xf9\x3d\x1b\x05\xb7\xe3\xff\x80\x7a\xae\x1c\xdf\xe6\x1f\x93\x83\x6b\x9c\x14\xee\xa1\x19\x77\x49\xcd\x73\x49\x49\x41\x80\x30\x06\x95\x55\xb4\xcc\x28\x8e\x32\x46\xf0\x1c\x6a\xfb\xca\xbe\x2e\x0a\x9b\xa4\xd9\x9c\x97\x67\x0b\xa7\x7e\xf6\xb7\xc6\xbc\xd9\x26\x5f\xe3\x36\x16\x02\xc9\xe8\xbf\xaf\x6f\x46\x63\xa8\xac\x1a\x93\x35\x07\x86\x1e\x03\x67\xf5\x65\x6f\xad\xd4\x7e\x99\x84\x12\x00\x72\xa3\x35\xe6\x9e\x9b\x43\xd3\x9c\xc3\x7c\x7e\x4d\x6d\x0a\x8a\x72\x06\x7f\x72\xa3\xd0\xac\x07\x88\xdc\x68\x2f\x75\x85\xfc\x8b\xd5\x37\x08\x94\x8d\x78\xad\x8b\xee\x6c\x5e\x2d\x42\x1b\xf6\xb3\xf4\xeb\x84\x8a\x9f\x3f\xb7\x66\x68\x61\xf8\xf6\xdb\xff\xb9\xc0\x74\x82\x78\xbb\xbf\x1b\x08\x9c\xd9\x75\x88\x7e\x71\x69\x9e\xea\x1c\xd6\x74\xe1\x55\x14\x75\x76\x09\x54\x36\x66\x3f\xe9\x52\x58\xb7\x16\x2a\x09\x63\xa2\x04\x6f\xb3\x97\xc2\x8b\x24\x4d\xc7\xf0\x67\x4c\xbf\xea\xd9\x58\x57\xac\x28\x17\x03\x67\xdc\x75\x3e\xb9\x84\x51\x5c\xfb\xca\x94\xa5\xd0\xc5\xe8\x24\x6b\xf8\x9c\x4c\xe0\xc6\x14\x62\xc7\x1e\x66\x11\x72\xca\x27\x61\xdc\x1d\xf6\x07\x61\xdb\x14\x89\xe2\x58\x96\xdc\x10\xbd\x6b\x86\x0b\x75\xfc\x27\xc2\x90\x7a\x22\x70\xdd\x30\xc3\xf7\x9a\xff\xb3\x42\x81\x42\xc1\xd6\x58\xc5\xfe\xcc\xec\xbc\x1c\xe5\x31\xc7\x97\x84\xf5\x9a\xe4\xf2\x1b\xe1\x1c\xc8\x90\xb1\x9a\x99\x70\xd6\x80\xbf\x22\x11\xb6\xc6\xda\x1d\x88\x05\x75\x0d\x45\x9c\x55\x48\x17\x22\xc4\x16\xf7\xa3\x16\x06\xa3\xd7\xf9\x41\x8d\xc9\x63\xbf\x06\xd3\x1b\x28\xa4\x13\x0b\x85\x71\xec\x52\x9a\x02\x5b\x3a\xe6\x1e\xfd\xc9\x25\x14\x59\x7b\x86\xf1\xb8\x82\x29\x4c\x50\x48\xa9\x07\xb8\x9d\x38\xf3\x3e\x60\x7e\xd8\x93\x1e\xbd\x82\x4b\xc0\xfd\x59\x91\xba\xdb\xa1\x2f\x54\x21\x72\x09\x92\xc2\x39\x4a\xbf\x0e\x71\x90\x89\x93\xf3\x94\x89\x97\xd2\xba\x98\xa5\x61\x8b\x4f\x6f\x11\x1c\xc5\xb8\x70\x5e\x7b\x2c\xd3\xe2\x7c\x91\x76\x5f\x51\x6f\x1e\xd6\x5a\x8b\x3a\xb6\x16\x1d\x8e\xbf\xa4\xed\x4c\xc5\xd5\x09\x29\x1d\x0b\x3a\xda\x9c\x47\xba\x3c\xe4\x29\xc0\x99\x12\xfd\x9a\x4e\xe3\x40\x82\x46\xd3\xf5\xc0\x7a\xd0\x13\x66\x5b\x7a\xd9\xdf\xf3\xd5\xb4\x75\xb3\x55\x64\xaa\xee\xaf\xd2\x4f\x78\x4e\x7d\x3e\xbd\x0d\x08\x1d\x76\x7f\x6b\xf2\x47\xcb\xf7\x00\xa8\x1c\x9f\x64\xeb\xf6\x72\x5e\x2d\x92\x53\xf8\x29\xfc\x1d\x3a\x79\xed\x8f\x16\x68\x1f\xf9\xe8\xcf\x03\xf1\x7c\x46\x15\xfd\x3b\x6f\x3c\xe4\x12\x8a\x2c\xf8\xde\x7d\x67\x86\x3c\x3b\x1a\x22\xd7\xb5\xdf\x4b\x93\x74\xfc\x71\x5c\x57\x53\x21\xf2\xb3\x5a\xfa\xb2\x44\x9c\xd8\x86\x99\x79\xd8\x68\x1c\x09\xb7\xef\x14\xff\x7e\xd9\x5c\x2a\x0e\xc2\xff\x63\xc1\x22\x5e\x59\x10\xb7\xd0\x71\x19\x1e\xd0\x4a\x1e\x62\xb6\x9d\x26\x56\x3a\xad\xc5\x8c\xe5\x01\x7a\x32\xba\x78\xf7\x8e\x6b\xca\xb0\x74\x47\x9a\x87\x26\x23\x1f\x8d\x95\x39\xae\x7c\xe6\x25\xcc\x20\x0c\xdf\xff\x05\x45\x3d\x3e\xb3\x3f\x71\xf5\xd0\xdc\x3a\x7c\x4a\x7f\xff\xb6\xfa\x1e\xd1\xde\xc3\xb0\x2b\x47\x50\x1d\x4c\x9e\x81\x36\xb0\x8c\xad\x38\x6f\x34\xfc\xf7\x82\x1d\x7a\x78\x36\x49\x7b\x07\xf6\xff\x1b\x00\x00\xff\xff\x0b\xf5\x91\xd7\x6e\x28\x00\x00")

func _hardcodedDoerGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedDoerGo,
		"../_hardcoded/doer.go",
	)
}

func _hardcodedDoerGo() (*asset, error) {
	bytes, err := _hardcodedDoerGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/doer.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xeb, 0xd5, 0x50, 0x29, 0x13, 0x67, 0xba, 0xf5, 0xf1, 0x59, 0x97, 0x63, 0x87, 0xc0, 0x3f, 0xe5, 0xc6, 0xda, 0xc0, 0x7, 0x6c, 0x4e, 0x4c, 0xc2, 0xdc, 0x12, 0xef, 0x1f, 0xaf, 0x7f, 0x8e, 0x40}}
	return a, nil
}

var __hardcodedMiddlewareGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x5f\x6b\xe3\x46\x10\x7f\xb6\x3e\xc5\x74\x4b\xc8\xea\x70\xe4\x7b\x28\x14\x02\x7e\x28\xe9\xa5\x79\x39\x38\x2e\xa1\x2d\x94\xc2\x6d\x56\x23\x69\xb1\xbc\xab\xce\x8e\xac\x9a\xe0\xef\x5e\x66\x25\x39\x51\x48\xd3\xa7\x3e\x58\xde\x9d\x99\xdf\x6f\xfe\x6f\x67\xec\xce\xd4\x08\x11\xe9\x80\x94\x65\x6e\xdf\x05\x62\xd0\xd9\x4a\x55\x7b\x56\xd9\x4a\x79\xe4\x4d\xc3\xdc\xc9\x99\x7a\xcf\x6e\x8f\x9b\x12\x1f\xfb\x5a\x65\xd9\x4a\xd5\x8e\x9b\xfe\xb1\xb0\x61\xbf\xb9\x69\xf1\x80\xb4\xd9\x99\xe3\x01\xf1\xaa\x0e\x9b\xc3\x8f\x9b\x36\xd4\x35\x92\xca\xf2\x2c\xdb\x6c\xe0\x8b\xf1\xce\x7e\x76\x65\xd9\xe2\x60\x08\xa1\x0d\x75\x04\xe3\x8f\xd0\x89\x22\x16\x70\x1b\x08\x7c\x18\xd6\x30\xe0\x25\x21\xd8\xe0\xd9\xf9\x1e\x81\x1b\x0a\x83\xf3\x35\x70\x83\xa3\x31\xf4\x9d\x30\xca\x3d\xb2\xb1\x3b\x88\x01\xb8\x71\x11\xf6\xe6\x08\x96\x4c\x6c\x46\x5b\x0a\x16\x63\x2c\xb2\xaa\xf7\xf6\xb5\x7f\xdd\x80\x24\x56\xdc\x19\x5f\xb6\x48\xf9\xe2\x06\x4f\xd9\x8a\x90\x7b\xf2\x0b\xf1\x6d\xef\xad\x16\x32\x3d\x8c\xf2\xaf\x18\xbb\xe0\x23\xfe\x46\x8e\x91\xd6\x40\xf0\x61\x92\xff\xd5\x63\xe4\x5c\x78\x56\x25\x56\x48\x90\x60\xa3\x60\x95\x92\xf8\x44\x04\xd7\x5b\x20\xb4\xe1\x80\xa4\x73\x51\xb8\x0a\xce\xba\xed\x16\xbc\x6b\x47\xc0\x14\x8c\x1c\x4f\xf2\x39\x18\x02\xa4\xf4\x0b\x94\x89\x24\x0e\x8e\x6d\x03\x2f\x99\xe7\x73\xa1\xf9\xd8\xe1\xe4\xda\x9a\x28\x45\x23\xe7\xeb\xeb\xc4\x2c\x34\x5b\xa8\xf6\x5c\x7c\x12\xb2\x4a\xcf\xb0\xfc\x6c\x9e\xbc\xbc\xb4\x9e\x4d\x44\x54\x62\x65\xfa\x96\xff\x85\x4c\xf5\x7e\xe7\xc3\xe0\xa7\xbe\x5d\x7c\x7f\x80\x50\x81\xc4\x03\x17\x0f\x6a\x7d\x66\x7a\x3e\xe5\x63\x92\xf2\x1d\xe7\xa7\xb8\xa5\xb0\xbf\x09\x9e\xf1\x6f\xd6\x54\xcc\xa7\x3c\x1f\x7d\xfc\xac\x55\x82\xaa\x75\x8a\x60\xc2\x7c\x7e\x52\x48\xa4\xae\x25\xf6\x35\xa8\x34\x25\x4c\xc6\xa2\xba\x9e\xb2\xd7\x69\x8c\x8b\x7b\xd1\xe8\x3c\x3f\xe5\xe7\xc6\x2c\x2a\x70\x4a\x8d\x69\x8a\x7b\x59\x91\xbb\x87\x87\x2f\x7a\x58\x83\x68\x4e\x79\x76\x4a\x73\x1d\xd9\x70\x1f\x97\x93\x00\x03\x99\x2e\x82\x01\x9a\xc4\x30\x24\x79\x96\x32\x7f\x13\x11\x99\x7a\xcb\xd2\xa4\x37\x26\x2b\x5b\x8d\x18\x70\x9e\xc5\x6d\x1a\x68\x1d\xe1\xc3\x5b\x54\x39\xa4\xff\x3b\x34\x25\x92\xb6\xa1\x44\x81\xa5\xfe\xc7\x62\xe2\xd9\x82\xc8\x45\xb0\xc4\x16\xaf\xa1\x73\x96\xbf\x22\x45\x17\xfc\x57\xe3\x6b\x84\x12\xad\x2b\x31\xc2\xd0\x20\x37\x48\xc0\x01\x8c\xb5\xd8\x31\x18\x38\x8c\x86\xc5\x98\xea\x02\x96\x56\x60\xd2\x4f\x5d\xc8\xe1\x31\x84\x36\x79\xb8\x69\x1d\x7a\x9e\x00\x37\x0d\xda\xdd\x8b\xc7\xc2\xca\x3d\xa6\xad\xb6\xc9\xee\xd9\x4f\xaa\xc5\x7b\xe0\x57\x9b\xbe\x06\xf2\xf5\x22\xb0\xff\x71\xf7\xe7\x6c\x65\xd1\x8b\xb1\xac\xc5\x2f\xc8\x5a\xfd\x7e\x35\x86\x7c\x35\x05\xa2\x64\xcc\xfe\x6b\xe0\x7f\x2a\xcb\xf9\xa6\xc6\x32\x5c\x4d\x0e\xd4\x7a\x2e\x88\xf0\xb8\x0a\xbe\x23\x5f\xcf\xb5\x9e\x56\x7f\x58\x34\xf7\x87\x8f\x1f\xf3\x17\x52\xfd\xc7\x9f\x8f\x47\x46\x2d\xbb\x7b\xdf\x91\xf3\x5c\xe9\x6f\x4f\x6a\x8f\x31\x9a\x5a\xb6\x46\x2d\xeb\x0e\x97\x17\xf1\x12\x7c\xe0\xa9\xf3\x58\xae\xa1\x6b\x51\x9e\x8b\xbe\xab\xc9\x94\xa8\x4e\xdf\x9e\x83\xca\x93\xaf\xf3\x2b\x76\x7a\x67\xa7\xfe\x09\x00\x00\xff\xff\xa1\x73\xce\xd9\x95\x06\x00\x00")

func _hardcodedMiddlewareGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedMiddlewareGo,
		"../_hardcoded/middleware.go",
	)
}

func _hardcodedMiddlewareGo() (*asset, error) {
	bytes, err := _hardcodedMiddlewareGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/middleware.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcb, 0x1, 0xb6, 0x9d, 0x16, 0xe7, 0x46, 0xa2, 0x49, 0x7d, 0xf6, 0xc, 0x20, 0x3a, 0xd4, 0x73, 0x64, 0xea, 0xcc, 0xe3, 0x1f, 0x62, 0xec, 0xc7, 0x5b, 0x68, 0x93, 0x2d, 0xaf, 0x96, 0x19, 0x61}}
	return a, nil
}

var __hardcodedTracingGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x59\x6d\x4f\xdc\xc8\x93\x7f\x6d\x7f\x8a\x3a\x4b\xbb\xb1\xa3\xc1\x0e\xfb\x90\x5d\xb1\xe2\x05\x04\x92\x8c\x0e\x58\x04\x44\xb9\x53\xb4\x42\x8d\x5d\x33\x6e\x61\x77\xfb\xba\xdb\xf3\xa0\x88\xef\x7e\xaa\x6a\xdb\xe3\x81\x81\x3f\x9b\xbc\x98\xcc\x74\x57\x57\x57\xd7\xe3\xaf\x8a\x46\xe4\xf7\x62\x8e\x60\xd1\x2c\xd0\x38\x23\x72\xa9\xe6\x61\x28\xeb\x46\x1b\x07\x71\x18\x44\xb9\x56\x0e\x57\x2e\x0a\x83\x08\x55\xae\x0b\xa9\xe6\xd9\x9d\x54\xc2\xac\xb7\x96\x4a\x5c\xd1\xef\x59\xcd\x94\x0a\x5d\x56\x3a\xd7\xd0\x77\x6d\xe9\xd3\x3a\x93\x6b\xb5\xa0\xaf\x4e\xd6\x18\x85\x61\x10\xcd\xa5\x2b\xdb\xbb\x34\xd7\x75\xf6\xa1\xc2\x05\x9a\xec\x5e\xac\x17\x88\x7b\x73\x9d\x2d\xfe\xc8\x2a\x3d\x9f\xa3\xf1\x94\x3a\xd5\x0d\x2a\x87\x15\xd6\xe8\xcc\x3a\x95\x3a\x23\xc1\x8c\xbc\xcb\xa4\xb2\xce\xb4\x35\x2a\x27\x9c\xd4\x2a\x1b\x71\x9d\x6b\x23\xab\x4a\x64\x75\xbb\xca\xb4\xc3\xaa\x6e\x59\xc8\x5d\xdc\x68\xfb\xa5\xbd\x0c\x57\xa4\x12\x34\x36\xd3\xae\x6a\xf8\x83\xd4\x85\x3f\x74\x68\xf3\x6d\x6e\x9a\xfc\x45\x16\x8d\xd1\x8d\x98\xf3\xd3\x5e\xa4\xb3\xc5\x7d\x66\xd0\xea\xd6\xb0\x4c\xb6\xb8\x67\xfe\xf0\xf2\x89\xff\xfc\x84\x81\xca\x7f\x3a\xb4\x64\x61\x8b\x35\x99\xf3\x25\xee\x9e\x22\x5b\xec\xa7\xfb\xef\xd2\x77\x2f\xde\xd1\x49\x91\x84\xe1\x42\x18\x28\x70\x26\xda\xca\x7d\xd0\x55\x85\xb9\xd3\xe6\xb3\xb6\x0e\xac\x33\x52\xcd\xe1\x10\xa2\x4a\xe7\xa2\x2a\x35\x89\xb1\x8b\xfa\x92\x1c\xb7\x95\xca\xed\xbf\x87\x43\xf8\xed\xd7\xfd\x3f\xc2\x30\xcb\xe0\x5a\xc3\x12\xdf\x2c\x10\xe6\xda\x81\x6a\x6b\x34\xba\xb5\x10\x19\xfc\xbf\x16\xad\xdb\x93\x45\x64\xc1\x69\x28\x50\x54\xb0\x94\xae\x4c\xe9\xd0\xff\xec\x5d\x75\xfb\xd3\x13\x90\x16\x2c\x3a\xb8\x5b\x03\xaa\x85\x5e\xa7\xf0\x15\x61\x29\x94\xa3\x63\xbd\x91\x10\xa4\x83\x42\x1a\xcc\x5d\xb5\x06\xa1\x0a\x58\xca\xaa\x82\x5a\xa8\x56\x54\xb4\x52\x14\x44\xe1\x34\x54\x7a\x6e\x41\x58\x58\x62\x55\xf1\x5d\x5f\x11\x0a\xad\xde\xb8\x81\x67\x2e\xaa\x8a\x88\xb7\x85\x50\xe0\x4a\xf4\xa7\xef\x30\x17\xad\x45\xd0\xae\x44\xc3\x11\x2c\x73\xb4\x50\x8a\x05\x12\x91\x34\xa0\x97\x6a\xeb\x38\xdd\xe3\x4a\xe1\x68\x7b\x4d\x4c\x60\xa6\x0d\x2c\x84\x91\xa4\x0c\x83\xc2\x6a\x65\x59\x9a\x9c\xe3\x71\x6f\xa3\x1e\x7a\xbe\x6e\x0d\xb8\x92\xcc\x30\x47\x85\x46\x38\x2c\x48\x1d\x64\xc2\xc9\x46\x05\xbc\x46\x42\xd2\x3a\x3c\x8a\x4e\x88\x85\x05\xe9\xde\x58\x96\x6d\x89\xd2\x14\x50\xa2\x28\xd0\xd8\x84\xee\x25\x95\xb9\x12\xd5\x46\x65\x23\xbe\x4f\xd4\x46\xf6\xef\x4e\xdf\xe8\xcb\xc1\x06\x87\xf0\xed\x1f\xef\x2f\xdf\xa3\xf1\xf3\xa3\x09\x44\x4f\x1e\xe6\x17\x25\x2a\xb7\x27\x9b\x3d\x51\x14\x06\xad\x8d\x1e\xb6\x79\x9f\xe9\xf9\x91\x85\x43\xa8\x45\xf3\xcd\x73\xde\x7d\xc1\x01\x44\xec\x1c\x4f\xf8\x3f\xbe\xf4\xe0\xd5\x92\x1c\x8c\x16\xa3\x07\xef\xcb\xe8\xda\xe6\x53\xa5\xef\x44\x75\x43\x91\x73\x69\xf4\x42\x16\x68\x8e\x54\x71\xda\x25\x1c\x72\x55\x0b\x6d\xc3\x86\x98\x33\x29\xf8\x7c\xd0\x74\xc4\xac\xea\x3e\x3f\xa5\xe1\xac\x55\xf9\x6b\x18\xc7\xb9\x5b\x41\x57\x13\xd2\x0f\xfe\xff\x04\xe2\x3e\xdd\xa4\xd7\x8d\x50\x3d\xed\x04\xde\x0e\xeb\xcc\xcf\xf4\x0c\x27\x80\xc6\x68\x93\xc0\xf7\x30\x0c\xb2\x0c\x4e\x17\x68\xd6\xb0\xff\x3b\x58\xcc\xb5\x2a\xc8\xbe\x6f\x2a\x92\x78\xcd\x91\xa0\x95\xc2\x9c\x83\x62\x2b\x7f\x40\xde\x07\x3d\x08\xc7\x7c\xe8\xb5\x5d\x42\x00\xca\x13\xec\x72\x7a\x06\x43\xce\x38\xe0\x84\x40\xa4\x5f\xc9\xcb\x4c\xab\x14\xf9\xb3\x54\xa4\x97\xa2\xcd\xf9\x80\x2b\xa5\x25\x7f\x17\x60\x65\x81\xb9\x30\x13\x1f\xca\xa3\x13\xcc\x82\xb9\x56\xeb\x11\x7d\xbf\xd2\xf3\xd5\x0d\x0e\xd2\xee\x0d\xd2\xa6\x61\x40\xde\x65\x47\xaa\x82\x9d\x0a\x0c\x03\xf2\x02\x38\x38\x84\x59\xed\xd2\xeb\xc6\x48\xe5\x66\x71\xf4\x93\x3d\xf8\x89\xbc\x65\x57\xa2\x7c\xba\x4a\x09\x31\x09\x03\x34\xcc\x88\xf5\x1e\x2b\x59\x25\x61\x20\x67\x10\x6b\x9b\x7e\x42\x87\x6a\x11\x47\xb7\x37\x57\x47\x1f\xa6\x17\x9f\x6e\x4f\x2f\x8e\x8e\xcf\x4e\x4f\xa2\x24\x81\xc3\x43\x88\x9c\x69\x31\x62\x4b\x05\x54\xb6\x3e\xb0\x37\x12\xaf\xad\x22\x96\x5e\xe0\xd2\x6f\xc5\x61\xe0\x29\x37\x7b\x5f\xa5\x2b\xaf\xb0\xb3\xa3\xd4\xea\x12\x8d\xd4\x45\xbc\xff\xfb\x5b\x02\x03\xe9\x35\x5b\x3d\x99\xec\x3e\x78\xaa\x8a\x46\x4b\xe5\x62\x52\xc6\x73\x44\x53\x65\x31\x6f\x0d\xc6\x4c\x90\x84\x41\x60\xb7\x3c\x91\x9e\x3f\x92\x98\xa4\x25\x57\x9e\xc0\xe6\x49\x74\x48\xce\x98\xf2\xbf\x0e\x41\xc9\x0a\xbe\xd3\x5d\x06\x5d\x6b\x14\xfd\x9e\xf8\x0f\xb2\xc5\x29\xa9\x71\x16\x47\xac\x4e\xc8\x0d\x0a\x47\xf6\xee\xe3\xe9\x00\x7e\x5a\x44\x7c\x29\x31\x7d\x08\x83\x07\xc0\xca\x22\x33\xdc\x32\xfb\x21\x0c\x55\x95\x44\xba\xd0\xba\x19\x22\x2d\x09\x83\x87\x30\x0c\x5c\x43\xba\x56\xb8\xdc\x0e\xa1\x78\xfb\x7d\x0a\x97\x57\x5d\xf5\x8f\x93\x24\x0c\x28\xf9\xa6\xd7\xe8\x1e\x1d\x72\x4d\x12\x86\x81\x47\x56\xe9\x47\xa3\xeb\x2e\x84\x49\x17\x49\x3a\x55\x33\x7d\x12\x47\xd6\x09\x43\xcf\xd9\x63\xd9\x4c\x34\x81\xee\xc0\x39\xc9\x1f\x6d\x32\x13\x7d\x9b\x84\xc1\x43\x12\xf6\x5a\xda\x16\xca\x35\xac\xb2\xf0\x21\xf4\xf9\xe5\xe9\x23\xf0\x45\xff\x9f\x40\x8f\x68\xe0\x6d\xff\x2d\xed\x9f\x99\x3c\x9b\x5d\x48\xcd\x56\xd4\x4d\x25\xd5\xfc\xd2\xe8\x3b\x71\x27\x2b\xe9\xd6\xa4\xc6\x77\xe9\xbb\xdf\xc3\x40\xda\x33\x0a\x54\xf6\xe1\x91\xff\x4f\xaf\x6f\xcf\xfe\xfe\x70\x74\x16\x8d\xfc\x9e\xa3\xa4\xa7\x67\xf3\xed\x60\x7c\x08\xfb\xe9\xbb\xc1\xc8\x72\x06\x8b\x47\xac\xfb\xc8\xba\x3e\x3a\xbf\x3c\xa3\x2f\x97\x57\x7f\x1f\x1f\x1d\x4f\xcf\xa6\x37\xff\x1b\x25\x7f\xc1\x82\x3c\x2e\x8a\x9e\xbb\x80\x0c\x75\xaa\x16\xde\x8b\x0f\x0e\xa1\x03\xd3\xe9\xa5\x30\x16\x3f\x56\x5a\xb8\x78\x31\x81\xf7\xbf\x3d\xe3\xc1\xcf\x73\x24\xc9\xbd\x83\x3e\xf3\xae\xe7\x8f\x8e\x9d\x73\xb0\xc3\xc5\x13\x03\x87\x41\xe0\xc1\x0d\x21\x95\x71\x7a\x9e\x9e\xf4\x28\x42\x9b\x14\xa6\x0a\xb4\x21\xd3\x11\x20\xe9\x2f\xa5\x84\xbf\xd4\xe6\x1e\x62\xe1\xa0\x42\x61\x1d\x43\x33\x9f\x6f\x99\x08\x39\xbe\xba\xc4\x3f\xe6\x08\x75\x6b\xdd\x00\x53\xba\xd2\x37\x3d\xb1\xd0\x2a\x39\xd3\xa6\x26\x2c\xe6\xc0\x08\x55\xe8\x1a\x66\x46\xd7\xcc\x01\x95\x93\x06\xc9\x89\x73\xa4\xb2\x41\x30\xf2\xfd\x6f\xa9\xbf\xe2\xa3\x36\x80\x2b\xbe\x75\xb2\xf5\x92\xd5\x9e\x11\xeb\xed\xdb\x0b\x8d\x16\x94\x76\x50\x68\x96\xb6\x63\x31\xe8\x89\x32\xd6\xb5\x7f\x40\xbc\xed\xc4\xd3\x93\x2b\xaa\x5a\xc7\xc2\x62\x11\x27\x9c\xcc\x5e\x3e\x75\x29\x0c\x2a\xe7\xe9\x5f\x60\xb5\xc3\x90\x89\x67\x9f\x65\x70\x53\xa2\x45\xa8\xc5\x4a\xd6\x6d\x6d\x41\x18\x24\xd5\xcf\x5b\x61\x0a\x10\x73\x41\x18\x0e\xac\xae\xb1\x03\x7f\x9a\x3e\x97\x46\xab\x39\xd7\x45\x8b\x8a\x5a\x40\x10\xe0\x7c\xb5\x2d\x84\x13\xd0\x2a\x5c\x35\x98\x3b\x2c\xaa\xf5\x93\x47\x34\x42\x9d\xc9\x5a\x3a\xbb\x0d\x1c\xfc\x1a\xfb\xec\x91\xa3\xe6\xae\x75\xf8\x41\xb7\xca\xf1\xc6\x01\xec\xbf\x7b\xc7\xe9\xff\x74\x81\xca\x8d\x37\xe8\x5f\xbf\x79\x26\xd5\xfd\xe3\xbd\x7e\xf3\x21\x99\x84\x8f\x85\x39\x16\x2e\x2f\x47\xa9\xe8\xa9\xce\x87\xc4\xda\xe7\x20\x22\x79\x39\xc7\x6e\xf6\x70\xe5\xce\x45\xd3\x83\x53\x6d\xe2\x51\x43\xc7\x35\x53\xd7\x8d\xb6\xd2\xe1\xcb\x94\x7c\x47\x97\xac\xbf\x3f\x6c\xe0\x36\xed\x1d\x8b\xf9\x5c\xcc\xf1\xfb\x43\x42\xc9\xbd\xcb\xc4\xae\x09\x5f\x8d\x16\x3f\x6a\x73\x83\xd6\x11\x86\xa9\xb1\x6b\x3f\xee\x38\x64\x0b\x82\x46\xad\xa2\x9e\x05\x2d\xd5\x84\x49\x8f\xd2\x6b\x49\xa5\xcf\x72\x24\x58\xba\x02\xc4\x9d\x5e\x20\x07\xb0\x6e\x1d\x21\x27\x0e\xa1\xd1\xd9\x14\xa6\x0e\xbc\x78\x16\x84\x02\xa9\xf6\x6a\xac\xb5\x59\x13\xcf\xa1\x12\xcc\xba\x38\x93\x6a\xbb\xd3\xa0\xd2\x62\x5f\x0f\x54\xbb\x37\xc5\x09\xc4\x6f\x37\x35\x76\xaa\xce\xf9\xc6\x7f\x05\x51\x83\x41\xb6\x83\x47\xf5\xfa\x31\x3b\xaa\xd9\xcf\xd5\x6b\xfc\x91\x5a\xdd\x5b\x13\x77\xd5\xd4\x2c\x83\xf3\x76\x75\xcd\xa3\x9b\x73\x59\x14\x15\x2e\x29\x74\x7b\x0d\xd7\x9b\x25\x6e\xfa\x6c\xa9\xdb\xaa\x20\xc3\x0a\xe7\x44\x5e\xfa\x8e\x4a\xc0\x68\x4a\xd2\xcd\x81\xb8\x05\x9c\x3a\x9f\xc6\xdc\x52\xfb\xae\xcf\x1e\x00\x23\x03\xeb\x4d\xe1\x41\xb1\x28\x0a\xff\xdb\x37\xf1\x20\xd5\x4c\x13\x5b\x72\x8b\xbe\xb5\xb1\x0d\xe6\x72\x26\xf3\x1e\x46\x10\xf7\x2b\x39\x2f\x1d\x28\xbd\x84\x25\x82\x56\xd5\x1a\x6c\xdb\xf0\xd0\x89\x88\xc8\xf2\x94\xad\xbb\x76\x97\x32\x36\x77\xad\xc2\xc1\x89\x70\xa2\xd0\x0c\xb5\x30\x77\xbd\x43\xec\xd0\x43\xdc\x75\xc4\x17\xa2\xc6\x6e\x7c\x90\x00\x11\xc7\xa5\x73\x4d\xfa\x59\xa8\x82\xea\x07\x8c\x7f\x91\xb1\xb5\xab\x48\x13\x8c\x6f\x79\x64\x94\xee\xe6\x39\x19\xf6\x29\x47\x6c\xc2\xd6\xc6\x6c\xcf\x4f\xbb\x62\x3f\x21\x73\x67\x19\x43\xc8\x4b\x42\xf3\x95\x8a\xa3\xa3\x82\xd3\xe7\x46\xfd\x23\xcb\x45\x1b\x17\xf0\xa2\xc3\xcb\xc2\xf7\xc4\xfe\x11\x5b\x2f\xfd\x48\xe7\x99\x89\x59\xfa\x73\x57\x68\x1b\xad\x2c\x7e\x35\xd2\x83\x2d\x78\xdb\xad\xb3\xdd\x12\x8f\x1e\xb2\x0c\x7c\xd1\xa8\xd6\x54\x8d\x5d\x49\x36\xe7\xea\xcc\x6d\x8f\xea\x4c\x2d\x2a\x58\xa0\xb1\x94\x8f\xe0\x42\x83\x42\xef\x5e\x3c\x8d\x18\x79\xa2\x69\x15\x68\x45\x9d\x75\xe5\x4a\xc8\x4b\xcc\xef\xb9\x3a\x12\x6e\x31\xfd\xcd\x5f\xae\xa6\x8c\xc0\xb2\x5b\x4f\xe7\x81\x51\x10\x94\x29\x1b\xf9\xf3\xcd\xcd\x65\x6c\x96\x13\xe0\xea\xdf\xbf\x99\xbe\x12\x24\x09\xb8\xb9\xca\x8d\x2c\x3a\xab\xf3\x9a\x1d\x62\x97\x2b\xcd\x18\xfa\x9a\xbe\x8f\xe5\x60\x0c\x02\x3e\x7a\x08\x96\x09\x87\xad\xbe\xa6\xc6\x49\x7a\xcd\x6c\xe3\x24\xec\xd4\x63\xd1\xed\x18\x98\xf8\xe1\x01\xf7\xaf\x46\x16\xdc\x49\xa4\x9f\x79\x8d\x62\x3d\xde\xd9\xff\x13\xa5\x97\xc1\xb1\x07\x8e\x44\xa3\x55\x4a\x8d\xb7\x93\x9e\x33\xed\x0b\x35\xc7\xc7\x63\x0a\xaf\x2b\xd6\x67\x77\xdf\x27\x74\xb1\x27\x4a\x46\x40\x33\x08\x9e\x6d\x04\x8e\x8a\xa2\xff\xbd\xcd\xfc\x9b\xff\xf9\xcf\x64\x27\x73\x6f\x8e\x87\x8d\x25\xa8\xb5\x57\xb9\x2e\x3c\xf4\xf3\x63\x44\x4a\x16\x20\x8b\xc1\x75\x4e\x4e\xba\xf8\xee\xbc\xc0\xe6\x0c\x29\xb7\xb5\xff\x17\xd8\x3c\xfd\x2c\xec\x60\x84\xee\x05\xc4\x6c\x7a\x32\xf1\xac\xa7\x27\x7c\x32\xe7\xa3\x5b\x96\x9a\xd0\xea\x0e\x03\x06\x5e\xc6\xa2\xcb\x29\x04\xaa\x91\x12\x5c\x89\xab\xce\x79\x78\x2a\xe8\x71\x20\x65\xa4\x09\x58\x1e\x42\x81\x2b\xb5\x45\xfa\xc1\x49\x29\xd7\xc6\x60\xe5\x7b\x40\x3f\xa2\x52\x85\x97\xc9\x32\x82\xb5\xbd\x49\x2a\x54\x71\x27\x2b\x37\x19\xbf\xfe\x02\x3f\xff\xcc\xab\xfe\x25\xbc\xb8\xff\x1e\xbe\x43\x96\x3d\x1a\x76\x78\x25\x1d\xd0\xee\xdd\xda\x21\xc4\xbf\xfe\xb2\x97\x97\x3c\xa5\x5a\x25\x13\xf8\xb3\x5b\xdd\x7f\xbf\x59\xed\x70\x2f\x83\xb4\x4e\xeb\xa1\x37\x7c\x27\xc3\xb1\x9d\xc0\x2d\x29\xad\xc4\x55\x7a\x82\x64\xa9\x4e\x37\xbd\x90\xcf\xfa\xc9\x38\x6a\xc6\xfe\x12\x15\x45\xca\x87\x6f\xc9\xa3\xfd\xf1\x60\x7b\x7c\x41\x9e\xee\xff\x84\x90\x1e\xcb\xf9\xa9\x2a\xa4\x50\xe9\x17\xd6\x71\x3c\x08\xf6\xed\xcf\x83\x7f\x92\xce\xa3\x3a\x33\x3f\x2f\x6d\xa7\xbc\x1f\x12\x96\xce\xfe\x98\xac\xbd\x54\xc9\x4e\xc7\x3f\x2a\x78\x94\xd9\x47\xe7\xa6\x28\xfa\xa4\xfb\x9a\x78\xde\x8c\x34\xff\x45\x4c\x9b\x65\x47\x42\x8e\x3e\x10\xbd\x22\x60\xe9\x2c\x50\xce\xa1\x7a\x36\x4e\x07\xe1\x73\xa9\x97\x00\x67\xf0\xd0\x41\x91\x11\xaa\xd9\x80\xbc\x4d\x03\x5f\xa0\xcd\x8d\xbc\x1b\x0a\x87\x68\x9a\x4a\xfa\x09\x1d\x03\x82\x2f\x04\x36\xb9\xfb\x43\xc7\x71\xd4\x36\xde\x7d\xcd\x30\xb2\x1c\x86\x08\x1b\xf4\xb4\x63\x2e\x40\x7a\xa0\x0a\x20\x9a\x66\x54\xfa\xb9\x8f\x1f\x37\xfb\x47\x97\x97\xb7\x17\x47\xe7\xa7\xd1\x58\x7d\xfd\x99\xc3\x67\x48\xc7\x3d\xfe\x88\xe2\xf5\xbc\xb6\x58\x85\x81\xe9\x1c\x7a\x78\xc4\x39\x9a\x39\xc6\x5c\xc7\xbb\x95\x13\xdf\x65\xfa\xb9\xd6\xb0\x7a\x81\x4b\xb2\xd2\xd0\x25\x59\x1e\xba\x75\x7f\x73\x49\xaf\xf3\x12\x6b\xf1\xe5\xea\x6c\xb2\xb5\xba\xc1\x2e\xff\x8d\xeb\x3e\x09\x76\x62\xfa\xb1\x99\xef\x6b\x3a\x0c\x61\xc2\x87\xf0\xff\x03\x00\x00\xff\xff\x3b\xde\x78\x32\x20\x1c\x00\x00")

func _hardcodedTracingGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedTracingGo,
		"../_hardcoded/tracing.go",
	)
}

func _hardcodedTracingGo() (*asset, error) {
	bytes, err := _hardcodedTracingGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/tracing.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x60, 0xa1, 0xf4, 0x9c, 0x1f, 0x98, 0xc, 0xba, 0xdf, 0x86, 0xc3, 0x7e, 0x3a, 0x10, 0x91, 0x11, 0x7a, 0x4f, 0x50, 0xbe, 0x59, 0x4c, 0xa0, 0x3d, 0x2d, 0x87, 0xa4, 0x70, 0x24, 0xcc, 0x9d, 0x4a}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../_hardcoded/doer.go":       _hardcodedDoerGo,
	"../_hardcoded/middleware.go": _hardcodedMiddlewareGo,
	"../_hardcoded/tracing.go":    _hardcodedTracingGo,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//
//	data/
//	  foo.txt
//	  img/
//	    a.png
//	    b.png
//
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"..": {nil, map[string]*bintree{
		"_hardcoded": {nil, map[string]*bintree{
			"doer.go":       {_hardcodedDoerGo, map[string]*bintree{}},
			"middleware.go": {_hardcodedMiddlewareGo, map[string]*bintree{}},
			"tracing.go":    {_hardcodedTracingGo, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = os.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
