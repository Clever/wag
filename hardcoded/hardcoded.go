// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../_hardcoded/doer.go (10.01kB)
// ../_hardcoded/middleware.go (1.683kB)
// ../_hardcoded/tracing.go (6.825kB)

package hardcoded

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __hardcodedDoerGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x5a\xff\x6f\xdb\x46\xb2\xff\x59\xfa\x2b\xa6\x02\xee\x42\x26\x32\x29\xe7\xce\xb9\x83\xfa\x7c\x40\x6b\xbb\xaf\xc5\x6b\x93\xa0\x4a\x5f\x03\x04\xc1\x75\x45\x8e\xa4\xad\x57\xbb\xea\xee\x52\xb2\xe0\xf3\xff\xfe\x30\xb3\x4b\x8a\x94\x68\x27\x77\x57\x3c\xbc\x97\x1f\x2c\x89\x3b\xf3\xd9\xd9\xd9\xf9\xce\x6c\x44\x71\x2b\x96\x08\x85\x92\xa8\xfd\x70\x28\xd7\x1b\x63\x3d\x24\xc3\xc1\x68\xbe\xf7\xe8\x46\xc3\xc1\xa8\x30\xda\xe3\x9d\xa7\xaf\xa8\x0b\x53\x4a\xbd\xcc\x7f\x75\x46\xf3\x03\x6b\x8d\x65\x2a\x69\x72\x69\x2a\x2f\x15\xfd\x50\x66\x49\x1f\x6b\xe1\x57\xb9\x15\xba\xa4\x1f\x1a\x7d\xfc\xc8\x57\xde\x6f\xe8\xbb\xdb\xeb\x82\x3e\xbd\x5c\xe3\x68\x38\x1c\x8c\x96\xd2\xaf\xaa\x79\x56\x98\x75\x2e\x16\x78\x97\xaf\xf6\xce\x5b\x79\x77\xb6\x34\xf5\xd7\x51\x97\xaa\x34\xda\x6c\x85\x5e\xc9\x12\x73\xdc\xa2\xf6\xce\x54\xb6\x40\xa6\x32\x4a\xe8\x65\x66\xec\x32\xbf\xcb\x69\xd7\x78\x8e\xbc\xf0\x77\x51\x00\x65\x96\x4b\xb4\x30\x5a\x9a\xcd\xed\x32\x93\x3a\xbf\x52\xb8\x45\x9b\xdf\x8a\xfd\x16\xf1\x6c\x69\xb2\xed\xab\x3c\x10\x8d\x86\xe9\x70\x98\xe7\x50\x1a\xb4\x20\x1d\x08\x0d\x52\x7b\xb4\x0b\x51\x20\x2c\x8c\x85\x51\x69\xa4\x5e\x8e\x80\xa0\xc1\xe2\x6f\x15\x3a\xef\x60\x63\x9c\x93\x73\xb5\x87\x9d\xf4\x2b\xd8\x59\xb1\xd9\x48\xbd\x1c\xfa\xfd\x06\x23\x54\x03\x72\x3f\x1c\x5c\x9b\xa4\x80\xe7\x84\x90\x5d\xf1\x85\x8c\xc1\xc6\xdf\x3f\x06\xc4\x14\x92\xfa\xb7\xdb\x18\xed\x70\x0c\x7c\x05\xe9\xf0\x61\x18\x50\xcd\xe6\xb5\x58\xe3\x95\xbf\x03\xe7\x6d\x55\xf8\xfb\x07\x96\x7b\x2e\x1c\x46\x8c\x6f\x85\x2e\x15\x5a\xd8\xa0\x5d\x18\xbb\x76\xe0\x57\xc8\xeb\x1d\xd9\x03\x1a\x3d\xbe\x26\x39\x0f\x60\x8b\x4a\x17\x90\x94\xcd\x52\x0a\xff\x86\xd8\x74\x6a\x8b\xbe\xb2\x1a\xe2\xb5\x64\xd7\x26\xb1\xd9\x55\xb8\xab\x24\x1d\x43\x31\x86\x70\xbc\x3c\x07\x8b\xde\xee\x6b\xf9\xe9\x87\x44\x07\x17\x93\xf7\x5d\xad\x07\xd1\x99\xb6\x25\x3b\x6d\x55\xc2\xe1\x1f\xa9\x9f\x37\xb7\xfb\xb7\x46\xc9\x62\x0f\x3f\x1e\xbe\xc7\xfd\x5a\x4f\xa0\xc4\x85\xd4\xe8\x40\x04\x64\xd8\xf0\xe3\x2c\x6c\xd6\x26\xec\x5c\x69\x9e\xc3\xd7\xa2\xb8\x35\x8b\x85\x83\x70\xd0\xa0\x6f\x5d\xad\xe7\x68\x41\xe8\x12\xbc\x5c\x4b\xbd\x04\xb3\x88\xc0\xc2\x7b\x5c\x6f\xbc\xcb\x86\x83\x9a\x35\x49\xe1\xc3\x47\xf2\x92\xec\xba\xb2\xc2\x4b\xa3\x19\x99\x77\x05\x8b\x05\xca\x2d\x06\xdc\xb6\x22\xc6\x20\x1c\xec\x50\x29\xfa\xa4\x45\x8b\xae\x52\x1e\xcc\x82\xb9\x6b\x4f\x8c\x97\xf6\xcc\xc1\x2f\xd7\xe6\x17\x58\xa3\x5f\x99\x32\x1b\x0e\x18\x3d\xe9\xdc\xe3\x18\x1e\xb9\xc6\xb9\x31\x2a\xea\x6c\x26\xf5\x52\xe1\x53\x9a\xf3\x2b\xe1\x9b\xdb\x13\xb5\xb4\x60\x74\x81\x41\x9b\xa7\x10\x1d\x5b\xee\x51\xa8\xf0\xb0\x37\x15\xb8\x95\xa9\x54\xd9\x6c\x83\x0d\xf6\xb9\xc3\xc2\xe8\x12\xc4\xc2\x93\xd3\x79\x58\x08\xa9\x5c\x16\x8d\xf9\x64\xbf\x14\x1e\xd7\x7c\xcb\x64\x8f\x56\xee\xcf\xe1\x39\xf0\x93\x19\xef\xf6\xd0\xb6\x22\xd8\x49\xa5\xa2\x64\xda\xe8\xb3\xb7\x6f\x66\xef\xc6\xe1\xdb\x57\xef\xae\xbe\x3d\x84\x0c\x3e\xcc\xc5\xfb\xf7\x19\xb1\xbe\x7b\x73\xfd\x66\x0a\xdf\x79\xb2\x56\x07\xda\x78\x28\x2a\x6b\x51\x7b\xb5\xaf\xad\x45\xef\xc3\x25\xd4\xea\xc0\x12\xe6\xfb\x47\x2e\xf7\x89\x03\x87\xdb\xb6\xf8\x1b\x1c\xdd\xb8\x45\xb7\xe9\xbb\xf6\xf6\xd5\x93\x4e\xe4\x82\x9f\x7e\x71\x09\x5a\x2a\xf8\xc7\x3f\xe8\x44\xd9\x0f\x6c\x4c\x70\x79\x09\x23\x3a\xf0\xa8\xef\x39\x1d\x9f\x16\x86\x83\x01\xed\x95\xcd\xbc\xf0\x95\xbb\x32\x25\xc2\x7f\xc0\xc5\x64\x42\xe0\xb5\xc6\x17\x42\x39\x1c\x0e\x1e\x9a\x2b\xf0\xb6\xc2\xa8\xe6\x9b\xbb\x8d\xd1\xa8\xbd\x14\xaa\xd7\xfa\x34\xe0\x81\xa2\xe3\xc4\xc1\xea\x1e\xe1\x7f\xda\xf4\x16\x72\x4b\x51\x32\x3e\xe5\x28\xdf\xda\x45\x51\x34\x28\x2c\x0a\x47\x1e\xbe\x13\xd2\xb3\x7d\x38\x8e\xc8\xe8\x77\x88\xba\xb9\xf8\x29\x9c\x4f\x26\x63\x78\x49\x7f\xfe\x4c\x7f\xfe\x4a\x7f\x28\x40\x9c\xbf\x9a\x4c\x60\x2d\x95\x92\xc1\x8a\x1d\xbc\xc8\xcf\xa0\xda\x80\x37\x70\xf1\x07\xf8\x55\x7a\x8f\xb6\xbe\xda\xfe\x53\x7c\x86\x41\xc3\xf4\x12\xd6\xe2\x16\x93\xa3\xe5\x31\x5c\xa4\xc3\x81\xc6\x3b\xa6\x38\x9f\x4c\x6a\x23\xff\xe1\x20\xd1\x70\x60\x75\x49\xcb\x94\xec\xb3\xd7\xb8\x4b\xea\x2f\x33\xce\xc7\x09\x33\xbc\x36\xbb\x24\xcd\x7e\xd2\xf2\xee\xb5\xd0\x26\x49\xd3\x74\x38\x40\xe2\x9a\x64\x93\x0b\xc8\x73\x3e\xd6\x05\xe5\xa5\x02\xb5\x8f\xe7\x1a\x0e\x28\xbb\xca\x08\xbe\xe4\xb8\x5e\x5b\xc4\x07\xf9\x11\x2e\x81\x45\x7b\x01\x1d\xa1\x93\x24\xb1\xba\xcc\xbe\x51\x46\xf8\x57\x7f\x4e\xd2\xe7\x2f\xd3\xb3\xf3\xf4\x39\x3e\x5f\xc4\x27\xc4\x44\xfb\x87\x83\x3d\xbf\x84\x97\x6d\xab\xb2\xe8\xff\xcf\xfa\xee\x63\x17\xfc\xff\xdf\x81\x5f\x9b\xfe\xac\x11\x9c\x94\x12\xa4\xa6\xf2\x2c\x28\x8f\x1c\xaa\xc9\x1d\x31\x0b\x77\x01\x9e\x76\x5c\x0a\x07\xeb\x8d\xdf\x83\x53\xb2\xc0\x5a\xb9\x1d\x84\x7f\x31\x0b\x74\xc3\xbe\x50\x3b\xb1\x6f\xc5\x0b\x3a\xff\x23\xbb\xfd\xb3\x09\xb7\x25\x43\x50\x6b\x5d\x03\xb2\x82\x62\x09\xd5\x55\xc3\xcf\xd2\xaf\xda\x3a\x6a\xb4\x01\x1a\x77\x10\x2b\xe4\x60\xc6\x66\x8b\xd6\xca\x32\xd6\x15\xa1\x41\x00\x33\xff\x15\x0b\xff\xcc\x35\xc5\x58\x53\x06\xf1\x89\x8e\xe0\x93\xc2\xdf\xd5\xa0\x75\x49\x37\x86\x47\x4a\xae\xf4\x98\xb2\x5d\x1b\xc6\x15\xc2\xff\x6f\xa1\x2a\x24\xe4\x71\xe7\x9c\xf7\x0f\x1d\x64\xae\x18\xeb\x52\xf5\x79\x53\x0b\xfe\x1e\xc5\x6a\xbd\xc5\x18\xcc\x2d\x87\xa5\x43\xb5\x9a\x05\xe1\xba\x72\xa5\x59\xd2\x3e\x26\x3b\xda\x17\xe6\xb6\xf6\x8a\x46\x17\x97\x50\x66\xad\xdf\xec\x24\x4d\x66\xa1\x7d\x0e\x6b\xd9\xc1\x30\x87\x83\xad\xb0\x7d\x3e\x1e\x16\x1a\x3f\x1f\x72\xcd\x37\x13\x5b\xec\x14\x46\x73\x53\x52\x8e\x82\x82\xea\xff\x1d\xc2\x8a\x09\x4c\xd8\x2c\x83\x37\x7e\x85\x76\x27\xc3\x1a\x47\x41\x26\x10\xca\xa2\x28\xc9\x7c\x44\xc9\xb8\xdc\x42\x54\x8b\x05\x5a\x30\xba\x89\x6e\x65\x67\x2b\x66\xa7\xba\x2b\x83\x19\x22\xb3\x91\xc0\xd3\x3c\x77\x9e\x8e\xb3\x45\xbb\x50\x66\xc7\x7d\x1d\x73\x48\xa3\x5d\xfe\xf2\x4f\x93\xbf\x4c\xfe\xfa\x97\x57\x39\xed\x25\xf5\xf2\x8c\x24\x3e\x33\x8b\x33\xe2\x3d\x8b\xd8\x67\x94\x78\x4d\xe5\xcf\xd6\xa6\x94\x0b\x8a\x0d\xcd\x8a\xf3\xc2\x47\x5d\xcc\xab\x05\x7c\xf8\x48\x7d\x2d\xdf\x81\xcd\xbe\xa6\xc3\xc7\x78\x47\xb7\xd1\x55\xd8\x60\x30\xaf\x16\x21\x52\x5e\x42\xe8\x6d\xb3\x1f\x51\x94\x5f\x29\x95\x04\x5e\xca\x1f\xdd\xa8\x49\x28\xb5\xd1\x6a\xa9\x98\x7b\x38\xa0\x9b\x7c\x18\x86\x4c\x56\xd7\xbd\x94\xf6\xbe\xe4\xe8\xf7\x65\xfd\xec\xc5\x0b\xe6\xef\x15\x6d\x60\x4b\x4b\x3c\x51\x8e\xd7\x66\x73\xa5\x8c\x43\x9b\x70\x9b\x4e\x99\xf6\x6b\x56\x7f\x32\xaf\x16\x9c\xd7\x06\x11\xe3\x12\x6c\x19\x45\xe0\xe8\x5c\x1f\xa8\xcc\x4a\x6a\xb5\x42\x77\x15\x36\x8d\x92\x5d\x5e\x82\x42\x9d\xd4\xa6\x97\x52\xc8\xff\xa2\x6d\x7c\x31\xd3\x84\xcc\xc2\x78\x69\x90\x71\x6e\x51\xdc\xc6\xbd\xf2\x1c\x58\xc2\xba\xf1\x60\x9b\x0c\xe6\xc6\x86\x41\x06\xb2\x14\x52\xd7\x49\x83\x84\xcd\x98\x83\x6c\x7a\x10\xca\x68\x85\xb8\x69\x04\xf9\x10\x05\xfc\x98\x76\x53\x75\x94\x21\x46\xdd\x42\xda\xa2\x92\xfe\x6b\x12\x05\x2d\xf7\x7f\x72\xbd\x51\xb8\x46\xed\x63\x28\x0b\x14\x30\x0f\x24\xb0\xa1\x86\xcb\x6a\xce\xd9\x33\xf4\x50\xe2\xbc\x5a\x92\x0f\xd0\xe5\xd0\xa7\xd9\xa0\x15\x1e\x3b\xcc\x52\x83\x80\x35\xa5\xb8\xdd\x0a\x2d\x52\x4b\xc1\xf6\x6d\xb4\xda\x83\x32\xcb\x96\x28\xc0\x26\x18\x4a\x39\xa6\xa1\x52\x60\xae\x4c\x71\xcb\x05\x40\x53\x3c\x2c\xac\x59\xc3\xd2\x50\x62\xf3\x2b\x6b\xaa\xe5\x2a\xa6\xb5\x9e\x23\x3d\xd5\xd2\x06\xf9\xc3\x3f\xee\xcb\x06\x11\xe0\xb5\x58\x23\x71\x4a\xbd\x6c\x66\x1f\xfc\x2f\x7c\xcf\xfe\x8b\xc7\x1e\xdf\xf3\x0f\xd2\x26\xb9\x43\x64\x9d\xcd\x6e\xde\xe8\x02\xc1\xed\x75\x91\xd1\x37\xd6\xf5\xb7\x61\x26\x33\x9b\xdd\xdc\x6c\x29\x3b\x48\x07\xb8\xa6\xaa\x8d\xcb\x98\xc3\xf0\x06\xb6\x52\x80\x43\xbb\x45\x7b\xe6\x88\x30\x8c\x6a\x32\x2e\x8e\xd0\x15\x56\xce\x43\x4d\x4c\x1a\x66\x6d\x51\xb2\x17\xf5\xe6\x51\x0d\xc7\xbb\x1d\x74\xf0\x8e\x96\x9f\xf8\x17\xce\x0c\xbf\xfc\xea\x8c\x9e\x8e\x08\x6c\xf4\xcb\x70\xc0\xea\xf8\x6c\x2e\x2d\xd6\xcc\x15\x93\xc4\x95\xa9\xb4\xef\xe3\x92\xe1\x71\xe4\xb2\x2d\x6a\xe2\xbe\xa1\xc8\xf2\x28\xef\x31\x37\x36\xd4\x0d\xef\xdb\x50\x1c\x8b\xe5\xa9\xe8\x3d\xbc\x07\x6a\x02\xf8\xce\x5d\x75\x2c\xe9\xcd\x06\x75\x1b\x80\x6b\x8a\x06\x40\xf6\x50\xb3\x02\x8c\x52\x52\x2f\x59\xac\x6f\x84\x54\x95\xc5\xa7\x14\x70\x4a\x7d\x0a\xa2\x14\xf9\x78\x1b\xec\x29\x90\x0e\xf5\x63\x60\xb3\xaa\x28\xd0\xb9\xcf\x04\x8b\xd4\xc7\x60\xb3\x95\xb1\x3e\x6a\x01\xcb\x4f\x1d\xaf\x4b\x7d\x82\xd5\x12\xe8\xd3\xaa\x7a\x44\xa0\x77\x2b\xca\x82\x6f\x8d\x51\x3f\x22\x15\x62\x24\xd4\xe3\x20\xa7\xd4\x27\x78\x72\x8d\xa6\xf2\x9f\x29\x54\xa4\x26\x90\xab\xd0\xc9\x5c\x19\x1d\x7b\x9a\x9b\x3b\x2c\x2a\xca\xd8\xc1\xb8\xbb\x20\xc5\xd3\xd4\x04\xf8\xbd\xf0\xa8\x8b\xfd\x3b\xe3\x85\xfa\x01\x85\x7e\xda\xb8\x55\x8b\xfa\xef\x6b\x14\x64\x98\x75\xbd\xa7\xcc\x92\xe3\x43\xa2\xfa\xe2\xda\x18\x4e\x02\x09\x27\x2f\x95\x7d\xa7\x17\xe6\x3a\xc1\x8c\xc2\xc2\x18\xd6\x62\xf3\x21\x04\x80\x8f\xcd\x3c\xef\xfe\x81\xb2\x5c\xd7\xa7\xa7\x7d\x5e\x8c\x59\x3b\x4a\x8c\x89\xa9\xe5\xca\xbd\x2c\xc4\x74\x08\x0e\x07\x96\x96\x07\x9f\xf2\x45\x96\x03\x0d\xf3\xf5\x3a\xee\xb4\xcb\xd7\x17\x0a\x98\xb9\xcf\x5f\xa7\xc7\x87\x3b\xa5\xe9\xe1\xed\xba\xe9\xb4\x97\xb7\x43\xf3\x28\x46\xed\x0c\x4f\x61\x44\x9a\x13\x8c\x23\xa7\x9c\xf6\x9d\xa1\x4b\x73\x0a\xd1\xd9\xbe\x5f\x0d\x8f\x6d\xdf\xe3\x82\xd3\x63\xde\x53\x9a\x53\x98\xe8\x79\x4f\x89\x10\x69\x98\xf7\x53\x0e\x37\x05\xcc\x3e\xe1\xc2\x8c\xa3\x8e\xbc\xf2\xd4\x06\x31\x3b\xf6\xdc\xf1\x70\xf0\x90\x0e\x3b\xed\xd7\x69\x01\x93\x82\xd4\xd2\x27\x69\x1c\x91\xbf\x45\x2b\x4d\x29\x0b\x9e\x98\x29\xb3\x0c\x33\x74\x2d\x54\xb7\x86\xa2\x62\x4c\x38\x27\x1d\xd7\x5f\x0e\xbd\xe7\x52\xa6\x55\x6a\xf9\x95\x45\xb7\x32\xaa\x74\x5c\x6e\x55\xba\x44\xeb\xbc\xd0\x25\x8f\x0b\x36\x1b\x25\x8b\xd0\xbe\xcf\x71\x25\xb6\xd2\xd8\x8c\xd9\x7f\xd2\x0b\x63\x7d\xa5\x85\x47\xb5\x1f\xb7\x2b\x97\xd2\xa0\xd3\xcf\x7c\x6c\x7b\x60\x69\x51\x78\xd8\x89\x3d\x89\x82\x77\x9b\x50\xe0\x4a\xc7\x28\xa5\xf0\x62\x0c\xce\x50\xaf\x64\xd1\x19\xeb\xb9\x8a\xac\xac\xe6\xf9\xbe\x06\xe9\x1d\xb8\x6a\xc3\xaf\xd8\xa8\x17\x98\x5b\x23\xca\x42\xb8\x93\x63\xac\xa9\xd2\x2d\x1c\xd7\x4d\x3c\xd1\x3f\x2d\x9e\x20\x99\xcd\x6e\xd2\x20\xfe\x0c\xc3\xe0\xdf\x4d\xf3\xfc\x89\x57\x68\xd2\xb9\x0a\x5d\x7e\xf1\x2a\x6b\x4a\xc2\x58\xd7\x51\x27\x40\xb7\x15\x2e\x64\x10\x79\x66\xde\xa2\x58\xd7\xaf\x5b\xa6\x97\xb5\x5e\x78\xae\xd7\x5e\xe3\x8a\xbd\x8f\x29\x9b\x79\x61\x3d\x2f\x2b\xe9\x3c\x6a\x0e\xc0\x96\xc1\x34\xfa\xec\x7b\x7e\x98\x8c\x7c\xb1\x19\x8d\x61\x74\xfe\xf2\x2f\xd9\x24\x9b\x64\xe7\xd3\xc9\xe8\x91\xde\x6a\x23\xb4\x2c\x12\x6a\x39\xb8\xcf\x18\x0e\x06\x4b\xc3\x67\xcf\x66\xa4\xa2\xe4\xb0\x4d\x9f\x3c\x69\xa0\x6f\x1d\x95\xd4\xf7\x33\xb2\xcd\xe1\x16\xed\x1e\xce\x27\x50\x4f\x59\xe7\x58\x88\x2a\x76\x30\x84\x86\x56\xde\x35\x57\x23\x2c\xd2\x95\x0a\x38\x9f\x9c\xd5\x43\x50\x46\x8b\x7e\x0b\x3b\xa9\x4b\xb3\xcb\xe0\xdd\x4a\x3a\x50\xe8\x9f\x39\xa8\xe8\xfa\xd7\x3c\xb9\xed\x83\xf4\x06\x96\xc8\xaf\x26\xac\xda\x47\x34\x51\x14\x55\x68\x3e\xc8\xbf\xe2\x6b\x23\x07\x89\x36\xdc\x90\x08\xcf\xe6\x07\x92\x8d\x74\x83\x76\x81\x85\x6f\x04\x37\x95\x8d\x6f\x97\x22\x5a\x6d\xcd\x91\x50\xed\x61\x2d\x7c\xb1\x6a\x44\x79\xe6\x62\x9b\x42\x2d\xbe\x33\xac\x96\xdd\x0a\x75\x5f\xdf\x14\x21\x1d\x0f\xfb\xa0\x58\x09\xbd\x44\xc7\x9d\xa7\x32\xcb\x6f\x38\x49\xea\x62\x1f\x66\xc6\xdd\xf7\x22\x4c\x23\x9c\xe7\xec\x3b\x43\xd4\x61\xf4\xdc\x24\xdc\xa3\xfc\x7c\xff\xd0\x61\xf8\xde\x2c\x29\xd4\x1d\xf1\x30\x3c\x3d\xbf\x67\xa3\xe0\x56\xfb\xef\x50\xcf\x8c\xe3\x6a\x71\x9b\x1c\xbd\xa2\x49\xe1\x1e\x9a\x51\x96\xd4\x3c\x73\x94\x14\x04\x08\x63\x50\x59\x45\xdb\x8c\xe2\x98\x62\x04\x2f\xa0\xb6\xaf\xec\xab\xb2\xb4\x49\x9a\xcd\x78\x7b\xb6\x70\x6a\x64\x7f\x6b\xcc\x9b\x6d\xf2\x35\xee\x62\x25\x90\x8c\xfe\xf3\xe6\xdd\x68\x0c\x95\x55\x63\xb2\xe6\xc0\xd0\x63\xe0\xac\xbe\xec\xad\x95\xda\x2f\x92\x50\x03\x40\x61\xb4\xc6\xc2\x73\x67\x68\x9a\x7b\x98\xcd\x6e\xa8\x47\x41\xb1\x9e\xc2\x1f\xdc\x28\x34\xe2\x01\xa2\x30\xda\x4b\x5d\x21\xff\x62\xf5\x0d\x02\x65\x23\x5e\xeb\x65\x79\x36\xab\xe6\xa1\x07\xfb\x59\xfa\x55\x32\x1a\x8d\xe1\x8f\xad\xf9\x58\x18\xac\xfd\xf6\xbf\x2e\x30\xdd\x20\x6e\x0f\x73\xff\xc0\x99\xdd\x84\xe8\x17\xb7\xe6\x89\xcd\x71\x41\x17\x96\xa2\xa8\xd3\x4b\xa0\x9a\x31\xfb\x49\xaf\x85\x75\x2b\xa1\x92\x30\x02\x4a\x70\x9b\x5d\x0b\x2f\x92\x34\x1d\xc3\x1f\x31\xfd\xb2\xe7\x60\x5d\xb1\xa2\x5c\x0c\x9c\x71\xcb\xf9\xc5\x25\x8c\xe2\xde\x57\x66\xbd\x16\xba\x1c\x3d\xcd\x4a\x46\x4c\x06\x5f\x8f\x0e\x3b\x5e\xf0\x21\xd4\x9e\x1f\x0f\xa4\x27\x4b\x70\x09\x38\x0c\xeb\x79\xce\xde\xd9\x76\xcc\x90\x23\xe5\x02\x24\x05\x1b\x94\x7e\x15\xbc\x94\x89\x93\xf3\x94\x89\x17\xd2\xba\x98\x43\x60\x87\xcf\xb6\x08\x8e\x3c\x90\xb4\xdd\xc6\x32\x2d\xce\x97\x69\x77\x89\xda\xc6\xb0\xd7\x4a\xd4\x9e\x5f\x76\x38\xfe\x94\xb6\xe3\x28\xe7\xce\x8d\x70\x0e\x4b\x70\x52\x17\x3c\x4c\xe4\xda\xbc\x04\x67\xd6\xe8\x57\x64\x28\x47\x12\x34\xba\xae\x47\xa5\x83\x9e\x20\xd0\xd2\xcb\xe1\x0d\x53\x4d\x5b\xf7\x01\x65\xa6\xea\xd2\x3f\xfd\xc4\xbd\xd6\xf7\xd3\x5b\x1f\xd3\x75\xf7\x57\xce\xbf\xb7\x7c\x0f\x80\xca\xf1\x4d\xb6\xde\x9b\xcd\xaa\x79\xf2\x18\x7e\x0a\x7f\x83\x4e\xd4\xfd\xbd\x05\x3a\xf8\x25\xfd\x79\x20\x9e\x87\xf4\x93\x35\xde\xbf\x39\x6b\x97\x0b\x28\xb3\x30\xcd\xba\xef\x4c\x2f\xa7\x27\xe3\xcb\xba\x32\xb9\x36\x49\x99\xb5\xc6\x5d\xe3\x3a\xd7\x87\xb8\xc4\x6a\xe9\x8b\x61\x71\x98\x18\xa6\xb5\xe1\xa0\x3c\x11\xed\xbe\xcd\xfa\xdb\x65\xf3\x3a\x6b\x10\xfe\x07\x05\x96\x71\x58\x4e\xdc\x42\xc7\x6d\x78\x76\x28\x79\xbe\xd6\x76\x9a\x98\x87\x5b\x9b\x19\xcb\xa3\xdb\x64\x74\xf1\xfe\x3d\x57\x3c\x61\xeb\x8e\x34\x0f\x4d\xbe\x38\x99\x78\x72\x01\xf4\x99\xe3\xff\x41\x18\xfb\xfe\x13\x8a\x7a\x7a\x5a\xfc\xc8\xd0\xbb\x99\x77\x7f\x4a\x7f\xff\xb2\xfa\x9e\xd0\xde\xc3\xb0\x2b\x47\x50\x1d\xe4\xcf\x41\x1b\x58\xc4\x4e\x91\x0f\x1a\x5e\x6c\xef\xd1\xc3\xf3\x3c\xed\x9d\x25\xff\x4f\x00\x00\x00\xff\xff\xd8\x75\x91\x7e\x1a\x27\x00\x00")

func _hardcodedDoerGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedDoerGo,
		"../_hardcoded/doer.go",
	)
}

func _hardcodedDoerGo() (*asset, error) {
	bytes, err := _hardcodedDoerGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/doer.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe0, 0x75, 0x77, 0x21, 0x5c, 0xa9, 0x5f, 0x84, 0x6f, 0x23, 0x76, 0x3b, 0x93, 0x3e, 0xa4, 0xa0, 0x45, 0xe0, 0xc, 0x3, 0xdf, 0xce, 0xd5, 0x94, 0xb0, 0x11, 0x19, 0x78, 0x4f, 0x65, 0x73, 0x16}}
	return a, nil
}

var __hardcodedMiddlewareGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\xcd\x6e\xe3\x36\x10\x3e\x5b\x4f\x31\x65\x11\x84\x5a\x38\xf2\x1e\x8a\x1e\x02\xf8\x50\xa4\x9b\xe6\xb2\xc0\x62\x13\xb4\x05\x8a\x02\xcb\x50\x23\x89\xb0\x4c\xaa\xc3\x91\x55\x23\xf0\xbb\x17\x43\x49\x4e\x14\xa4\xe9\xa9\x07\xcb\xe4\xcc\x7c\xdf\xfc\xb3\x33\x76\x67\x6a\x84\x88\x74\x40\xca\x32\xb7\xef\x02\x31\xe8\x6c\xa5\xaa\x3d\xab\x6c\xa5\x3c\xf2\xa6\x61\xee\xe4\x4c\xbd\x67\xb7\xc7\x4d\x89\x8f\x7d\xad\xb2\x6c\xa5\xea\xd0\xed\xea\xc2\xf9\xcd\x4d\x8b\x07\xa4\xcd\xce\x1c\x0f\x88\x57\x75\x28\x0e\x3f\x6e\xda\x50\xd7\x48\x2a\xcb\xb3\x6c\xb3\x81\x2f\xc6\x3b\xfb\xd9\x95\x65\x8b\x83\x21\x84\x36\xd4\x11\x8c\x3f\x42\x27\x8a\x58\xc0\x6d\x20\xf0\x61\x58\xc3\x80\x97\x84\x60\x83\x67\xe7\x7b\x04\x6e\x28\x0c\xce\xd7\xc0\x0d\x8e\xc6\xd0\x77\xc2\x28\xf7\xc8\xc6\xee\x20\x06\xe0\xc6\x45\xd8\x9b\x23\x58\x32\xb1\x19\x6d\x29\x58\x8c\xb1\xc8\xaa\xde\xdb\xd7\xfe\x75\x03\x92\x56\x71\x67\x7c\xd9\x22\xe5\x8b\x1b\x3c\x65\x2b\x42\xee\xc9\x2f\xc4\xb7\xbd\xb7\x5a\xc8\xf4\x30\xca\xbf\x62\xec\x82\x8f\xf8\x1b\x39\x46\x5a\x03\xc1\x87\x49\xfe\x57\x8f\x91\x73\xe1\x59\x95\x58\x21\x41\x82\x8d\x82\x55\x4a\xe2\x13\x11\x5c\x6f\x81\xd0\x86\x03\x92\xce\x45\xe1\x2a\x38\xeb\xb6\x5b\xf0\xae\x1d\x01\x53\x30\x72\x3c\xc9\xe7\x60\x08\x90\xd2\x2f\x50\x26\x92\x38\x38\xb6\x0d\xbc\x64\x9e\xcf\x85\xe6\x63\x87\x93\x6b\x6b\xa2\x14\x8d\x9c\xaf\xaf\x13\xb3\xd0\x6c\xa1\xda\x73\xf1\x49\xc8\x2a\x3d\xc3\xf2\xb3\x79\xf2\xf2\xd2\x7a\x36\x11\x51\x89\x95\xe9\x5b\xfe\x17\x32\xd5\xfb\x9d\x0f\x83\x9f\xfa\x76\xf1\xfd\x01\x42\x05\x12\x0f\x5c\x3c\xa8\xf5\x99\xe9\xf9\x94\x8f\x49\xca\x77\x9c\x9f\xe2\x96\xc2\xfe\x26\x78\xc6\xbf\x59\x53\x31\x9f\xf2\x7c\xf4\xf1\xb3\x56\x09\xaa\xd6\x29\x82\x09\xf3\xf9\x49\x21\x91\xba\x96\xd8\xd7\xa0\xd2\x94\x30\x19\x8b\xea\x7a\xca\x5e\xa7\x21\x2e\xee\x45\xa3\xf3\xfc\x94\x9f\x1b\xb3\xa8\xc0\x29\x35\xa6\x29\xee\x65\x41\xee\x1e\x1e\xbe\xe8\x61\x0d\xa2\x39\xe5\xd9\x29\xcd\x75\x64\xc3\x7d\x5c\x4e\x02\x0c\x64\xba\x08\x06\x68\x12\xc3\x90\xe4\x59\xca\xfc\x4d\x44\x64\xea\x2d\x4b\x93\xde\x98\xac\x6c\x35\x62\xc0\x79\x16\xb7\x69\xa0\x75\x84\x0f\x6f\x51\xe5\x90\xfe\xef\xd0\x94\x48\xda\x86\x12\x05\x96\xfa\x1f\x8b\x89\x67\x0b\x22\x17\xc1\x12\x5b\xbc\x86\xce\x59\xfe\x8a\x14\x5d\xf0\x5f\x8d\xaf\x11\x4a\xb4\xae\xc4\x08\x43\x83\xdc\x20\x01\x07\x30\xd6\x62\xc7\x60\xe0\x30\x1a\x16\x63\xaa\x0b\x58\x5a\x81\x49\x3f\x75\x21\x87\xc7\x10\xda\xe4\xe1\xa6\x75\xe8\x79\x02\xdc\x34\x68\x77\x2f\x1e\x0b\x2b\xf7\x98\xb6\xda\x26\xbb\x67\x3f\xa9\x16\xef\x81\x5f\x6d\xfa\x1a\xc8\xd7\x8b\xc0\xfe\xc7\xdd\x9f\xb3\x95\x45\x2f\xc6\xb2\x16\xbf\x20\x6b\xf5\xfb\xd5\x18\xf2\xd5\x14\x88\x92\x31\xfb\xaf\x81\xff\xa9\x2c\xe7\x9b\x1a\xcb\x70\x35\x39\x50\xeb\xb9\x20\xc2\xe3\x2a\xf8\x8e\x7c\x3d\xd7\x7a\x5a\xfd\x61\xd1\xdc\x1f\x3e\x7e\xcc\x5f\x48\xf5\x1f\x7f\x3e\x1e\x19\xb5\xec\xee\x7d\x47\xce\x73\xa5\xbf\x3d\xa9\x3d\xc6\x68\x6a\xd9\x1a\xb5\xac\x3b\x5c\x5e\xc4\x4b\xf0\x81\xa7\xce\x63\xb9\x86\xae\x45\x79\x2e\xfa\xae\x26\x53\xa2\x3a\x7d\x7b\x0e\x2a\x4f\xbe\xce\xaf\xd8\xe9\x9d\x9d\xfa\x27\x00\x00\xff\xff\x64\xba\x96\x25\x93\x06\x00\x00")

func _hardcodedMiddlewareGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedMiddlewareGo,
		"../_hardcoded/middleware.go",
	)
}

func _hardcodedMiddlewareGo() (*asset, error) {
	bytes, err := _hardcodedMiddlewareGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/middleware.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x17, 0x73, 0xff, 0x36, 0x5d, 0xfe, 0x40, 0x7c, 0x33, 0x99, 0xc8, 0x19, 0x37, 0x47, 0x59, 0x51, 0x96, 0xb, 0x22, 0x81, 0x1c, 0x7d, 0xe4, 0x3, 0x2f, 0x2d, 0x3c, 0x2d, 0xc5, 0x23, 0x70, 0xb8}}
	return a, nil
}

var __hardcodedTracingGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x58\x6d\x4f\xdc\xba\xb6\xfe\x3c\xf9\x15\x6b\x8f\xc4\x26\xa9\x82\x03\xbb\x2d\x77\x8b\x2d\x3e\x50\xa0\xed\x48\x85\x8d\x0a\xf7\x6e\x5d\x5d\x5d\x55\x9e\x64\x4d\x62\x91\xb1\x73\x6c\x67\x5e\x36\xe2\xbf\x1f\x2d\xdb\xc9\x4c\x60\xe0\xd0\x73\xfa\x81\x4e\x6c\xaf\x17\x3f\x59\x2f\xcf\x4a\xc3\xf3\x7b\x5e\x22\x58\xcd\x73\x21\xcb\x28\x12\xf3\x46\x69\x0b\x71\x34\x1a\xe7\x4a\x5a\x5c\xd9\x71\x34\x1a\xa3\xcc\x55\x21\x64\x99\x4d\x85\xe4\x7a\x3d\x58\xaa\x70\x45\xcf\xb3\xb9\x3b\x29\xd1\x66\x95\xb5\x0d\xfd\x56\x86\xfe\x1a\xab\x73\x25\x17\xf4\xd3\x8a\x39\x8e\xa3\x68\x34\x2e\x15\x53\x0d\x4a\x8b\x35\xce\xd1\xea\x35\x13\x2a\x23\x73\x5a\x4c\x33\x21\x8d\xd5\xed\x1c\xa5\xe5\x56\x28\x99\x95\xc2\x56\xed\x94\xe5\x6a\x9e\x95\x4a\x8b\xba\xe6\xd9\xbc\x5d\x65\xca\x62\x3d\x6f\x9d\xe9\x9f\xd1\xd6\xf9\xe7\xe4\x3b\x47\x5f\x53\xd0\x68\xd5\xf0\x92\x5b\xa5\x4d\xc6\x97\x26\x5b\x69\xbe\x7e\x49\x86\x74\xbe\xb6\x97\xe1\x8a\xd0\x45\x6d\x32\x65\xeb\x17\x4d\xbb\xa3\x9d\x5d\xa1\xe4\x38\x1a\x99\xe2\xde\xcb\xd2\x8b\x42\x78\x59\xcc\x14\xf7\xc1\x4a\xe6\x8e\xbe\x6a\xe3\xe9\x61\xff\xd7\xa2\xb1\xde\xe4\x5b\x8c\xfd\x6b\x2b\x5b\x27\x9a\xfb\x92\x09\x99\x9d\xd7\xb8\x40\x9d\xdd\xf3\xf5\x02\xf1\xa0\x54\x6c\x71\x9c\xd5\xaa\x2c\x51\x8f\xa3\x24\x8a\xb2\x0c\x36\xa8\x83\x55\xd0\x1a\x64\xd1\x82\xeb\xed\xe5\x2d\x7c\xd8\x1d\xae\xec\x15\x6f\x6e\x36\xbb\xa7\x83\xfd\x6b\x5c\x9e\xab\x79\xa3\x8c\xb0\xf8\xec\x6c\x1c\x8d\x06\xba\xc8\xdb\x73\x1f\xfa\x0f\x8f\x29\x64\x99\x4b\x0e\x6c\xb8\x46\x69\xa1\x42\x5e\xa0\x8e\x46\x14\x06\x6c\xa3\x84\x4e\xf6\xff\xb2\x0c\x56\x07\x7c\xfe\xb7\x3c\x70\x92\x07\xa2\xe8\xc4\xfc\xe5\x0a\x9c\xf1\xb6\xb6\xe7\xaa\xae\x31\xb7\x4a\xdf\x50\xc6\x2d\xb9\x81\xbc\xe2\xb2\xc4\x02\x66\x5a\xcd\xe1\xe3\xc7\xdf\x8f\x0f\x41\x48\xb8\x56\x0b\x9c\x4f\x51\x03\x97\x05\xd8\x0a\xe1\x8b\x82\x5a\x4c\x35\xd7\x6b\xd2\x56\x71\x23\xf7\x2d\x4c\x11\x25\xb4\x4d\xc1\x2d\x16\xb0\xac\x50\x82\xb0\x20\xcc\x66\x09\x21\xe7\x92\xa0\x04\x8a\x3d\x76\xb1\xc3\x09\x87\xf1\x4e\xef\x5a\x21\xed\xd1\x31\x9c\xc2\x87\xf7\x47\xff\xe5\x2e\x71\x8b\xb6\x6d\xbe\xd4\x6a\xca\x6b\x07\xd9\x8d\x56\x0b\x51\xa0\x3e\x93\xc5\x65\x88\x72\x30\x68\xc9\x01\xe0\x12\xba\xc8\xa7\xd7\xe9\x7f\xa7\xa4\x85\x1b\x58\x62\x5d\xd3\xff\x74\xb3\x41\x00\x41\xe9\xb4\x7b\xf8\xe9\x7d\x3a\xfd\x30\xa3\x98\x70\x4b\x25\x4a\xd4\x2e\x33\xfb\x20\xc9\x32\xb8\xab\x70\x63\x8d\x20\xeb\x25\xb9\x46\xd0\x68\x5b\x2d\xb1\x20\x60\x95\xee\xf5\x55\x84\x4e\x5d\x7b\xff\x0a\x9c\x91\xf3\x55\x6b\x0b\xb5\x94\x2c\x9a\xb5\x32\x7f\xcb\x7d\xe3\x04\xe2\x61\xa2\xb2\xdb\x86\xcb\x6e\x3b\x85\x77\x5d\x4e\xf9\x28\xd3\x9d\x8e\x14\x50\x6b\xa5\x13\x78\x88\x46\x59\x06\x47\x8c\x90\x23\xe0\xba\x7b\xb8\xe5\xdf\xfa\x65\xa7\x43\xf7\x17\x73\xbb\xef\x19\x70\x63\x44\x29\x07\xb0\x6d\x1d\x72\xa7\x26\x33\x58\xe2\x3e\xe1\xd0\x4a\x29\x64\x09\xb5\xa2\x7b\xaf\x53\x82\x40\x02\x61\x03\x6a\x36\x03\xc3\xe7\x4d\x2d\x64\xc9\xe0\x4f\x5b\xa1\x5e\x0a\x83\x7e\x0d\xbd\x87\x7b\xa0\x34\x2c\x2b\x6e\x29\x91\xe1\xee\xfb\xd9\xf9\xe4\xfa\xcb\x8f\xdb\xb3\xab\x9b\x6f\xf4\xe3\xe6\xfb\x9f\x9f\xce\x3e\x4d\xbe\x4d\xee\xfe\x17\x4c\x83\xb9\x98\x09\x34\x2c\x1a\x75\x6a\x6f\xb4\x9a\xf2\xa9\xa8\x85\x5d\xc3\xc9\x29\x1c\xb2\xc3\xa3\x68\x24\xcc\x37\x72\x86\x16\x94\x61\x5f\xd0\xa2\x5c\xc4\xe3\x1f\x93\xdb\x1f\xdf\xfe\x3c\x3f\xfb\x36\x4e\xe0\xf4\x14\xc6\x56\xb7\x54\x4c\xc4\x0c\xba\xf3\x0f\xd1\x68\xa7\xe2\x53\x38\x62\x87\xd1\xe8\x11\xb0\x36\x08\x62\x06\x8b\x27\xaa\x5f\x73\x7b\x9c\xfc\x01\x0b\xf8\xe5\x14\xc6\xe3\x97\x0c\x7c\xd6\x6a\x7e\x29\x17\xee\xe5\x91\xe6\xd0\xe8\xd8\x0d\xd7\x06\x3f\xd7\x8a\xdb\x78\x91\xc2\xf1\x87\x24\x1a\x91\xbb\x74\xea\x97\x53\x90\xc2\x7b\x3c\xf2\x91\x48\xcf\xa9\xff\x33\x9b\x5b\x76\x49\x71\x30\x8b\xc7\xb9\x6a\xeb\x02\xa4\xb2\xd0\x90\x36\xd8\xdf\x33\xfb\x14\x9a\x42\x5a\xa4\x32\x99\xc2\x82\xd4\x3e\xbe\x78\xf5\x97\xfd\x8d\x46\x8f\x3e\x16\x2e\x17\xa8\xd7\x70\xf4\x11\x0c\xe6\x4a\x16\x94\x89\xfb\x35\xc5\xcd\x9a\x2c\xe5\x4a\x4a\xcc\x2d\xfd\x1c\x66\x65\xde\x15\x06\xe0\xd6\xe9\xa1\xe4\x09\x45\xc3\x85\x13\x95\x51\x50\x33\x1f\x5a\x95\x32\xf6\xc4\x15\x0d\x3a\xfa\x17\x05\x59\x17\x7a\x42\x52\x70\x16\x6d\xee\x04\x6c\x25\x0c\xd5\x2b\x0e\x46\x14\x98\x73\x9d\xba\xe4\x5d\x6e\x49\x38\x15\x21\x60\xb7\xce\x77\x2b\x9d\x5e\xd5\x60\xef\xed\x41\xef\x2d\x8b\x46\xd8\x27\x62\x78\x63\xae\x10\x5e\xe3\xb2\x4f\xe0\x68\x34\x0a\xac\x87\x7d\xe2\xf9\x7d\xa9\x55\x2b\x8b\x38\x49\xa3\xd1\xc8\x9d\xfd\x4b\xd8\xea\xac\x28\x34\x1a\x13\xd3\xeb\xba\x6d\xb4\x90\x76\x16\x8f\xf7\xcc\xc9\x5e\x31\x4e\x77\x97\xd6\xaf\xca\xd8\x74\x67\x5d\x4d\x86\xaa\xbf\x63\x40\x5d\x28\x79\x83\x5a\xa8\x22\x3e\xfa\xf8\x8e\x58\x13\xbb\x75\xef\x68\x78\x7c\x22\x0d\xe6\xad\x46\xe7\x60\x12\xed\x08\xb2\x57\x63\xcc\xd5\x1c\xc8\x35\x72\x4b\xb0\x75\xe8\x9c\xc0\xde\x62\xec\x20\x4a\x7c\xa8\xd8\x86\xb0\x92\xb8\x1c\x16\xad\x78\x03\xe7\x8e\x60\x4b\xa2\x11\x35\x7f\x76\x8b\xf6\x89\x98\x6d\x92\xa8\x73\x6c\xa3\xc2\x36\xce\xc3\xe8\xf1\xad\xcd\xe5\xb3\xd2\x77\x68\x5c\x8b\x9b\x23\x97\x2e\x50\xa7\x48\x5d\xc0\xd5\xf6\x56\x0a\x0b\xc4\x64\x84\x2c\x7d\xa7\x91\x05\xcc\x05\x5d\xd9\xb7\x1a\x43\x26\x80\x4f\xd5\x02\x5d\x0b\x50\xad\xa5\xc0\xa3\xc0\xdd\x96\x65\x30\xb1\xa1\x69\x18\xea\x63\x42\x1e\xcc\x71\xae\x7c\xeb\xed\xdb\x0c\x29\xc0\x15\x9f\x0b\x17\x80\xa1\x2f\x61\x01\xa6\xe1\xd2\xbc\xbd\x81\x84\x3b\x51\x1f\x79\xd7\x53\x31\x36\x91\x57\xce\xe2\xcf\xf5\x91\xde\xb7\x93\x53\xd8\xe8\xba\xc6\xe5\x53\x75\x71\xf2\x96\x57\x7c\xc4\x0e\xff\x83\x57\xea\x00\x78\x59\x3d\xbc\xda\x35\x77\x15\xb8\x19\x95\xd7\xe3\x0f\xc9\x8b\x50\x10\x04\xc1\xa3\xfe\xc4\xf5\x33\x07\xa8\x7c\x76\xbb\x94\x51\xe7\x4a\xce\x44\x19\xf7\x6b\xfe\xd9\x95\xeb\xc9\xc5\x97\x8e\x6e\x9c\x6c\xa8\x9e\xa3\x81\x04\xea\x66\xd7\x97\x8b\x51\x28\x02\xb7\xae\x69\xf6\x22\xbd\xe6\x1b\x47\x27\x3f\x71\x83\x45\x3c\xbc\xc2\xe4\xe2\x3b\x95\xd0\xb0\xb5\x23\xb3\xbc\xfe\x2b\xbe\xba\x5c\xa0\xb4\xe6\x06\x35\xe1\xe5\x2d\x1c\x1d\x1e\x76\xbb\x67\x96\xe6\x97\xd6\xe2\xe6\xc4\xd6\xee\x37\x21\xef\x87\xa2\xdd\xee\xa3\xd3\x3f\x80\xe5\x76\x2d\xf3\xad\xd7\xe5\xcb\x8d\xcf\xd4\xab\x76\x75\x8b\x7a\x81\xfa\x4a\x14\x45\x8d\xcb\x0d\xc7\x32\x30\xdf\x2c\xd9\x8a\x5b\x30\x95\xeb\x6a\x53\x04\x6e\x2d\xcf\x2b\x2c\x28\x69\x39\x6c\x8d\x75\x60\x9c\x32\x47\xe4\x26\x16\x0a\x85\x06\xec\x52\x51\xb5\x97\xa5\x39\x01\x63\xb9\xb6\xc6\xe7\x95\x6f\x10\xbc\x28\xfc\xb3\x9f\x33\x40\xc8\x99\x22\xb5\x94\xe3\x1a\xff\xd1\xa2\xb1\x07\x81\x82\xe4\xe0\x87\x8c\x90\x90\x3b\x5c\x8f\xc9\xbc\xc8\xf1\x9a\xcf\x91\xfa\xb9\x90\x65\x02\x74\x38\xa6\x51\x91\x7d\xe5\xb2\xa8\x51\x27\xb0\xfd\x44\x91\xa6\x2c\xcd\xa2\xbe\xa5\xb8\xb1\x94\xed\xd6\x99\xf6\xfb\x04\xeb\x66\x7c\x30\xf1\x66\xb2\x49\x36\xb9\xe4\x2d\xc3\xeb\xb6\xbb\xc3\xde\x87\x81\xa3\x9f\x49\xde\x29\xd1\x4b\x2f\xf7\x1d\x4d\xa3\xa4\xc1\xbf\xb4\x70\xb9\xa5\xe1\x5d\x58\x77\x48\x25\x9e\x9a\x64\x59\xe7\x27\x4d\x17\x80\x2b\x82\x96\xea\x99\x2b\x9c\x0d\x97\x0c\xa4\x5a\x42\xd3\x5a\x37\x64\xc8\x00\x77\x6e\x57\x4f\xa1\x26\x6d\xa6\x2f\x41\x2e\xb1\x89\x86\x84\xf9\x2a\xd6\xac\xfb\x45\xb7\x76\x34\xc9\xe4\x8e\x4b\xb9\xa3\xfd\xe6\x1f\x60\x72\xf6\x95\x9b\x90\x20\x71\xf0\x73\x44\xbe\x4c\x2e\x52\xaf\x7d\x72\xe1\x24\x73\x27\x3a\xb9\x60\xb7\xee\xfd\xc5\x49\x4a\x6b\x41\xb2\x5f\x74\xe2\x59\x46\xc1\x48\x14\x76\xed\x02\xcc\x0d\x27\xf4\xa4\x24\x76\x07\x0a\x6e\x79\xa1\xca\x93\x27\xcf\xc4\x8f\x16\x48\xb1\x58\xe1\x2a\x84\x8a\x1f\x43\x84\xb4\xc7\x1f\x60\x72\x61\x52\x30\x8a\x60\x00\x5b\x29\xa2\xcf\xca\x67\x41\xae\xb4\xc6\xda\xf7\xdc\x5a\x95\xc6\x8f\x75\xe4\x9e\x81\xa5\xd2\xf7\xc6\x59\x12\x33\xa8\x51\xc6\xe1\x62\x8e\xfa\xbe\xff\x0d\x7e\xfd\xd5\xad\xfa\x6b\xbb\xc5\xa3\x63\x78\xa0\x81\x73\xc8\xd1\x66\x4a\xcf\xb9\x3d\xa1\xdd\xe9\xda\x22\xc4\xef\x7f\x3b\xc8\x2b\xae\xc9\xd9\x24\x85\xdf\xc3\xea\xd1\xf1\x66\x35\xcc\x54\xe4\x0c\xa9\x07\x51\x78\x47\x46\xc1\x85\x4f\x26\x85\x1f\x04\x70\x85\x2b\x76\x81\xb9\x2a\x30\x60\xd9\xf9\xe8\x8f\x87\x14\x7b\xe9\x2d\xb3\xb3\xa2\xe8\x9e\xc6\x4e\xf2\x87\x28\xc6\xa9\x97\x1d\x0d\x39\x15\x11\x2a\xff\xc1\x89\x7d\x12\xe5\xa5\x2c\x04\x97\xec\xbf\x1d\xbe\x71\xef\xd5\xff\xfd\x7e\xf2\xff\x49\x12\x8c\x7b\x60\x5e\x76\x35\x00\xf7\xf3\x9e\x92\xe0\xbf\xe7\x68\xe7\x52\xe7\xe3\x63\x17\x48\x12\x97\x1a\x6b\x91\xfb\xc8\xfa\x59\x67\x18\x39\x03\xdb\xf7\xf9\x69\xe0\xbd\x8a\xc1\xdb\x73\x5f\x2e\x34\x5f\xff\xb4\x42\x27\x35\xf6\xfc\xb2\xc7\xe5\xe8\x60\xcf\x1c\xec\x99\xde\xcf\x8d\x31\x67\xcd\x21\x51\x31\x57\x83\xbf\xde\xdd\xdd\xc4\x7a\x99\x82\x76\x63\x4d\xe2\xa8\xa7\xef\x30\xbe\x6b\x4b\xe3\xbe\x4b\x76\xad\x85\xca\x8d\xed\x57\xfd\xf4\x4f\xb4\x2f\xaf\x05\x4a\xdb\x15\x7e\xd3\xf5\x11\xcb\xef\xd1\xd0\x3e\x1f\x4a\x2d\x35\x6f\x52\x40\x56\x32\x5f\x1e\x43\xd3\xee\xed\xa5\xfd\x37\x97\xa0\x91\xf4\x85\x09\x01\x16\xbc\x6e\x91\xb4\x34\x2d\x8d\x4d\xa1\x34\x82\xa4\xde\xa1\x5a\xeb\xbe\xe2\x3c\xff\x22\x21\x8c\x3b\xdf\x7d\xe5\x21\xb1\x30\xb0\x2b\x89\xa0\x24\x20\xcf\xab\xce\x9c\x2b\x21\xe1\xdb\x2c\x2c\x95\xdc\x77\x0e\x4c\xb1\x74\x0c\xd7\x8a\xda\x97\x14\x9a\x84\xa4\xb0\x82\xd7\xe2\x6f\x2c\x20\x46\x56\xa6\x74\x5b\x21\x43\x3f\xf5\x7d\xb3\x6d\x92\xd0\xfa\xb6\x31\x8d\xa7\xdc\xe0\x06\x61\xdf\x0e\x68\xee\xb9\xd3\xa2\x69\x1c\x01\x6b\xb8\xa4\xee\x75\x6e\x57\xff\xe3\xee\x4c\x53\xa8\x9e\xf1\x1c\x1f\x1e\x93\xe7\x02\x5b\xd4\x4b\x6f\x2d\x3f\x0c\xec\x9c\xc0\xe0\xf1\xb9\x91\x93\x67\x2b\x2e\x20\xec\xba\xc1\x81\x5a\xaa\xbd\x6d\x6e\xc9\xe8\xf0\x22\x00\xcf\x5d\x8b\x46\xaf\xdd\xa5\x67\xaa\x31\x45\xda\x96\x58\x02\xbd\x92\xf8\x59\xc7\x8c\xdf\x0d\x3a\xeb\x36\x07\xef\x3b\xb3\xff\xd4\xcc\x06\xb0\x53\xe7\xb6\x6c\x88\x82\x9b\xee\xc2\x61\x62\x08\x4f\xe8\xaa\xa3\xdf\x5f\x9e\xd1\xef\x6e\x8a\xdc\x12\x7c\x81\x5a\x3c\x3b\x77\x1b\xe0\xf8\xec\x1a\x06\x4d\x03\x8e\x2e\xcc\xd1\x56\xaa\x08\x6d\x6d\x07\x4b\xf0\x1b\xbe\x09\x2f\x52\x50\xf7\x54\x6d\xb7\x8a\x03\x73\xd8\xc6\xda\xb2\xa7\x78\x27\x2c\x0e\xbc\x2a\xf4\x7b\x75\x1f\x7a\x79\x00\x6b\xd1\x97\x86\x2e\x86\xd8\x95\xf7\x26\xcb\x68\x14\x40\xe0\xa6\x47\x74\xdf\xf4\x5f\x1e\xba\xdc\x73\xdf\x09\x3c\x89\x4d\xd8\xd6\x6b\xeb\x08\xeb\xa5\x27\x33\x74\xf1\x33\xda\xf3\xc4\x21\x50\x1c\xcf\x24\x37\x1d\x99\xda\xb8\xcf\x53\x2e\x5d\x34\x75\x89\x19\x3e\xe8\x86\x74\xda\xa9\x73\x47\xa4\x84\xf2\xd7\xd5\xc3\x9e\x61\x3e\x44\x6f\x27\x49\x44\x91\x86\xe4\xe8\x39\x31\xea\x06\x9f\x27\xe7\x9e\x72\xa0\xf4\xd9\x89\x27\xcc\x89\x8a\xf0\xc8\x13\x32\xef\xda\x77\x9c\x2b\x8b\x5b\x32\xdb\x7e\x6e\xe2\x8c\x05\x40\xb6\x5d\x4f\x41\xb3\xaf\x0e\xb4\x2d\x82\xfb\x56\xb2\xf6\x18\xfd\x33\x00\x00\xff\xff\x6a\xcf\x71\x9c\xa9\x1a\x00\x00")

func _hardcodedTracingGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedTracingGo,
		"../_hardcoded/tracing.go",
	)
}

func _hardcodedTracingGo() (*asset, error) {
	bytes, err := _hardcodedTracingGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/tracing.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x98, 0xae, 0xcd, 0xba, 0x16, 0x5a, 0xfd, 0xce, 0x8f, 0x14, 0x66, 0x6a, 0x7, 0x96, 0x60, 0x6f, 0x85, 0x4e, 0x75, 0xe, 0xc6, 0x2e, 0x23, 0x38, 0x4a, 0xb6, 0xf3, 0x72, 0x59, 0x6, 0xf7, 0xd8}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../_hardcoded/doer.go":       _hardcodedDoerGo,
	"../_hardcoded/middleware.go": _hardcodedMiddlewareGo,
	"../_hardcoded/tracing.go":    _hardcodedTracingGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"..": &bintree{nil, map[string]*bintree{
		"_hardcoded": &bintree{nil, map[string]*bintree{
			"doer.go":       &bintree{_hardcodedDoerGo, map[string]*bintree{}},
			"middleware.go": &bintree{_hardcodedMiddlewareGo, map[string]*bintree{}},
			"tracing.go":    &bintree{_hardcodedTracingGo, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
