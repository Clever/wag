// Code generated by go-bindata.
// sources:
// _hardcoded/doer.go
// _hardcoded/middleware.go
// DO NOT EDIT!

package hardcoded

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __hardcodedDoerGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x1a\x7f\x6f\xdb\x36\xf6\x6f\xfb\x53\x70\x06\x76\x95\x52\x47\x4e\xba\xa5\x1b\xbc\xcb\x0e\x6b\x9a\x5e\x8b\x6d\x6d\x51\x67\x77\x05\x8a\x62\xa5\x25\xda\xe6\x22\x93\x9a\x48\x25\x31\xb2\x7c\xf7\x7b\xef\x91\x92\x29\x5b\x76\xb2\x1f\x38\xdc\xb9\x40\x2c\x8b\xef\x3d\xbe\xf7\xf8\x7e\xb3\x05\x4f\x2f\xf9\x5c\xb0\x34\x97\x42\xd9\x7e\x5f\x2e\x0b\x5d\x5a\x16\xf5\x7b\x83\xe9\xca\x0a\x33\x80\x87\x54\x2b\x2b\x6e\x2c\x3e\x0a\x95\xea\x4c\xaa\xf9\xe8\x17\xa3\x15\xbd\x28\x4b\x5d\x12\xd4\x6c\x49\x10\x52\x8f\xa4\xae\xac\xcc\xf1\x47\xae\xe7\xf8\xb5\xe4\x76\x31\x2a\xb9\xca\xf0\x87\x12\xd6\x7f\x8d\x16\xd6\x16\xf8\x6c\x56\x2a\xc5\x6f\x2b\x97\x62\xd0\x87\x87\xb9\xb4\x8b\x6a\x9a\xa4\x7a\x39\xe2\x33\x71\x33\x5a\xac\x8c\x2d\xe5\xcd\xe1\x5c\xd7\x8f\x83\x36\x54\xa6\x95\xbe\xe2\x6a\x21\x33\x31\x12\x57\x20\x89\xd1\x55\x99\x02\xb1\x9e\x2e\xe0\x57\xc9\x53\x60\x9a\x85\x18\xc1\xfb\xf0\x19\xb6\x00\x24\xcb\xe7\xe6\x81\xd0\x23\xaf\x99\xb9\xce\xb9\x9a\x27\xba\x9c\x8f\x6e\x46\x28\x9c\xd7\xda\x28\xb5\x37\x5e\x4e\xd0\xc6\x5c\x94\x40\x57\x17\x97\xf3\x44\xaa\xd1\x59\x0e\xbc\x96\xa3\x4b\xbe\xba\x12\x02\x68\x25\x57\x4f\x47\x0e\x68\xd0\x8f\xfb\xfd\xd1\x88\x65\x1a\x10\xa4\x61\x5c\x31\x09\xe4\xca\x19\x4f\x05\x9b\x69\x20\x92\x69\xd8\x7f\xc0\x90\x34\x2b\xc5\xaf\x95\x30\xd6\xb0\x42\x1b\x23\xa7\xf9\x8a\x5d\x03\xeb\xec\xba\xe4\x45\x01\x50\x7d\xbb\x2a\x84\x27\xd5\x10\xb9\xed\xf7\x9e\xeb\x28\x65\x07\x48\x21\x39\xa3\xe3\x1f\xb2\xd2\xff\x7e\xe7\x28\xc6\x2c\xaa\x7f\x9b\x42\x2b\x23\x86\x8c\x0e\x3c\xee\xdf\xf5\x1d\x55\x5d\xbc\xe6\x4b\x71\x66\x6f\x18\x1c\x4b\x95\xda\xdb\x3b\xe2\x7b\xca\x8d\xf0\x34\x5e\xc2\xb9\xe7\xb0\x75\x01\x1b\xeb\x72\x69\x98\x5d\x08\x5a\x6f\xf1\xee\xa8\xe1\xeb\xe7\xc8\xe7\x9a\xd8\xac\x52\x29\x8b\xb2\x66\x29\x66\x7f\x82\x6d\x94\xba\x14\xb6\x2a\x15\xf3\xc7\x92\x00\xb5\x32\x39\x73\x67\x15\xc5\x43\x96\x02\x35\x12\x0f\xa4\xf0\xa7\x4c\x1c\xf1\x2c\x33\xf5\x0b\x66\x75\x5b\xf1\x8e\xfb\x10\xdc\x09\x80\xfb\x65\xa4\xf9\x7e\x20\x4a\x00\xf7\x67\xa5\xe9\xf7\x40\x0e\x36\x3e\x65\x81\x0c\x68\xf3\x78\x28\xf8\x1a\x56\x93\x7f\xf1\xbc\x12\x51\x73\x50\xb7\x77\x71\x12\xa1\x0f\xa9\x39\x80\x5e\x71\xe0\xb5\x60\x81\x4d\x27\x93\x82\xab\x7e\x0f\xc4\xbf\x78\xf3\xfc\xcd\x18\x05\x67\xe4\x0f\xa5\xc8\xb9\xf5\xd2\x4b\x55\x54\x96\x65\xdc\xf2\x7f\xf4\x7b\x72\xc6\x0a\x5e\x02\x01\xc4\xc4\x5d\x37\xa9\xbd\x28\xf5\xb2\x66\x0f\x38\x8a\xbf\x09\xe1\x3f\x3b\x65\x4a\xe6\xa8\xa9\x1e\x30\xb2\x81\x6c\x79\x49\x50\x9e\xfd\x61\x6b\xf5\x6c\x21\xf3\xec\xcd\x2c\x5a\x13\x5b\x2b\x21\x06\xd9\xee\x98\xc8\x8d\x78\x18\x65\x04\x77\x7e\x4f\x1c\x7f\x2f\x55\x96\x4c\x84\x8d\x4c\x31\x64\xad\xb7\xef\xde\x9e\xb9\x73\x3a\x57\xd5\x32\x26\xe1\xe1\x34\x50\x6a\x53\x24\x17\x40\x5d\x94\x51\x9c\xbc\x52\xbf\x88\x14\xb1\x03\xd3\x02\x36\x42\x0e\x5e\x5e\x5c\xbc\x7d\x29\x78\x26\x4a\xb3\x67\xe9\x8c\x97\xa5\x04\x92\x65\xe2\x5e\xc4\xa0\x3c\xdc\x2f\xd0\x9a\x37\x68\xf8\x39\x64\x10\x84\x93\x73\x34\x8e\x59\x04\x61\xbb\xca\x33\xf5\xc8\xc2\x61\x21\x33\x8d\xf1\x2e\x1c\x65\x16\x7d\x7e\x15\x0f\xc8\x96\x9c\xf0\x9e\x4e\x96\x64\xe8\x14\xa1\x1f\xc0\x4a\xb9\xaa\xfd\x18\x7f\x48\x61\xd8\xc9\xd1\xfb\x2e\x27\x20\xd8\x2d\x17\x58\x7f\xc8\x19\x7a\x04\xf5\x56\xe7\x32\x5d\xb1\x77\xeb\x67\xbf\x5f\xf0\x86\x65\x62\x26\x15\x6c\xc7\x1d\x65\x08\x71\xf8\x3a\x71\x9b\x85\x80\xad\xd0\x06\x44\x9e\x41\x66\xd3\xb3\x19\xda\x2d\xca\xe5\xe2\x0e\x9c\xd9\x14\x9d\x59\x81\x4d\xcb\x25\x6a\x43\xcf\x3c\x61\x6e\xad\x58\x16\xd6\x24\xfd\x5e\x8d\x1a\xc5\xec\xc3\x47\x4c\x4a\xc9\xf3\xaa\x04\xdb\xd7\xce\x2f\x68\x57\xc0\x4a\x85\xbc\x12\x8e\x6e\xa8\x88\x21\xe3\x86\x5d\x8b\x3c\xc7\x6f\x5c\x2c\x85\xa9\x72\x0b\x3b\x11\x76\x9d\xf8\xbc\xbb\x3f\x32\xec\xd3\x73\xfd\x89\x2d\x85\x5d\xe8\x0c\x36\x27\xea\x51\x2b\x02\x0c\xd9\x8e\x00\x30\xd5\x3a\xf7\x3a\x9b\x80\x30\xb9\xd8\xa7\x39\xbb\xe0\xb6\x39\x3d\x5e\x73\xcb\xb4\x4a\x85\xd3\xe6\x36\x89\x56\x4c\xef\x50\x28\x10\x5c\xe9\x8a\x99\x05\x9a\x5a\xb3\x8d\x68\x68\x1f\x1b\x01\x69\x30\x63\x7c\x66\x31\xf9\x58\x36\xe3\x32\x07\x0d\xbb\x48\xb8\xb5\x5f\xcc\x76\x6b\x3e\x08\xdd\x1b\x2b\xb7\xc7\xec\x80\xd1\x9b\x09\xed\x76\x17\x5a\x11\x64\x42\x38\x08\xc7\x99\xd2\xea\xf0\xed\x9b\xc9\xc5\xd0\x3d\x7d\x77\x71\xf6\x72\x9d\x3a\x49\x98\x93\xf7\xef\x93\x7e\x13\xf9\x5e\x59\xb4\x56\x03\xd0\x96\xa5\x55\x89\x41\x26\x5f\xd5\xd6\xa2\x56\xee\x10\x6a\x75\x08\x48\x51\xab\x1d\x87\xbb\x47\x60\x77\xda\xc0\x05\xdb\x38\x71\x30\x9a\xa2\xeb\xd8\xc3\xa3\x47\x9d\xf8\xf8\xe3\xe3\xc1\x6f\xbf\xa1\x44\xc9\x8f\x64\x4c\xec\xf4\x94\x0d\x50\xe0\x41\xd7\x7b\x14\x1f\x17\x28\x82\x40\xa0\x82\x88\x68\x2b\x73\xa6\x33\xc1\xfe\x0e\xce\x7d\x14\xc6\x96\x19\x87\x40\x1a\x06\x09\xb0\x0b\xe1\xd5\x7c\x7e\x03\xcc\x81\xac\x92\xe7\x9d\xd6\xa7\x98\x58\x43\xb4\x9c\xd8\x59\xdd\x0e\xfc\xfd\xa6\x37\x03\xcf\x83\x92\xc0\xbf\xa5\x6a\x27\xd8\x25\xc7\x68\x90\x96\x82\x1b\xf4\xf0\x6b\x0e\x86\x87\xf6\x61\xa8\x32\x11\xf6\x5a\x08\xd5\x1c\xfc\x98\x1d\x1f\x1d\x0d\xd9\x13\xfc\xf3\x25\xfe\xf9\x1a\xff\x60\x80\x38\x7e\x0a\x4a\x58\x82\xf9\x48\x67\xc5\x86\x3d\x1e\x1d\xb2\xaa\xc0\xfc\x77\xf2\x39\xfb\x45\x42\xc0\x28\xeb\xa3\xed\x96\xe2\x01\x06\x8d\x99\x63\xc9\x2f\x45\xb4\xb1\x3c\x64\x27\x10\x96\x15\xa4\x0e\x84\x00\x1e\x6b\x23\xff\x71\xcd\x11\x10\x00\x3e\x31\xfb\x03\xbf\xc9\x6b\x71\x1d\xd5\x0f\x13\x2a\x7f\x23\x42\x78\xad\xaf\x21\x23\xfd\xa4\xe4\xcd\x6b\xae\xb4\x4b\x8d\x54\x1c\x1c\x25\x47\x27\x0c\x54\x82\x62\x9d\x60\x7d\x96\x82\x00\x5e\xae\x7e\x0f\xab\x4c\xe9\x89\xcf\x29\xae\xd7\x16\xf1\x41\x7e\x84\x6c\x4a\xac\x3d\x66\x2d\xa6\xa3\x28\x02\x8e\x92\x17\xb9\xe6\xf6\xe9\x97\x51\x7c\xf0\x24\x3e\x3c\x8e\x0f\xc4\xc1\xcc\xbf\x41\x24\xdc\xdf\x09\x76\x70\xca\x9e\x84\x56\x05\x5f\xff\xb3\xbe\xbb\xeb\x80\xff\xff\x1d\xf8\xb5\xee\xce\x1a\xce\x49\x31\x41\x2a\x6c\x53\x9c\xf2\xd0\xa1\x9a\xdc\xe1\xb3\x70\x9b\xc0\x7e\xc7\xc5\x70\x00\x59\x16\xc0\x00\x58\xd4\xca\x6d\x51\xf8\x83\x59\xa0\x1d\xf6\x79\x7e\xcd\x57\x41\xbc\x40\xf9\x77\xec\xf6\x7b\x13\x6e\xc0\x83\x53\x6b\xdd\x0b\x91\x82\x7c\xbd\xd7\x56\xc3\xbf\x21\x40\x85\x3a\x6a\xb4\x01\xaa\xbd\x66\xbe\x53\x74\x66\xac\x41\xd5\x25\xb4\xb1\xae\x74\x70\x6d\x39\xd3\x53\xac\xe0\x1e\x99\xa6\x18\x6b\xca\x20\x92\x68\x83\x3c\xd6\xd8\x35\xd1\xba\xfe\x1c\xb2\x1d\x25\x57\xbc\x09\x19\xf6\x48\x7e\x05\xe9\xbb\x2e\x02\x28\x0f\x5b\x72\xde\xde\xb5\x28\xc7\x61\x9f\x73\xd0\xd4\x82\x7f\x45\xd3\x56\x6f\x01\x3d\xc0\xe5\x46\xc7\xe3\x5b\x9c\x36\x5f\xd0\xe5\x84\x62\x92\xa3\x7d\x06\xa8\xde\x2b\x1a\x5d\x9c\x42\xc5\x1b\xfc\x26\x27\x69\x32\x0b\xee\xb3\x5e\x4b\xd6\x86\xe9\x3a\xa7\x0e\x1f\x77\x0b\x8d\x9f\xf7\xa9\xe6\x9b\x70\x48\x57\x61\x61\x34\xd5\x19\xe6\x28\x96\x62\x1f\x7c\x0d\xf5\x23\x01\x68\xb7\x59\xc2\xde\x00\x6c\x79\x2d\xdd\x1a\x45\x41\x02\xe0\x39\xe4\xb4\x0c\xcd\x87\x67\x44\x97\x5a\xe9\x6a\x36\x03\xef\xd4\xaa\x89\x6e\x59\x6b\x2b\x42\xc7\xba\x2b\x61\x13\x21\x08\x0d\x19\x1e\x8f\x46\xc6\xa2\x38\x60\x6f\x10\x9d\xaf\x69\xcc\x41\x18\xe0\x4c\x66\xf4\xe4\x8b\xa3\xaf\x8e\xbe\xfe\xea\xe9\x08\xf7\xc2\x49\x07\x72\x7c\xa8\x67\x87\x88\x7b\xe8\x69\x1f\x62\xe2\xd5\x95\x3d\x5c\xea\x4c\xce\x30\x36\x34\x2b\x40\xdb\x7a\x5d\x00\x83\xe0\xac\x38\x4d\xa2\x33\x28\x93\x67\x28\x7c\xd0\xc0\xb4\x15\xd6\xeb\x01\x82\x8b\x94\xa7\xcc\x8d\x92\x40\xb9\x3c\xfb\x2e\xcf\x23\x87\x8b\xf9\xa3\x1d\x35\x91\x4a\xab\x0f\x82\x35\x78\x75\x87\x87\xe9\x32\x59\x5d\xf7\x62\xda\xfb\x86\xa2\xdf\x37\xf5\xbb\xc7\x8f\x09\xbf\x93\xb5\x5e\x99\x51\x6f\xe7\xf9\x78\xad\x8b\xb3\x5c\x1b\xe8\xc7\x68\x38\x86\x99\xf6\x19\xa9\x3f\x02\x9e\x29\xaf\xf5\x3c\x0d\xb0\x9b\xcc\xb3\x40\xd1\xb9\x16\xa8\xd5\x5d\xb9\x4d\x3d\x67\x10\xd3\x73\xa1\xa2\xda\xf4\x62\x0c\xf9\x9f\x85\xc6\xe7\x33\x8d\xcb\x2c\xae\x6f\x73\x3c\x4e\xe1\x8c\x2e\xfd\x5e\x70\xba\xc4\x61\xdd\x78\x90\x4d\x3a\x73\x23\xc3\x40\x03\x99\x73\xa9\xea\xa4\x81\xcc\x26\x84\x81\x36\xdd\x73\x65\x74\x2e\x44\xd1\x30\xf2\xc1\x33\xf8\x31\x6e\xa7\x6a\xcf\x83\x8f\xba\xa9\x2c\xd3\x4a\xda\x67\xc8\x8a\x28\xa9\xff\x93\xcb\x22\x17\x4b\x9c\xc5\xb9\x50\xe6\x20\xd8\xd4\x81\xb0\x02\x1b\xae\x52\x51\xce\x86\x4e\x1b\x12\xcf\xb4\xa2\xd9\x02\x1e\x0e\x7e\x43\x47\x0c\xa1\x5d\xb4\x90\xc1\x65\x38\x5b\x62\x8a\xbb\x06\x0f\x11\xd8\x52\x90\x7d\x6b\x05\xd9\x3d\xd7\xf3\x80\x15\x46\x26\xe8\x4a\x39\x82\xc1\x52\x60\x9a\xeb\xf4\x92\x0a\x80\xa6\x78\x98\x95\x7a\xc9\xe6\x9a\x06\x1b\x8b\x52\x57\xf3\x85\x4f\x6b\x1d\x22\xed\x6b\x69\x1d\xff\xee\x43\x7d\x59\xcf\x13\xa0\x59\x8c\x1b\xb8\x34\x33\x40\xfa\xb8\xe7\xe4\x7b\x1a\xff\xfd\x40\x3f\x50\x9b\xe8\x0e\x1e\x75\x32\x39\x7f\x03\xed\x19\xc3\x01\x69\x82\x4f\xa4\xeb\x97\x6e\x04\x0a\x8b\xe7\x38\xea\xc4\xf9\xa0\x58\x62\xd5\x46\x65\xcc\x7a\x56\xca\xae\x24\x67\x60\xac\xe0\xe1\x87\x06\x01\xdd\x64\x34\xa1\xe2\x48\x98\xb4\x94\x53\x57\x13\xa3\x86\x49\x5b\x98\xec\x79\xbd\xb9\x57\xc3\xe6\x6e\x6b\x1d\x5c\xe0\xf2\x9e\x8f\x93\x99\x7d\xc2\x59\xf1\x78\x80\xc4\x06\x9f\xfa\x3d\x52\xc7\x83\xb1\x14\x40\x23\x96\x4f\x12\x67\xba\x02\x16\x3a\x3e\xd2\xbd\xf6\x58\x65\x00\x8d\xd8\x34\x12\xd9\x89\xbb\x89\x2d\x1a\xe8\x06\xf7\xad\x2b\x8e\x71\x52\xfe\x00\xdc\x35\x34\x12\x78\x65\xce\x5a\x96\xf4\xa6\x80\xf6\x23\xf8\x50\x4d\xd1\x10\x90\x1d\xd0\xa4\x00\x0d\x65\xbf\x9a\x13\x5b\x2f\x20\x9a\x57\xa5\xd8\xa7\x80\x6d\xe8\x6d\x22\x79\x8e\x3e\x1e\x12\xdb\x47\xa4\x05\xbd\x8b\xd8\xa4\x4a\x53\x61\xcc\x03\x89\x79\xe8\x4d\x62\x93\x85\x2e\xad\xd7\x82\xc8\xee\x13\xaf\x0d\xbd\x45\x2b\x60\xe8\x7e\x55\xed\x60\xe8\x62\x81\x59\xf0\x2d\x9c\xd3\x3b\x81\x85\x18\x32\xb5\x9b\xc8\x36\xf4\x16\x3d\x88\xb2\x90\x50\x1e\xc8\x94\x87\x46\x22\x67\xae\x93\x81\x1a\xc7\xf7\x34\xe7\x37\x22\xad\x30\x63\x3b\xe3\x6e\x13\x49\xf7\x43\x23\xc1\x1f\xc0\xe9\x55\xba\xba\xd0\x96\xe7\x3f\x0a\xae\xf6\x1b\x77\x1e\x40\xff\xbc\x04\x70\x20\x51\xd7\x7b\x10\xcc\x28\x3e\x44\x79\x57\x5c\x83\x54\xb1\x19\x48\x28\x79\xe5\xc9\x2b\x35\xd3\xcf\x23\xe8\x52\x69\xbc\xbb\xe4\xc5\x07\x17\x00\x3e\x36\xf3\xbc\xdb\x3b\xcc\x72\x6d\x9f\x1e\x77\x79\xb1\x48\xc2\x28\x81\x43\xd5\xd0\x95\x3b\x51\x10\x69\x1d\x1c\xd6\x28\x81\x07\x6f\xe3\x79\x94\x35\x0c\xe1\x75\x3a\xee\xb8\x8d\xd7\x15\x0a\x08\xb9\xcb\x5f\xc7\x9b\xc2\x6d\xc3\x74\xe0\xb6\xdd\x74\xdc\x89\xdb\x82\xd9\x49\xa3\x76\x86\x7d\x34\x3c\xcc\x16\x8d\x0d\xa7\x1c\x77\xc9\xd0\x86\xd9\x26\xd1\xda\xbe\x5b\x0d\xbb\xb6\xef\x70\xc1\xf1\x26\xee\x36\xcc\x36\x19\xef\x79\xfb\x58\xf0\x30\x84\x7b\x9f\xc3\x8d\x01\xf7\x1e\x17\x26\x3a\xf9\x86\x57\x6e\xdb\xa0\x48\x36\x3d\x17\x10\xef\xe2\x7e\xab\xfd\xda\x2e\x60\x62\x70\x68\x09\x0d\x93\x1f\x91\x83\x05\x4b\xa8\xdc\x53\x9a\x98\x81\xd7\xba\x19\xba\xe2\x79\xbb\x86\xc2\x62\x8c\x1b\x23\x0d\xd5\x5f\x46\x58\x4b\xa5\x4c\x50\x6a\x41\xe1\x24\xcc\x42\xe7\x99\xa1\x72\xab\x52\x78\xc1\x60\xe1\x91\xc6\x05\x45\x01\xf5\xab\x6b\xdf\xa7\x02\x1a\x19\xa9\xcb\x84\xd0\x7f\x02\xdf\x2f\x6d\xa5\x60\x8f\x1c\xfa\xba\xa0\x72\xc1\xd9\x0d\x5e\x5d\xb8\xb6\x87\xcd\x41\x04\xa8\xf4\xf8\x0a\x59\xc1\x41\x1f\x15\xb8\xd2\x10\x15\xbc\x85\x1a\x32\xa3\xb1\x57\x02\x36\xf0\xfa\x1a\xab\x48\xa8\x52\x69\xbe\xaf\xa0\x48\x34\xcc\x54\x05\x5d\x6c\x63\x2f\x30\x2d\x35\xcf\xa0\xf3\xda\x12\x63\x89\x95\x6e\x6a\xa8\x6e\xa2\x89\xfe\x76\xf1\xc4\x22\x88\x5f\xb1\x63\x1f\xda\x29\x02\x33\xd0\x4b\xed\xb9\xb1\x96\xc6\x40\x50\x1a\x9d\x3c\x4d\x9a\x92\xd0\xd7\x75\xd8\x09\xe0\x69\xb9\x03\xe9\x79\x9c\x89\x05\x69\x97\xf5\x75\x0b\x34\x1f\xfe\x3d\xcd\xf5\xc2\x35\xaa\xd8\xbb\x90\xdc\xed\x16\x2d\xe7\x70\x6a\x42\x51\x00\x76\xb7\x54\x4a\xd8\xe4\x07\x7a\x19\x0d\x6c\x5a\x0c\x86\x6c\x70\xfc\xe4\xab\xe4\x08\xfe\x1d\x8f\x8f\x06\x3b\x7a\xab\x82\x2b\x99\x46\xee\xaa\x88\x7a\xaa\xde\xdc\x5d\x81\x26\x13\x54\x51\xb4\xde\xa6\x8b\x9f\xd8\xc1\x07\xa2\x62\x1d\xfc\x82\x22\x3a\xd8\x30\xb2\xf5\xc5\x51\x7b\x88\x4f\x30\x70\x44\x94\x2a\x26\x38\xb0\xa5\x39\x69\x93\x1d\x36\x92\xc9\xed\x5d\x0b\x01\x92\x0e\xfa\xe5\x06\x0e\x91\xc7\xf7\xb7\x24\x01\xf5\x85\x3f\xb3\x7a\xc0\xe9\x57\xd3\xcb\x68\xe3\x3e\x01\x38\x66\xcd\xdc\x45\x2a\x1a\x90\x49\xb4\x58\xa4\xd1\xab\xca\x1c\xb7\x19\xf8\x9e\x7a\xc0\x1e\xb3\x5a\x19\xc9\x77\x59\x86\x97\x81\x13\xda\x9e\x8e\x03\xbb\xae\x5f\x9b\xb3\x20\x05\xc2\xa9\xfa\xb4\x15\x0d\xfe\x79\x7e\x01\x07\x02\x24\x87\xa8\x7a\x87\xd0\x71\x1a\xa4\xbe\xe4\x2d\x50\xb5\xb3\xc8\x25\x2c\x9c\xd5\x28\x88\x62\xfe\x7e\xb6\xb6\x68\xd0\x0f\x16\xd4\x70\x14\x63\xf6\xb9\x69\x6e\xfb\xf0\x83\xc3\x1d\xa9\x2a\x41\xbf\x48\x7d\x3d\x07\xd9\xb0\x17\xfc\x47\x8a\x64\x52\x4d\x5d\xc3\x80\xb3\xa0\x68\x00\x94\xfe\x16\x0c\x73\xdc\x14\xe8\xd7\xff\x3a\xc3\x78\x82\xe2\x6a\x3d\xa4\x76\x98\xc9\xb9\x73\x55\xbf\x35\x8d\x17\x36\xab\x0f\xb7\xb4\xbe\xbc\xc5\x02\x27\xf9\x49\x2d\x79\x69\x16\x3c\x8f\xdc\xbc\x22\x12\x57\xc9\x73\x88\x2e\x51\x1c\x83\xbc\x62\xfb\xea\x75\x8b\x2d\xcf\x17\x11\x4e\xa8\x3f\x02\xe8\x81\xdf\xfb\x4c\x2f\x97\xf8\x9f\x60\xf6\xa3\xa2\x11\xa3\xc1\xd7\x73\xae\x96\x17\x7c\x70\x85\xd2\xc7\x35\xe8\xd6\x12\x18\xb4\xe8\xbb\x75\xb0\x5a\x8c\xea\x61\x03\xed\x02\x3a\xb0\x27\x71\xc0\x2d\x24\x0e\x9a\x1a\xe0\xe8\x38\x26\xe0\x99\x84\xe8\xed\x8e\x1f\x82\xea\x23\x08\xc1\x06\x3d\x10\xb5\x1d\xd2\xd2\x01\xe6\x93\xb8\xbd\x84\x3d\x8e\xdb\x6b\xc1\x0d\x4b\x17\x78\x3c\x59\x0b\xe3\x8b\x18\x9d\xbe\xbe\x5a\xa1\x40\x5f\x40\x96\x01\x28\x23\xb1\xe7\x85\x68\x4e\x85\x24\xfc\xd6\x78\x39\x8a\x86\xb2\xc1\x41\xa3\xeb\x7a\xae\xd7\xeb\x08\x02\x81\x5e\xd6\xd7\x21\x35\x6c\x5d\xb4\x66\x49\x5e\xd7\xa9\xf1\x3d\xe7\x5a\x9f\x4f\x67\x31\x87\xc7\xdd\x5d\xe6\xfd\xd5\xfc\xf9\xff\xdc\x00\x0c\x05\x97\x3c\xe0\xa5\xd1\x2e\xfa\x31\xfb\x96\xb5\xa2\xee\x5f\xcd\xd0\xda\x2f\xf1\xcf\x1d\xe2\xdc\xc5\xf7\x16\x24\x7f\x72\x30\x0c\xf2\x67\x89\x1b\xbd\xdc\xb6\x46\x6d\xe3\xad\x59\x5b\x9d\x46\xe1\x55\x96\x04\xb3\x99\x61\x9d\x98\x5c\x5c\x22\xb5\x74\xc5\x30\x3f\xf9\x72\xa3\x45\x27\x28\x8d\xef\xda\x57\x2f\xdf\x9e\x36\x77\x2f\x3d\x77\xdd\x0f\x16\xec\x26\xbb\x88\xcd\x95\xdf\x86\x06\x5d\x92\x86\x41\xa1\xd3\x50\x49\xd2\xda\x4c\x97\x34\x67\x8c\x06\x27\xef\xdf\x53\x7a\x76\x5b\xb7\xb8\xb9\x6b\xf2\xc5\xd6\x78\x8e\xb2\xf5\x03\x67\xd5\x3d\x37\xa3\xfc\x1d\x8a\xda\x3f\xda\xdc\x31\xa1\x6d\x86\xb3\xf7\xe9\xef\x0f\xab\x6f\x8f\xf6\xee\xfa\x6d\x3e\x9c\xea\xd8\xe8\x80\x29\x8d\xf7\x39\xd4\xd6\x90\xa0\xee\x16\x76\x25\x2c\x3b\x18\xc5\x9d\x83\xcf\xff\x04\x00\x00\xff\xff\x81\x3c\xc4\xf2\x3d\x29\x00\x00")

func _hardcodedDoerGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedDoerGo,
		"_hardcoded/doer.go",
	)
}

func _hardcodedDoerGo() (*asset, error) {
	bytes, err := _hardcodedDoerGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_hardcoded/doer.go", size: 10557, mode: os.FileMode(420), modTime: time.Unix(1493247534, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __hardcodedMiddlewareGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x57\x5f\x6f\xdb\x38\x12\x7f\xb6\x3e\x05\x4f\x87\xa6\x52\xe0\xca\xb9\x03\xae\x0f\x29\x7c\x40\x91\x26\x9b\x62\x9b\x36\x68\xd2\xed\x43\x51\x2c\x68\x89\x92\xd8\xc8\xa4\x96\xa4\xac\x18\x41\xbe\xfb\xce\x0c\x29\x59\x4e\x5c\xa0\x6f\x5b\xa0\x09\x35\xe4\xfc\xe6\xff\x9f\xb4\x3c\xbf\xe3\x95\x60\x56\x98\x8d\x30\x51\x24\xd7\xad\x36\x8e\x25\xd1\x2c\xce\xb5\x72\xe2\xde\xc5\x70\x2c\xd7\xf4\x4b\x09\xb7\xa8\x9d\x6b\xf1\x6c\x3a\xe5\xe4\x5a\x2c\x0a\xb1\xea\xaa\x38\x8a\x66\xba\x15\xca\x19\x9e\x4b\x55\xb1\xb8\x92\xae\xee\x56\x59\xae\xd7\x8b\x09\x7d\x7a\x7e\x55\x69\x80\x71\xbc\xb2\xbf\xf8\x7a\x11\x74\xa9\x74\x7b\x57\x65\x52\x2d\xce\x1a\x01\x2a\x2f\xee\xf8\x76\x23\x04\x3c\xc8\x36\xaf\x17\x8d\xae\x2a\x61\xe2\x28\x8d\xa2\xc5\x82\x5d\x73\x25\xf3\x2b\x59\x14\x8d\xe8\xb9\x11\x0c\x6e\x2d\xe3\x6a\xcb\x5a\xbc\xb0\x19\xbb\xd0\x86\x29\xdd\xcf\x59\x2f\x5e\xc2\x3d\x5a\x2c\x55\x27\x98\xab\x8d\xee\xd1\x10\x57\x0b\xff\x98\x75\x2d\x22\xe2\xb7\x75\xe0\x33\x66\x35\x7c\x48\xcb\xd6\x7c\xcb\x72\xc3\x6d\xed\xdf\x1a\x9d\x0b\x6b\xb3\xa8\xec\x54\xfe\x54\x7e\x52\x33\xf4\x5e\x76\xc9\x15\x50\x4c\xba\xf7\xc5\x1e\xa2\x99\x11\xae\x33\x6a\x8f\x7c\x01\x38\x09\x82\x25\xbd\xa7\x7f\x16\xb6\xd5\xca\x8a\xaf\x46\x3a\x61\xe6\xcc\xb0\xe3\x40\xff\xab\x13\xd6\xa5\x88\x33\x2b\x44\x09\x88\xc4\xe6\x09\x33\x32\xe2\xdc\x18\x76\xba\x64\x46\xe4\x1a\x3c\x97\xa4\x78\x21\x4b\x36\xde\x2d\x97\x4c\xc9\xc6\x33\x04\x65\xf0\xf8\x88\x3f\x36\xdc\x30\x61\xe8\xbf\x86\x3c\x01\x8a\xed\xa5\xcb\x6b\x36\x45\x1e\xce\x59\xe2\xb6\xad\x08\xa2\x73\x6e\xd1\x69\x06\xfc\x79\x4a\xc8\x08\xb3\x64\x90\x53\xd9\x39\x82\x95\xc9\xc0\x96\x8e\xcf\x49\xca\xf4\xf5\xf0\x04\x49\x60\x1d\xef\x1a\xf7\x13\xb0\xb8\x53\x77\x10\x53\x15\xe2\xf6\xe2\xdf\x1b\xa6\x4b\x86\xfa\xb0\x17\xb7\xf1\x7c\x44\xda\x9d\x52\x6f\x24\xfe\xf4\xf9\x93\x5d\x18\xbd\x3e\xf3\xe9\x9f\x98\x6c\x38\xa5\xa9\x97\xf1\x2e\x89\x89\x35\x9e\x93\x06\x81\xe7\xea\x21\x06\x5d\xe2\x53\xd4\x7d\xce\x62\xca\x12\xcc\x5e\x01\x24\x6f\x7d\x42\xb5\x92\xdd\xe0\x0d\x80\x3d\xa6\x63\x60\xf6\x3c\xf0\x48\x81\xa9\xb3\x1b\x2c\xc9\xcb\xdb\xdb\xeb\x04\x12\x14\x6f\x80\xe1\x91\xf2\x1a\xb0\x5d\x67\xf7\x33\x81\xf5\x86\xb7\x90\xdd\x10\x5d\x4f\x06\x02\xd2\x23\xb2\xfc\x20\x07\x68\xd5\xe5\x0e\x83\x74\x20\xb3\xa2\x99\xe7\x61\x52\x39\x14\x4b\x09\x9d\x58\x76\x7c\x08\x2a\x65\xf4\xfb\x52\xf0\x02\xf2\x2a\xd7\x85\x40\x36\x8a\xbf\xcd\x02\xce\x92\x21\x1d\x09\xfb\xbc\xd9\x53\x56\xb2\x92\xb4\x0e\xc5\xff\xa9\xfd\xc8\xd7\x22\xa8\xfb\xe0\x5d\xf0\x15\x5a\xc6\xed\xde\x35\x2f\x0a\x4b\x35\xa8\x5b\xa6\x90\xe0\x34\x78\x23\x34\x31\x56\x42\xa5\x77\xe0\x94\xd5\x96\xde\x0c\x8d\xaa\x91\x2b\xc3\xcd\x36\x63\xef\x1d\x5e\x5b\x84\xe6\xac\xd5\xa0\x3d\x38\x68\x25\x72\x8e\x4c\xd2\xbd\xb4\x2c\xe7\x4d\x23\x0a\xa0\x35\xba\x07\xeb\x26\xad\x00\x2a\xd5\x0b\x56\xcd\x96\xf5\xd0\x0f\x40\x72\xcb\xad\xd7\x46\xaa\x52\x87\xe6\x01\xdd\x02\x6e\x6a\xbe\x41\x44\x10\x63\x85\xdb\x09\xcb\xd8\xf9\x46\x20\xaa\xee\xaa\x1a\xef\x0b\x2d\xac\x7a\xe9\x58\x5e\x73\x55\x09\xc2\x1a\x8c\xe9\x51\xb2\x6c\x1a\xc2\xf2\x6d\x09\xb0\x43\xf7\xd8\xd9\x0c\xc2\xd6\x1c\xc0\x79\xd0\x16\x38\x3a\x2b\xb5\x0a\xdd\xe9\x99\x0b\x93\xdc\xdd\x0f\xcc\x43\xd2\xcf\xc1\x9d\x83\xf7\xe1\x61\xfa\xf4\x9e\x42\xec\xcc\xb5\xa3\xfa\x07\x80\xec\x0f\xde\x74\x22\xd9\x0b\xdd\xc3\x63\x9a\x25\xc7\x01\x21\xc2\x96\x13\x58\xfe\xb5\x6b\x38\xc7\x81\xb4\x0c\x02\x23\x6c\x3b\xc1\x24\x80\x0d\x99\x1f\xf4\x85\x8e\x2b\xb8\x13\x98\xee\x4a\xf4\xcc\x42\xf9\x50\xcc\x0b\xc6\x4b\x0c\x1c\x5a\xfb\xe5\xf3\x07\x88\x82\xab\xa9\xfa\xe1\xdb\xf8\x06\x99\x21\x0c\x44\xbb\x6d\xa0\x34\xad\xf7\x1c\xf1\x07\x27\x85\x67\x83\x9d\xf3\x69\xe6\x68\x78\x60\xc0\xe9\xd4\x99\x2d\xdb\x48\xce\x26\x33\x2a\xbb\x01\x98\x69\xe7\x48\x49\x54\x89\x91\x46\x01\xe2\x5e\x5a\x87\xf5\x34\xca\xa8\x29\xe9\xed\xdc\xe7\x12\xbe\xf1\x76\x15\x3e\x4d\x71\xba\xec\x86\x57\x8f\x01\x5f\x09\x8c\x6f\x2d\x9b\xc2\x9b\xc5\x1d\xf1\x85\x88\x06\xef\xfc\x13\x13\x07\x2c\x7d\xeb\x9c\x58\xb7\x94\x76\x3f\x20\xa7\x07\xb3\xc1\x94\x4a\x38\x47\xd3\x14\xdb\xa1\xaf\x88\x12\xfc\x44\x66\x07\x1f\x64\x1e\xe3\x56\x63\x4d\xc1\x02\x02\xb3\xa5\x26\xb7\x0f\xa1\xe4\x43\x71\xfb\x6c\x94\x0a\x90\xa0\x0e\xb0\x02\xb0\x4a\x2a\x0d\xd2\x15\xca\xa6\x20\xea\x0e\xd3\x60\x8b\x05\xa6\x0a\x0f\x3d\xa1\xe3\x7c\x80\xdc\x59\xc1\x57\x00\xb4\xf0\x26\x40\xe3\x80\xcc\x40\x62\x76\x0d\xc9\x13\xf9\xc1\x67\xdb\x67\x81\x8e\x68\x74\xda\x7c\x4e\x53\xf1\x74\xb9\xf7\xe0\xb7\x46\xaf\x78\x83\xe1\xc0\x31\x8b\xb6\xcd\xce\xef\xf1\xd2\x25\xd3\x67\xd8\xdc\x2f\x43\x0e\xd0\x28\xf9\xc9\xe5\x19\x37\x46\x02\x92\xc9\x3c\x21\x4d\xdf\x90\xd4\x49\xf9\xcc\x40\xc5\x7d\x1d\x6e\xd0\x8f\xa8\x69\xe2\x0d\xa3\xd1\xc2\x44\x03\x3e\xfd\x35\x86\xf9\xde\xed\x19\x26\xdd\xa7\x32\xb1\x79\x4a\x48\xe3\x96\x61\xdb\xec\x42\x2a\x69\x6b\xc8\x77\xef\x69\xa9\x7e\x88\xdc\x27\x26\x7b\xff\x0e\x27\x81\xf6\xab\x17\x76\x64\x59\x4c\x2b\x80\x26\x62\x05\xf8\xc0\xe9\xd0\x8b\x6b\x7e\x27\x92\x35\x6f\xbf\xf9\x6e\xf1\x7d\x6c\x1a\xe8\xed\xe0\x69\x90\x38\xba\xf6\x3d\xc9\x4a\x80\x34\x56\xdd\xbe\xde\xb7\x40\xbb\xe2\x2d\xf9\xf7\x00\x7d\x70\xad\x1b\x7c\x3a\xdd\x81\x30\xc0\x38\x99\x0b\x80\xbc\x43\xc9\xee\x5b\xac\xdd\x2b\x4a\x63\xf3\xca\x5f\xc5\xdf\xdf\xe0\xe5\xc3\x74\x15\xf8\xe9\xfa\xf0\xb6\x28\x86\xaf\xe7\x40\xf3\x20\x2c\x1d\x76\x2e\x5a\x49\xc0\xb2\x0f\xba\xc2\xd9\x00\x3c\xc1\x6d\x7f\xc2\x06\x27\xe4\x46\x14\x71\x7a\x70\xd9\x3b\xc8\x53\x52\x90\x02\x8f\xdf\x31\xa0\x77\x9e\x41\xcb\x7f\x92\xbc\x41\x43\x1c\x0f\x94\x0d\x66\xea\x5a\xdb\xa6\x3e\xc8\x5f\x2c\xb6\x22\x1f\x9e\x71\x60\xc2\x52\xdc\xf0\x2d\xf6\x46\x3f\x26\x73\xc8\x80\xb5\x2e\x64\xb9\x85\x89\x86\xc6\x8c\x93\x22\x8e\x77\xf2\x97\xe3\x50\x41\x99\x7e\x7e\xf8\xab\x39\x7b\x32\x47\xe6\xec\xc8\x63\x50\xae\x59\xd3\x23\xd6\xd1\xa1\x95\xc4\x3b\x82\x2e\x4e\xd9\xf0\xef\xbf\x27\x27\x94\x08\xfb\x4f\x4f\x59\x3f\x1f\xdc\x8d\x7f\x90\x50\xe9\x5d\x09\x18\xc5\x05\x2c\x61\x98\x5c\xd0\xf4\x32\x4f\x48\x87\x37\xe8\x9a\xdf\xa5\xda\xbd\xd8\xa3\x7e\xbe\x3e\xa3\xf5\xcd\x9c\xab\x6e\x9d\x4e\x71\xbf\x98\x66\x02\x3a\xf4\x19\x32\xe7\x79\x20\x47\xae\x1b\x32\xe4\x0c\xb6\xa3\x91\xb9\x03\x97\xff\xe7\x75\x02\x3e\x08\x1b\x56\x3a\xec\xf3\x3b\x12\xfb\xff\x92\xfd\xef\xe4\x24\x64\x27\xa1\xd1\x06\xbb\x53\xda\x74\x62\xcc\x37\x0c\xeb\x47\x88\x1a\x8d\x95\xd0\x5b\xa7\x4d\xb7\x11\xb8\x07\x39\xb3\xc5\xcd\x85\x1a\x3a\x05\x75\x36\xb6\x0b\xaa\x11\x1f\xb9\x5f\x58\x03\x48\x57\xe0\x39\x3a\x1a\x04\x4c\xfb\x19\x26\x31\x68\xf9\xa9\x15\x86\x3b\x58\x5a\x68\x41\x39\xde\xb5\x32\x5f\x21\xbe\xe7\x4c\x77\x65\x30\x1e\x1d\x8b\x99\x34\xa4\xad\xd7\x28\x1d\x36\xe8\xbf\x03\x00\x00\xff\xff\xa3\xdc\x93\xdc\xf3\x0e\x00\x00")

func _hardcodedMiddlewareGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedMiddlewareGo,
		"_hardcoded/middleware.go",
	)
}

func _hardcodedMiddlewareGo() (*asset, error) {
	bytes, err := _hardcodedMiddlewareGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_hardcoded/middleware.go", size: 3827, mode: os.FileMode(420), modTime: time.Unix(1493241193, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"_hardcoded/doer.go":       _hardcodedDoerGo,
	"_hardcoded/middleware.go": _hardcodedMiddlewareGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"_hardcoded": &bintree{nil, map[string]*bintree{
		"doer.go":       &bintree{_hardcodedDoerGo, map[string]*bintree{}},
		"middleware.go": &bintree{_hardcodedMiddlewareGo, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
