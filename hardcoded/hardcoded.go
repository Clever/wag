// Code generated by go-bindata.
// sources:
// ../_hardcoded/doer.go
// ../_hardcoded/middleware.go
// DO NOT EDIT!

package hardcoded

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __hardcodedDoerGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x3a\x7f\x6f\xdb\x46\xb2\x7f\x4b\x9f\x62\x2a\xa0\x17\x32\x91\x49\x39\x77\x49\x0f\xee\xf3\x3d\xb4\xb6\xfb\x52\x5c\x9b\x04\x91\xfb\x1a\x20\x08\xae\x2b\x72\x28\x6d\x4d\xee\xb2\xbb\x4b\xc9\x82\xcf\xdf\xfd\x61\x66\x97\x14\x29\xc9\x4e\xee\x5a\x3c\xbc\xa7\x3f\x2c\x91\x3b\x33\x3b\x33\x3b\xbf\xd7\xb5\xc8\x6e\xc4\x12\x21\x2b\x25\x2a\x37\x1e\xcb\xaa\xd6\xc6\x41\x34\x1e\x4d\x16\x5b\x87\x76\x32\x1e\x4d\x32\xad\x1c\xde\x3a\xfa\x89\x2a\xd3\xb9\x54\xcb\xf4\x57\xab\x15\xbf\x30\x46\x1b\x86\x2a\x2a\x86\x90\x3a\x95\xba\x71\xb2\xa4\x87\x52\x2f\xe9\xab\x12\x6e\x95\x1a\xa1\x72\x7a\x50\xe8\xc2\x57\xba\x72\xae\xa6\xdf\x76\xab\x32\xfa\x76\xb2\xc2\xc9\x78\x3c\x9a\x2c\xa5\x5b\x35\x8b\x24\xd3\x55\x2a\x0a\xbc\x4d\x57\x5b\xeb\x8c\xbc\x3d\x59\xea\xf6\xe7\x64\x08\x95\x6b\xa5\xd7\x42\xad\x64\x8e\x29\xae\x51\x39\xab\x1b\x93\xe1\x64\x3c\xd2\x35\x2a\x67\x44\x26\xd5\x12\xfa\x18\xbd\xf7\xfd\xdf\x27\x4b\x3d\x19\x8f\x9c\x58\xda\xcf\x84\x4e\x83\x66\x96\xba\x14\x6a\x99\x68\xb3\x4c\x6f\x53\x12\x2e\x68\x2d\xcd\xdc\x6d\x90\xb3\xd4\xcb\x25\x1a\x98\x2c\x75\x7d\xb3\x4c\xa4\x4a\x2f\x4a\x5c\xa3\x49\x6f\xc4\x76\x8d\x78\xb2\xd4\xc9\xfa\x65\xea\x81\x26\xe3\x78\x3c\x4e\x53\xc8\x35\x1a\x90\x16\x84\x02\xa9\x1c\x9a\x42\x64\x08\x85\x36\x30\xc9\xb5\x54\xcb\x09\x10\x69\x30\xf8\x5b\x83\xd6\x59\xa8\xb5\xb5\x72\x51\x6e\x61\x23\xdd\x0a\x36\x46\xd4\xb5\x54\xcb\xb1\xdb\xd6\x18\x48\x75\x44\xee\xc6\xa3\x4b\x1d\x65\xf0\x94\x28\x24\x17\x7c\xfc\x53\x30\xe1\xf9\x9d\xa7\x18\x43\xd4\x3e\xdb\x5a\x2b\x8b\x53\xe0\x03\x8f\xc7\xf7\x63\x4f\x55\xd7\xaf\x45\x85\x17\xee\x16\xac\x33\x4d\xe6\xee\xee\x99\xef\x85\xb0\x18\x68\xbc\x12\x2a\x2f\xd1\x40\x8d\xa6\xd0\xa6\xb2\xe0\x56\xc8\xeb\x03\xde\x3d\x35\x7a\x7d\x49\x7c\xee\x88\x15\x8d\xca\x20\xca\xbb\xa5\x18\x7e\x07\xdb\x24\xb5\x41\xd7\x18\x05\xe1\x58\x92\x4b\x1d\x99\xe4\xc2\x9f\x55\x14\x4f\x21\x9b\x82\x17\x2f\x4d\x21\x9c\x32\x73\x24\xf2\xdc\xb6\x2f\xc0\xe9\xa1\xe2\x3d\xf7\x7d\x70\x2f\x00\xed\x97\xb3\xe6\xc7\x3d\x51\x7a\x70\xbf\x57\x9a\xf1\x28\x73\xb7\x70\x76\x0e\x3d\x19\xc8\xe6\xe9\x50\xe8\x75\xe6\x6e\x93\xff\x16\x65\x83\x51\x77\x50\x77\xf7\x71\x12\x91\x0f\xa9\x65\x3c\x1e\xad\x85\x01\x5b\x43\xcf\xa6\x93\x79\x2d\xd4\x78\x94\xa6\x70\xfd\xe6\xf2\xcd\x19\x09\x0e\xec\x0f\x06\x4b\xe1\x82\xf4\x52\xd5\x8d\x83\x5c\x38\xf1\x9f\xe3\x91\x2c\xa0\x16\x06\x95\x23\x4c\xda\x75\x9f\xda\x77\x46\x57\x2d\x7b\x99\xbb\x8d\xbf\xee\xc3\x7f\x71\x0e\x4a\x96\xa4\xa9\x91\xad\x61\x0f\xd9\x09\xc3\x50\x81\xfd\xe9\x60\xf5\x62\x25\xcb\xfc\x4d\x11\xed\x88\xed\x94\x10\xc7\xe3\xd1\x3d\x60\x69\xf1\xf3\x28\x13\xb8\xf7\x7b\xe6\xf8\xef\x52\xe5\xc9\x1c\x5d\x64\xeb\x29\x0c\xde\xbe\x7b\x7b\xe1\xcf\xe9\x4a\x35\x55\xcc\xc2\xa3\x31\x24\xb5\xad\x93\x6b\x23\x32\x34\x51\x9c\x7c\xaf\x7e\xc5\x8c\xb0\x7b\xa6\x35\x1e\xf5\x83\x51\xf2\xea\xfa\xfa\xed\x2b\x14\x39\x1a\xfb\xc8\xd2\x85\x30\x46\xa2\x89\x4c\xe2\x5f\xc4\xf1\xd7\xbc\x5f\x4f\x6b\xc1\xa0\x95\x2c\xa7\x50\x54\x2e\xb9\x22\xe3\x28\xa2\x49\xa6\x9b\x32\x57\x4f\x1c\x48\x66\xa6\x33\xde\x95\xa7\x0c\xd1\x97\xeb\x78\xc2\xb6\xe4\x85\x0f\x74\xf2\x24\x27\xa7\xe8\xfb\x81\x41\x67\xb6\xad\x1f\xd3\x83\x44\x0b\x2f\x66\xef\x8f\x39\x01\xc3\x1e\xb8\xc0\xee\xc3\xce\x30\x62\xa8\xb7\xba\x94\xd9\x16\xde\xed\x7e\x87\xfd\x7a\x6f\x20\xc7\x42\x2a\xb4\x20\x3c\x65\xa8\xf9\x75\xe2\x37\xeb\x03\x0e\x42\x5b\x9a\xc2\xb7\x22\xbb\xd1\x45\x41\x76\x4b\x72\xf9\xb8\xa3\x9a\x6a\x41\xce\xac\x72\x70\xb2\x22\x6d\xe8\x22\x10\x16\xce\x61\x55\x3b\x9b\x8c\x47\x2d\x6a\x14\xc3\x87\x8f\x94\x94\x92\xcb\xc6\x08\x27\xb5\xf7\x0b\xde\x15\x0c\x66\x28\xd7\xe8\xe9\xf6\x15\x31\x05\x61\x61\x83\x65\x49\xdf\xb4\x68\xd0\x36\xa5\x03\x5d\x30\x76\x9b\xf8\x82\xbb\x3f\xb1\xf0\xcb\xa5\xfe\x05\x2a\x74\x2b\x9d\x27\xe3\x11\x53\x8f\x06\x11\x60\x0a\x0f\x04\x80\x85\xd6\x65\xd0\xd9\x5c\xaa\x65\x89\x8f\x69\xce\xad\x84\xeb\x4e\x4f\xb4\xdc\x82\x56\x19\x7a\x6d\x1e\x92\x18\xc4\xf4\x23\x0a\x15\x0e\xb6\xba\x01\xbb\x22\x53\xeb\xb6\xc1\x8e\xf6\xa9\xc5\x4c\xab\x1c\x44\xe1\x28\xf9\x38\x28\x84\x2c\x6d\x12\x22\xe1\xc1\x7e\x31\x3c\xac\xf9\x5e\xe8\xde\x5b\xb9\x3b\x85\xa7\xc0\x6f\xe6\xbc\xdb\x7d\xdf\x8a\x60\x23\xcb\x32\x70\xa6\xb4\x3a\x79\xfb\x66\x7e\x3d\xf5\xbf\xbe\xb9\xbe\x78\xb5\x4b\x9d\x2c\xcc\x8b\xf7\xef\x93\x71\x17\xf9\xbe\x77\x64\xad\x16\x94\x76\x90\x35\x86\x82\x4c\xb9\x6d\xad\x45\x6d\xfd\x21\xb4\xea\xc0\x1c\x16\xdb\x07\x0e\xf7\x11\x81\xfd\x69\x1b\xfc\x0d\xf6\x4e\xdc\xa0\xad\x8f\x1d\x7b\xff\xe8\x49\x27\x21\xfe\x84\x78\xf0\xcf\x7f\x92\x44\xc9\x8f\x6c\x4c\x70\x7e\x0e\x13\x12\x78\x72\xec\x3d\x89\x4f\x0b\x1c\x41\x6c\x4d\x11\xd1\x35\xf6\x42\xe7\x08\xff\x01\x2f\x66\xb3\x7e\x6c\x29\x44\x69\xb1\x1f\x24\x9c\x69\x30\xa8\xf9\xea\xb6\xd6\x0a\x95\x93\xa2\x3c\x6a\x7d\x0a\x70\x07\x31\x70\x62\x6f\x75\x0f\xe0\x3f\x6e\x7a\x85\x5c\x53\xb5\x10\xde\x72\xb5\xd3\xdb\xa5\xa4\x68\x90\x19\x14\x96\x3c\x7c\x23\xa4\x63\xfb\xb0\x5c\x99\xa0\xdb\x20\xaa\xee\xe0\xcf\xe0\x74\x36\x9b\xc2\x73\xfa\xf3\x17\xfa\xf3\x57\xfa\x43\x01\xe2\xf4\xe5\x6c\x06\x95\x2c\x4b\xe9\xad\xd8\xc2\xb3\xf4\x04\x9a\x9a\xf2\xdf\x8b\x2f\xe1\x57\xe9\x1c\x9a\xf6\x68\x8f\x4b\xf1\x19\x06\x4d\x99\xa3\x12\x37\x18\xed\x2d\x4f\xe1\x45\x3c\x1e\x29\xbc\x65\x88\xd3\xd9\xac\x35\xf2\x1f\x77\x1c\x8d\x47\x46\xe5\x9c\xfd\x85\xca\x93\xd7\xb8\x89\xda\x1f\x73\x2e\x7f\x23\x46\x78\xad\x37\x51\x9c\xfc\xa4\xe4\xed\x6b\xa1\xb4\x4f\x8d\x5c\x1c\xcc\x92\xd9\x0b\x48\x53\x16\xeb\x05\xd5\x67\x19\x2a\x17\xe4\x1a\x8f\xa8\xca\x94\x81\xf8\x92\xe3\x7a\x6b\x11\x1f\xe4\x47\x38\x07\x66\xed\x19\x0c\x98\x8e\xa2\xc8\xa8\x3c\xf9\xae\xd4\xc2\xbd\xfc\x4b\x14\x3f\x7d\x1e\x9f\x9c\xc6\x4f\xf1\x69\x11\xde\x10\x12\xed\xef\x05\x7b\x7a\x0e\xcf\xfb\x56\x65\xd0\xfd\x9f\xf5\xdd\x87\x0e\xf8\xff\xbf\x03\xbf\xd6\xc7\xb3\x86\x77\x52\x4a\x90\x8a\xda\x14\xaf\x3c\x72\xa8\x2e\x77\x84\x2c\x3c\x24\xf0\xb8\xe3\x52\x38\xa8\x6a\xb7\x05\x5b\xca\x0c\x5b\xe5\x0e\x28\xfc\x9b\x59\x60\x18\xf6\x45\xb9\x11\xdb\x5e\xbc\x20\xf9\x1f\xd8\xed\x5f\x4d\xb8\x3d\x1e\xbc\x5a\xdb\x5e\x88\x15\x14\xea\xbd\xa1\x1a\x7e\x96\x6e\xd5\xd7\x51\xa7\x0d\x50\xb8\x81\xd0\x29\x7a\x33\xd6\x6b\x34\x46\xe6\xa1\xae\xf0\x6d\x39\xe8\x05\x55\x70\x4f\x6c\x57\x8c\x75\x65\x10\x4b\xb4\x47\x9e\x6a\xec\x96\x68\x5b\x7f\x4e\xe1\x81\x92\x2b\xde\x87\xec\xf7\x48\x61\x85\xe8\xfb\x2e\x22\x73\xb7\xd3\x81\x9c\x77\xf7\x03\xca\x71\xbf\xcf\x79\xda\xd5\x82\x7f\x44\xd3\xd6\x6e\x31\x05\x7d\xb3\xd7\xf1\x84\x16\x67\xc8\x57\x9c\x44\x7d\x31\xd9\xd1\xbe\xd0\x37\xad\x57\x74\xba\x38\x87\x3c\xe9\x3d\xb3\x93\x74\x99\x85\xf6\xd9\xad\x25\x3b\xc3\xf4\x9d\xd3\x11\x1f\xf7\x0b\x9d\x9f\x8f\xb9\xe6\x9b\x8b\x35\x0e\x0a\xa3\x85\xce\x29\x47\x41\x46\x7d\xf0\x06\x61\xc5\x00\xda\x6f\x96\xc0\x1b\xb7\x42\xb3\x91\x7e\x8d\xa3\x20\x03\x88\xd2\xa0\xc8\xc9\x7c\x44\xce\x74\xb9\x95\x6e\x8a\x02\x0d\x68\xd5\x45\xb7\x7c\xb0\x15\xa3\x53\xdd\x95\xc0\x1c\x91\xd1\x88\xe1\xb3\x34\xb5\x8e\xc4\x59\xa3\x29\x4a\xbd\xe1\x31\x07\x63\x48\xad\x6c\xfa\xfc\xcf\xb3\xaf\x66\x7f\xfd\xea\x65\x4a\x7b\x49\xb5\x3c\x21\x8e\x4f\x74\x71\x42\xb8\x27\x81\xf6\x09\x25\x5e\xdd\xb8\x93\x4a\xe7\xb2\xa0\xd8\xd0\xad\x58\x27\x5c\xd0\xc5\xa2\x29\xe0\xc3\xc7\xc5\x96\x9e\x65\x01\x26\xf9\x96\x84\xef\x35\x30\x43\x85\x8d\x46\x8b\xa6\xf0\x91\xf2\x1c\xfc\x28\x29\x79\x87\x22\xff\xa6\x2c\x23\x8f\x4b\xf9\x63\x18\x35\x89\xca\xa0\x0f\x42\x43\x84\xee\xe9\x30\x7d\x26\x6b\xeb\x5e\x4a\x7b\x5f\x73\xf4\xfb\xba\x7d\xf7\xec\x19\xe3\x1f\x65\x6d\x64\x72\xee\xed\x02\x1f\xaf\x75\x7d\x51\x6a\x8b\x26\xe2\xe1\x18\x65\xda\x6f\x59\xfd\xd1\xa2\x29\x38\xaf\x8d\x02\x8d\x73\x30\x79\x60\x81\xa3\x73\x2b\xd0\xa0\xbb\xf2\x9b\x06\xce\xce\xcf\xa1\x44\x15\xb5\xa6\x17\x53\xc8\xff\xa2\x6f\x7c\x21\xd3\xf8\xcc\xe2\xfb\x36\xcf\xe3\xc2\xa0\xb8\x09\x7b\xa5\x29\x30\x87\x6d\xe3\xc1\x36\xe9\xcd\x8d\x0d\x83\x0c\x64\x29\xa4\x6a\x93\x06\x31\x9b\x30\x06\xd9\xf4\xc8\x97\xd1\x25\x62\xdd\x31\xf2\x21\x30\xf8\x31\x1e\xa6\xea\xc0\x43\x88\xba\x99\x34\x59\x23\xdd\xb7\xc4\x0a\x1a\xee\xff\x64\x55\x97\x58\xa1\x72\x21\x94\x79\x08\x58\x78\x10\xa8\xa9\xe1\x32\x8a\x73\xf6\x1c\x1d\xe4\xb8\x68\x78\xb6\x40\x87\x43\xdf\xba\x46\x23\x1c\x0e\x90\xa5\x02\x01\x15\xa5\xb8\xcd\x0a\x0d\x52\x4b\xc1\xf6\xad\x55\xb9\x85\x52\x2f\x7b\xac\x00\x9b\xa0\x2f\xe5\x18\x86\x4a\x81\x45\xa9\xb3\x1b\x2e\x00\xba\xe2\xa1\x30\xba\x82\xa5\xe6\xc1\xc6\xca\xe8\x66\xb9\x0a\x69\xed\x88\x48\x8f\xb5\xb4\x9e\x7f\xff\xe1\xbe\x6c\x14\x08\xf0\x2c\xc6\x0f\x5c\xba\x19\x20\x7f\xfc\xef\xe4\xef\x3c\xfe\xfb\x81\x1f\x48\x9b\xe4\x0e\x01\x75\x3e\xbf\x7a\xa3\x32\x04\xbb\x55\x59\x42\xbf\x58\xd7\xaf\xfc\x08\x74\x3e\xbf\xba\x5a\x53\x76\x90\x16\xb0\xa2\xaa\x8d\xcb\x98\xdd\xac\x14\xd6\x52\x80\x45\xb3\x46\x73\x62\x09\xd0\x4f\x46\x13\x2e\x8e\xd0\x66\x46\x2e\x7c\x4d\x4c\x1a\x66\x6d\x51\xb2\x17\xed\xe6\x41\x0d\xfb\xbb\xed\x74\x70\x4d\xcb\x8f\x7c\xbc\xcc\xf0\xcb\xaf\x56\xab\xb3\x09\x11\x9b\xfc\x32\x1e\xb1\x3a\x3e\x1b\x4b\x89\x8a\xb1\x42\x92\xb8\xd0\x8d\x72\xc7\xb0\xa4\x7f\x1d\xb0\x4c\x0f\x9a\xb0\x79\x24\xf2\x20\xee\x3e\x36\x76\xd0\x1d\xee\x5b\x5f\x1c\x8b\xe5\x21\xeb\x47\x70\x77\xd0\x44\xe0\x7b\x7b\x31\xb0\xa4\x37\x35\xaa\x3e\x01\xae\x29\x3a\x02\xf2\x08\x34\x2b\x40\x97\xa5\x54\x4b\x66\xeb\x3b\x21\xcb\xc6\xe0\x63\x0a\x38\x84\x3e\x24\x52\x96\xe4\xe3\x7d\x62\x8f\x11\x19\x40\x3f\x44\x6c\xde\x64\x19\x5a\xfb\x99\xc4\x02\xf4\x3e\xb1\xf9\x4a\x1b\x17\xb4\x80\xf9\xa7\xc4\x1b\x42\x1f\xd0\xea\x31\xf4\x69\x55\x3d\xc0\xd0\xf5\x8a\xb2\xe0\x5b\xad\xcb\x77\x48\x85\x18\x31\xf5\x30\x91\x43\xe8\x03\x7a\xb2\x42\xdd\xb8\xcf\x64\x2a\x40\x13\x91\x0b\xdf\xc9\x5c\x68\x15\x7a\x9a\xab\x5b\xcc\x1a\xca\xd8\xde\xb8\x87\x44\xb2\xc7\xa1\x89\xe0\x0f\xc2\xa1\xca\xb6\xd7\xda\x89\xf2\x47\x14\xea\x71\xe3\x2e\x7b\xd0\xff\xa8\x50\x90\x61\xb6\xf5\x5e\xa9\x97\x1c\x1f\xa2\xf2\x58\x5c\x9b\xc2\x41\x20\xe1\xe4\x55\x26\xdf\xab\x42\x5f\x46\x98\xf8\xf1\x6e\x25\xea\x0f\x3e\x00\x7c\xec\xe6\x79\x77\xf7\x94\xe5\x86\x3e\x7d\x76\xcc\x8b\x31\xe9\x47\x89\x29\x21\xf5\x5c\xf9\x28\x0a\x21\xed\x82\xc3\x0e\xa5\xe7\xc1\x87\x78\x01\x65\x07\xc3\x78\x47\x1d\xf7\x6c\x88\x77\x2c\x14\x30\xf2\x31\x7f\x3d\xdb\x17\xee\x10\xe6\x08\xee\xd0\x4d\xcf\x8e\xe2\x0e\x60\x1e\xa4\xd1\x3a\xc3\x63\x34\x02\xcc\x01\x8d\x3d\xa7\x3c\x3b\x26\xc3\x10\xe6\x90\xc4\x60\xfb\xe3\x6a\x78\x68\xfb\x23\x2e\x78\xb6\x8f\x7b\x08\x73\x48\x26\x78\xde\x63\x2c\x04\x18\xc6\xfd\x94\xc3\x9d\x01\x26\x9f\x70\x61\xa6\x53\xee\x79\xe5\xa1\x0d\x62\xb2\xef\xb9\xd3\xf1\xe8\x3e\x1e\x0f\xda\xaf\xc3\x02\x26\x06\xa9\xa4\x8b\xe2\x30\x22\x7f\x8b\x46\xea\x5c\x66\x3c\x31\x2b\xf5\xd2\xcf\xd0\x95\x28\x87\x35\x14\x15\x63\xc2\x5a\x69\xb9\xfe\xb2\xe8\x1c\x97\x32\xbd\x52\xcb\xad\x0c\xda\x95\x2e\x73\xcb\xe5\x56\xa3\x72\x34\xd6\x09\x95\xf3\xb8\xa0\xae\x4b\x99\xf9\xf6\x7d\x81\x2b\xb1\x96\xda\x24\x8c\xfe\x93\x2a\xb4\x71\x8d\x12\x0e\xcb\xed\xb4\x5f\xb9\xe4\x1a\xad\x7a\xe2\x42\xdb\x03\x4b\x83\xc2\xc1\x46\x6c\x89\x15\xbc\xad\x7d\x81\x2b\x2d\x53\xc9\x85\x13\x53\xb0\x9a\x7a\x25\x83\x56\x1b\xc7\x55\x64\x63\x14\xcf\xf7\x15\x48\x67\xc1\x36\x35\x5f\x6c\x53\x2f\xb0\x30\x5a\xe4\x99\xb0\x07\x62\x54\x54\xe9\x66\x96\xeb\x26\x9e\xe8\x1f\x16\x4f\x10\xcd\xe7\x57\xb1\x67\x7f\x8e\x7e\xf0\x6f\xcf\xd2\xf4\x91\x1b\x6b\x69\x6d\x83\x36\x7d\xf1\x32\xe9\x4a\xc2\x50\xd7\x51\x27\x40\xa7\xe5\x0f\x64\x14\x70\xe6\xce\xa0\xa8\xda\xeb\x96\xb3\xf3\x56\x2f\x3c\xd7\xeb\xaf\x71\xc5\x7e\x0c\xc9\xdf\x6e\xf1\x72\x29\xad\x43\xc5\x01\xd8\xdf\x52\x29\x74\xc9\x0f\xfc\x32\x9a\xb8\xac\x9e\x4c\x61\x72\xfa\xfc\xab\x64\x96\xcc\x92\xd3\xb3\xd9\xe4\x81\xde\xaa\x16\x4a\x66\x91\xbf\x2a\xe2\x9e\x6a\xb4\xf4\x57\xa0\xc9\x9c\x54\x14\xed\xb6\x39\xc6\x4f\xec\xe1\x7b\xa2\x92\xfa\x7e\x46\xb6\x39\x5c\xa3\xd9\xc2\xe9\x0c\xda\x29\xeb\x02\x33\xd1\x84\x0e\x86\xa8\xa1\x91\xb7\xdd\xd1\x08\x83\x74\xa4\x02\x4e\x67\x27\xed\x10\x94\xa9\x05\xbf\x85\x8d\x54\xb9\xde\x24\x70\xbd\x92\x16\x4a\x74\x4f\x2c\x34\x74\xfc\x15\x4f\x6e\x8f\x91\x74\x1a\x96\xc8\x57\x13\xa6\xdc\x06\x6a\x22\xcb\x1a\xdf\x7c\x90\x7f\x85\x6b\x23\x0b\x91\xd2\xdc\x90\x08\xc7\xe6\x07\x92\x8d\xb4\x46\x53\x60\xe6\x3a\xc6\x75\x63\xc2\xed\x52\xa0\xd6\x5a\x73\x00\x2c\xb7\x50\x09\x97\xad\x3a\x56\x9e\xd8\xd0\xa6\x50\x8b\x6f\x35\xab\x65\xb3\x42\x75\xac\x6f\x0a\x24\x2d\x0f\xfb\x20\x5b\x09\xb5\x44\xcb\x9d\x67\xa9\x97\xdf\x71\x92\x54\xd9\xd6\xcf\x8c\x87\xf7\x22\x0c\x23\xac\xe3\xec\x3b\x47\x54\x7e\xf4\xdc\x25\xdc\xbd\xfc\x7c\x77\x3f\x40\xf8\x41\x2f\x29\xd4\xed\xe1\x30\x79\x7a\x7f\xc7\x46\xc1\xad\xf6\x3f\xa0\x9d\x19\x87\xd5\xec\x26\xda\xbb\xa2\x89\xe1\x0e\xba\x51\x96\x54\x3c\x73\x94\x14\x04\x88\xc6\xa8\x31\x25\x6d\x33\x09\x63\x8a\x09\x3c\x83\xd6\xbe\x92\x6f\xf2\xdc\x44\x71\x32\xe7\xed\xd9\xc2\xa9\x91\xfd\xad\x33\x6f\xb6\xc9\xd7\xb8\x09\x95\x40\x34\xf9\xaf\xab\xeb\xc9\x14\x1a\x53\x4e\xc9\x9a\x3d\xc2\x11\x03\x67\xf5\x25\x6f\x8d\x54\xae\x88\x7c\x0d\x00\x99\x56\x0a\xb3\xf6\xca\xbb\x3d\x87\xf9\xfc\x8a\x7a\x14\x14\xd5\x19\x7c\x69\xbb\x0b\x54\xfa\x64\x5a\x39\xa9\x1a\xe4\x27\x56\xdf\xc8\x43\x76\xec\xf5\xfe\x37\x25\x99\x37\x0b\xdf\x83\xfd\x2c\xdd\x2a\x9a\x4c\xa6\xf0\xa7\xde\x7c\xcc\x0f\xd6\x7e\xfb\x5f\x67\x98\x4e\x10\xd7\xbb\xb9\xbf\xc7\x4c\xae\x7c\xf4\x0b\x5b\xf3\xc4\x66\xbf\xa0\xf3\x4b\xbb\xfb\x70\xaa\x19\x93\x9f\x54\x25\x8c\x5d\x89\x32\xf2\x23\xa0\x08\xd7\xc9\xa5\x70\x22\x8a\xe3\x29\xfc\x09\x0f\x6f\xb3\x0f\xd8\x0a\x7c\x31\xe1\x84\x5b\xce\x2f\xce\x61\x12\xf6\xbe\xd0\x55\x25\x54\x3e\x79\x1c\x95\x8c\x98\x0c\xbe\x1d\x1d\x0e\xbc\xe0\x83\xaf\x3d\x3f\xee\x40\x0f\x96\xe0\x1c\x70\xec\xd7\xd3\x94\xbd\xb3\xef\x98\x3e\x47\xca\x02\x24\x05\x1b\x94\x6e\xe5\xbd\x94\x81\xa3\xd3\x98\x81\x0b\x69\x6c\xc8\x21\xb0\xc1\x27\x6b\x04\x4b\x1e\x48\xda\xee\xd3\xd2\x3d\xcc\xe7\xf1\x70\x89\xda\x46\xbf\xd7\x4a\xb4\x9e\x9f\x0f\x30\xfe\x1c\xf7\xe3\x28\xe7\xce\x5a\x58\x8b\x39\x58\xa9\x32\x1e\x26\x72\x6d\x9e\x83\xd5\x15\xba\x15\x19\xca\x1e\x07\x9d\xae\xdb\x51\xe9\xe8\x48\x10\xe8\xe9\x65\x77\xc3\xd4\xc2\xb6\x7d\x40\x9e\x94\x6d\xe9\x1f\x7f\xe2\x5c\xdb\xf3\x39\x5a\x1f\xd3\x71\x1f\xaf\x9c\xff\x68\xfe\xc2\xff\x8b\xc8\xa2\x87\x45\x5e\x1a\x3d\x44\x3f\x86\xbf\xc1\x20\xea\xfe\xd1\x0c\xed\xfc\x92\xfe\xdc\x13\xce\x7d\xfc\xc9\x1a\xef\x77\xce\xda\x65\x01\x79\xe2\xa7\x59\x77\x83\xe9\xe5\xd9\xc1\xf8\xb2\xad\x4c\x2e\x75\x94\x27\xbd\x71\xd7\xb4\xcd\xf5\x3e\x2e\xb1\x5a\x8e\xc5\xb0\x30\x4c\xf4\xd3\x5a\x2f\x28\x4f\x44\x87\xb7\x59\x7f\x3b\xef\xae\xb3\x46\xfe\x3f\x28\x30\x0f\xc3\x72\xc2\x16\x2a\x6c\xc3\xb3\x43\xc9\xf3\xb5\xbe\xd3\x84\x3c\xdc\xdb\x4c\x1b\x1e\xdd\x46\x93\x17\xef\xdf\x73\xc5\xe3\xb7\x1e\x70\x73\xdf\xe5\x8b\x83\x89\x27\x17\x40\x9f\x39\xfe\x1f\xf9\xb1\xef\xbf\xa0\xa8\xc7\xa7\xc5\x0f\x0c\xbd\xbb\x79\xf7\xa7\xf4\xf7\x6f\xab\xef\x11\xed\xdd\x8f\x87\x7c\x78\xd5\x41\xfa\x14\x94\x86\x22\x74\x8a\x2c\xa8\xbf\xd8\xde\xa2\x83\xa7\x69\x7c\x74\x96\xfc\x3f\x01\x00\x00\xff\xff\x96\x55\x88\x81\x90\x2a\x00\x00")

func _hardcodedDoerGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedDoerGo,
		"../_hardcoded/doer.go",
	)
}

func _hardcodedDoerGo() (*asset, error) {
	bytes, err := _hardcodedDoerGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/doer.go", size: 10896, mode: os.FileMode(420), modTime: time.Unix(1515722742, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __hardcodedMiddlewareGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\xdd\x6f\xdc\xc6\x11\x7f\x3e\xfe\x15\x53\x16\xb1\x49\x81\xe6\xb9\x05\x9a\x07\x05\x57\x20\x50\xe4\x4a\xa8\x15\x0b\xfa\x68\x1e\x82\xa0\xd8\x23\x87\xe4\xfa\x78\xbb\xec\xee\xf0\x78\x07\x41\xff\x7b\x31\xbb\x4b\x1e\x4f\x92\x01\xbf\x25\x40\x24\x6a\x66\xe7\xfb\x37\x1f\xee\x44\xb1\x11\x35\x82\x45\xb3\x43\x13\x45\x72\xdb\x69\x43\x90\x44\x8b\xb8\xd0\x8a\x70\x4f\x71\xb4\x88\xab\xad\xfb\xa5\x90\x96\x0d\x51\xc7\xdf\xa6\x57\x24\xb7\xb8\x2c\x71\xdd\xd7\x71\x14\x2d\x74\x87\x8a\x8c\x28\xa4\xaa\x21\xae\x25\x35\xfd\x3a\x2f\xf4\x76\x39\xa3\xcf\xbf\x3f\xd4\x3a\x8e\x16\x24\x6a\xfb\x9d\xaf\x97\xc1\x97\x5a\x77\x9b\x3a\x97\x6a\x79\xd1\xe2\x0e\xcd\x72\x23\x0e\x3b\xc4\x0f\xb5\xce\x77\x3f\x2e\x5b\x5d\xd7\x68\xe2\x28\x8d\xa2\xe5\x12\x6e\x85\x92\xc5\x8d\x2c\xcb\x16\x07\x61\x10\x5a\x5d\x5b\x10\xea\x00\x1d\x33\x6c\x0e\x9f\xb4\x01\xa5\x87\x0c\x06\x7c\x6f\x10\x38\x62\xa9\x7a\x04\x6a\x8c\x1e\x38\x10\x6a\xd0\x3f\x86\xbe\x63\x8d\xfc\xb7\x25\x51\x6c\xc0\x6a\xa0\x46\x5a\xd8\x8a\x03\x14\x46\xd8\xc6\xbf\x35\xba\x40\x6b\xf3\xa8\xea\x55\xf1\xd2\x7e\xd2\x00\x67\x2f\xbf\x12\xaa\x6c\xd1\xa4\x27\x7f\xc1\x53\xb4\x30\x48\xbd\x51\x27\xe4\x4f\xbd\x2a\x12\x56\x96\x0c\x9e\x7e\x87\xb6\xd3\xca\xe2\x6f\x46\x12\x9a\x0c\x0c\x9c\x05\xfa\xff\x7a\xb4\x94\xb2\x9e\x45\x89\x15\x1a\x70\x62\x9e\xb0\x70\x41\x5c\x1a\x03\xe7\x2b\x30\x58\xe8\x1d\x9a\x24\x65\x86\xac\x60\xe2\xad\x56\xa0\x64\xeb\x05\x82\x33\xfc\xf9\xcc\x3f\x76\xc2\x00\x1a\xf7\xbf\x36\x11\x53\xec\x20\xa9\x68\x60\xae\x79\xfc\xce\x13\x3a\x74\x18\x4c\x17\xc2\x72\xd2\x8c\x54\xf5\xb9\xd3\xcc\x6a\x56\x50\x6d\x29\xbf\x64\x65\x55\x32\x8a\xa5\xd3\x73\x67\x65\xfe\x7a\x7c\xc2\xa4\x12\x2b\xd1\xb7\xf4\x0d\x65\x71\xaf\x36\x4a\x0f\x2a\xd4\xed\x87\xbf\xee\x40\x57\xc0\xfe\xc0\x0f\x0f\x71\x36\x69\x3a\x7e\xa5\x3e\x48\xfe\xe9\xf1\x93\x7f\x32\x7a\x7b\xe1\xe1\x9f\x98\x7c\xfc\x4a\x53\x6f\xe3\x97\x24\x76\xa2\x71\xe6\x3c\x08\x32\x37\x4f\x31\x1a\x13\x9f\xb3\xef\x19\xc4\x0e\x25\x8c\x5e\x8c\xcf\x43\xf4\x89\xeb\x95\xfc\x9e\x39\x49\x9a\x3e\xa7\x53\x61\x4e\x32\xf0\xec\x0a\xd3\xe4\xf7\xdc\x92\x57\x0f\x0f\xb7\xc9\x90\x01\x73\x9e\xd3\xe8\xd9\xe1\xda\x92\xa0\xde\x9e\x22\x01\x06\x23\x3a\x0b\x02\x4c\x20\xc3\xe0\xe8\x91\x8b\xfc\x4d\x09\x4b\xa6\x2f\x88\x8b\xf4\x06\xb2\xa2\x85\x97\x01\xa9\x88\xcd\x3a\x40\x27\x16\xce\xde\x52\x95\x82\xfb\x7d\x85\xa2\x44\x93\x14\xba\x44\x16\x73\xf5\xb7\x79\xd0\xb3\x02\xa6\x33\xe1\x54\x36\x7f\x29\xea\xa2\x74\x5e\x87\xe6\xff\xd2\xfd\x2a\xb6\x18\xdc\x7d\xf2\x29\xf8\x4d\x52\xf3\x70\xc2\x16\x65\x69\x5d\x0f\xea\x0e\x14\x13\x48\x83\x80\x30\xc4\xa0\xd2\x06\x7a\x8b\xb0\x3e\xb8\x37\xe3\xa0\x6a\xe5\xda\x08\x73\xc8\xe1\x9a\x98\x6d\x59\xb5\x80\x4e\x4b\xc5\x09\x5a\x63\x21\x58\x48\xd2\x7b\x0b\x85\x68\x5b\x2c\x61\x8d\xad\x1e\x40\xaa\xd9\x28\x10\xaa\xf4\x86\x55\x7b\x80\x41\x1c\xd8\x72\x27\xac\xf7\x46\xaa\x4a\x87\xe1\x21\x2d\x73\x1a\xb1\x63\x8d\x20\xc0\x22\x1d\x8d\xe5\x70\xb9\x43\xd6\xaa\xfb\xba\x61\x7e\xa9\xd1\xaa\xf7\x04\x45\x23\x54\x8d\x4e\xd7\x18\xcc\xc0\x96\x65\xdb\x3a\x5d\x7e\x2c\x49\x0b\x61\x7a\x1c\x63\x26\x0d\x5b\x21\x15\x89\xe0\xad\x6c\xdb\xde\x4a\xad\xc2\x74\x7a\x95\xc2\xa4\xa0\xfd\x28\x3c\x82\x3e\x03\x3d\x65\x5f\xaa\x3a\x7d\xc9\x77\x25\x26\x73\x4b\xae\xff\x0b\xda\xe7\xff\x11\x6d\x8f\xc9\x49\xe9\x9e\x9e\xd3\x3c\x39\x0b\x1a\x22\x1e\x39\x41\xe4\x2f\xc7\x81\x73\x16\x48\xab\x60\x30\xe2\xb1\x13\x42\x2a\x68\x1f\x90\x1f\xfc\x85\xc2\xa0\x20\x64\xb8\x2b\x1c\xc0\x76\x42\xb9\x9a\x97\x20\x2a\x2e\x1c\x47\xfb\x78\xf7\x19\x3a\x41\x8d\xeb\xfe\x06\xc1\xf8\x01\x99\xb3\x9a\x6b\x82\xae\x15\x05\x5a\x9f\x39\x27\x1f\x92\x14\x9e\x8d\x71\x66\x73\xe4\x68\x6a\xd0\x40\xe3\x27\xb3\x85\x9d\x14\x30\xdb\x51\xf9\x7d\x27\xd4\x7c\x72\xa4\xce\x54\xc5\x95\x66\x03\xb8\x97\x96\xb8\x9f\x26\x1b\x8d\x03\xbd\xcd\x3c\x96\xf8\x8d\x8f\xab\xf4\x30\xe5\xed\x72\x5c\x5e\x03\x17\x7c\x8d\x5c\xdf\x46\xb6\xa5\x0f\x4b\x90\x93\x0b\x15\x0d\xd9\xf9\x33\x36\xce\x72\x09\x3f\x13\xe1\xb6\x73\xb0\xfb\xaa\xa5\x1a\xc3\x5e\x1f\xa0\x46\x22\xb7\x4d\x79\x1c\xfa\x8e\xa8\x8c\xde\xba\xb0\x43\x0e\x72\xaf\xe3\x41\x73\x4f\x19\x82\x41\x52\xe3\xd2\x3e\x96\x52\x8c\xcd\xed\xd1\x28\x55\x81\xdc\x07\xdc\x01\xdc\x25\xb5\x26\xe2\xf6\xd1\xbe\x88\xba\x67\x18\x1c\xb8\xc1\x54\xe9\x55\xcf\xe8\xbc\x1f\x2c\x88\xb5\xee\x29\x28\xb4\xd1\x62\x11\x54\xf3\x82\xcc\x1f\xef\x3e\xe7\xb7\x82\x9a\xc8\x2f\x3e\xdb\xbd\x2a\x74\xe4\x56\xa7\x2d\x32\xb7\x15\xcf\x57\x27\x0f\xfe\xd5\xea\xb5\x68\xb9\x1c\xbc\x66\x39\xb6\xc5\xe5\x9e\x99\x94\xcc\x9f\xf1\x70\xbf\x0a\x18\x70\xab\xe4\x1b\xcc\x0b\x61\x8c\x44\x93\x98\xdc\x13\xd2\xf4\x27\x67\x75\xd6\x3e\x0b\xdb\xc1\xa9\x0f\xf7\x9c\x47\xf6\x34\xf1\x81\xb9\xd5\x02\xd8\x5a\xfc\x4e\x81\xec\x84\x7b\xc1\xa0\xfb\x52\x25\xb6\x48\x9d\xa6\xe9\xca\xb0\x5d\xfe\x49\x2a\x69\x9b\x24\x8d\x7c\xa6\xa5\xfa\x8a\x85\x07\x26\x5c\xff\xc2\x9b\x40\xfb\xd3\x8b\x27\xb2\x2c\xe7\x1d\xe0\x36\x62\x2d\x55\x1d\x2d\x16\xc4\x59\xdc\x8a\x0d\x26\x5b\xd1\xfd\xee\xa7\xc5\x1f\xd3\xd0\xe0\x6c\x87\x4c\xdb\x2e\x9f\x52\x7b\xed\x6c\x25\xb6\x3b\x6e\xe9\x53\xbf\x1f\x70\x4f\x37\xa2\x73\xf9\x7d\x83\x3e\xa6\x96\xc6\x9c\xce\x6f\x20\x2e\x30\x6f\xe6\x32\x03\xbd\x61\xcb\xf4\x7b\xac\xe9\x83\x83\xb1\xf9\xe0\x59\xf1\x1f\x3f\x31\xf3\x69\x7e\x0a\x7c\xf3\x7c\xf8\xb9\x2c\xc7\xbf\x5e\x2b\xca\x82\xb1\x74\xbc\xb9\xdc\x49\x62\xbb\xfc\xb3\xae\x79\x37\x50\x12\x87\xb4\xfd\xd7\x60\x81\x72\x87\x65\x9c\xbe\x79\xec\xbd\x29\x53\xb9\x22\x05\x19\x7f\x63\x28\x1c\x2e\x68\xff\x12\xbc\xc1\x43\x5e\x0f\x0e\x0d\x66\x9e\x5a\xdb\xa5\xbe\xc8\x8f\x96\x47\x91\x2f\xcf\xb4\x30\xad\x86\x56\x1c\x78\x36\xfa\x35\x59\x08\x05\x5b\x5d\xca\xea\x00\x92\x38\x98\x69\x53\xc4\xf1\xd1\xfe\x6a\x5a\x2a\x6c\xd3\xef\x0f\xcf\xca\xe0\xc5\x1e\xc9\xe0\x9d\xd7\xe1\xb0\x66\xcd\xc0\xba\xde\xbd\x75\x92\xf8\x44\x38\xc6\x39\x8c\xff\xfd\xfd\xe3\x47\x07\x84\xd3\xa7\xe7\x30\x64\x63\xba\xf9\x1f\x24\xae\xf5\x6e\x90\x1a\x5d\xe6\xf7\xc8\xe0\xca\xc0\xe4\x9e\x90\x8e\x6f\x38\x35\xff\x96\xea\xf8\xe2\x84\x7a\x77\x7b\xe1\xce\x37\x73\xa9\xfa\x6d\x3a\xd7\xfb\x68\xda\x99\xd2\x71\xce\xb8\x70\x5e\x17\x72\x92\xba\x77\x81\x5c\xe8\x12\x27\xe1\x5e\x2a\xfa\xdb\x8f\x89\x35\x43\xb8\xb0\xd2\xf1\x9e\x3f\x92\xe0\x9f\x2b\xf8\xc7\xc7\x8f\x01\x9d\x4e\x9b\xbb\x60\x8f\x4e\x9b\x1e\x27\xbc\x71\x59\x7f\xd5\x83\x5f\x2b\x61\xb6\xce\x87\x6e\x8b\x7c\x07\x91\x39\xf0\xe5\xe2\x06\xba\x2b\xea\x62\x1a\x17\xae\x47\x7c\xe5\xbe\xe3\x0c\x70\xbe\xea\x0d\xbc\x7b\x37\x1a\x98\xcf\x33\x06\xf1\x3d\xd2\x97\x0e\x8d\x20\xa9\x95\x3b\x50\xce\x8e\xa3\xcc\x77\x88\x9f\x39\xf3\x5b\xd9\x1a\xbe\x96\x1d\x92\x46\xd8\x7a\x8f\xd2\xf1\x82\xfe\x7f\x00\x00\x00\xff\xff\xa3\xdc\x93\xdc\xf3\x0e\x00\x00")

func _hardcodedMiddlewareGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedMiddlewareGo,
		"../_hardcoded/middleware.go",
	)
}

func _hardcodedMiddlewareGo() (*asset, error) {
	bytes, err := _hardcodedMiddlewareGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/middleware.go", size: 3827, mode: os.FileMode(420), modTime: time.Unix(1493241193, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../_hardcoded/doer.go":       _hardcodedDoerGo,
	"../_hardcoded/middleware.go": _hardcodedMiddlewareGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"..": &bintree{nil, map[string]*bintree{
		"_hardcoded": &bintree{nil, map[string]*bintree{
			"doer.go":       &bintree{_hardcodedDoerGo, map[string]*bintree{}},
			"middleware.go": &bintree{_hardcodedMiddlewareGo, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
