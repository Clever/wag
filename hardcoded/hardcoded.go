// Code generated by go-bindata.
// sources:
// _hardcoded/doer.go
// _hardcoded/middleware.go
// DO NOT EDIT!

package hardcoded

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __hardcodedDoerGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x39\x7f\x6f\xdb\x3a\x92\x7f\x4b\x9f\x62\x6a\xe0\x6d\xa5\xd4\x95\x92\xee\xa6\x77\x70\x2f\x7b\xd8\x97\xa4\xd7\x62\xfb\xda\xa0\xce\xbb\x2d\x50\x14\xaf\xb4\x34\x96\xd9\x48\xa4\x4a\x52\x76\x8c\xbc\x7c\xf7\xc3\x90\x94\x2c\xd9\x8e\xdb\xf7\x03\x87\x3b\xff\x61\xcb\xe4\xcc\x70\x66\x38\xbf\x55\xb3\xec\x86\x15\x08\x59\xc9\x51\x98\x30\xe4\x55\x2d\x95\x81\x28\x0c\x46\x99\x14\x06\x6f\xcd\x28\x0c\x46\x28\x32\x99\x73\x51\xa4\x5f\xb4\x14\x76\x41\x29\xa9\x34\x3d\xcd\x2b\x0b\x51\xca\x82\x7e\x2a\x66\x16\xa9\x62\x22\xa7\x3f\x02\x8d\xff\x49\x17\xc6\xd4\xf4\xac\xd7\x22\xa3\x5f\xc3\x2b\x1c\x85\x61\x30\x2a\xb8\x59\x34\xb3\x24\x93\x55\xca\xe6\x78\x9b\x2e\xd6\xda\x28\x7e\xfb\xb4\x90\xed\xe3\x68\x08\x95\x4b\x21\x97\x4c\x2c\x78\x8e\x29\x2e\x51\x18\x2d\x1b\x95\xe1\x28\x0c\x64\x8d\xc2\x28\x96\x71\x51\x40\x1f\xa3\xb7\xde\x7f\x7e\x5a\xc8\x51\x18\x18\x56\xe8\xef\x84\x4e\xbd\x32\x0a\x59\x32\x51\x24\x52\x15\xe9\x6d\x4a\xc2\x79\x45\xa5\x99\xb9\xf5\x72\x96\xb2\x28\x50\xc1\xa8\x90\xf5\x4d\x91\x70\x91\x9e\x97\xb8\x44\x95\xde\xb0\xf5\x12\xf1\x69\x21\x93\xe5\xf3\xd4\x01\x8d\xc2\x38\x0c\xd3\x14\x72\x89\x0a\xb8\x06\x26\x80\x0b\x83\x6a\xce\x32\x84\xb9\x54\x30\xca\x25\x17\xc5\x08\x88\x34\x28\xfc\xda\xa0\x36\x1a\x6a\xa9\x35\x9f\x95\x6b\x58\x71\xb3\x80\x95\x62\x75\xcd\x45\x11\x9a\x75\x8d\x9e\x54\x47\xe4\x2e\x0c\x2e\x64\x94\xc1\x11\x51\x48\xce\xed\x45\x8f\x41\xf9\xff\xef\x1d\xc5\x18\xa2\xf6\xbf\xae\xa5\xd0\x38\x06\x7b\xc7\x71\x78\x1f\x3a\xaa\xb2\x7e\xcb\x2a\x3c\x37\xb7\xa0\x8d\x6a\x32\x73\x77\x6f\xf9\x9e\x31\x8d\x9e\xc6\x2b\x26\xf2\x12\x15\xd4\xa8\xe6\x52\x55\x1a\xcc\x02\xed\xfe\x80\x77\x47\x8d\x96\x2f\x88\xcf\x0d\xb1\x79\x23\x32\x88\xf2\x6e\x2b\x86\x3f\xc0\x36\x49\xad\xd0\x34\x4a\x80\xbf\x96\xe4\x42\x46\x2a\x39\x77\x77\x15\xc5\x63\xc8\xc6\xe0\xc4\x4b\x53\xf0\xb7\x6c\x39\x62\x79\xae\xdb\x05\x30\x72\xa8\x78\xc7\x7d\x1f\xdc\x09\x40\xe7\xe5\x56\xf3\x61\x4f\x94\x1e\xdc\x1f\x95\x26\x0c\x32\x73\x0b\x93\x33\xe8\xc9\x40\x36\x4f\x97\x42\xcb\x99\xb9\x4d\xfe\x9b\x95\x0d\x46\xdd\x45\xdd\xdd\xc7\x49\x44\x3e\x24\x8a\x38\x0c\x96\x4c\x81\xae\xa1\x67\xd3\xc9\xb4\x66\x22\x0c\xd2\x14\xae\xdf\x5d\xbc\x9b\x90\xe0\x60\xfd\x41\x61\xc9\x8c\x97\x9e\x8b\xba\x31\x90\x33\xc3\xfe\x33\x0c\xf8\x1c\x6a\xa6\x50\x18\xc2\xa4\x53\xb7\xa9\xbd\x54\xb2\x6a\xd9\xcb\xcc\x6d\xfc\xa2\x0f\xff\xe8\x0c\x04\x2f\x49\x53\x81\xae\x61\x0b\xd9\x30\x65\xa1\x3c\xfb\xe3\xc1\xee\xf9\x82\x97\xf9\xbb\x79\xb4\x21\xb6\x51\x42\x1c\x87\xc1\x3d\x60\xa9\xf1\xfb\x28\x13\xb8\xf3\x7b\xcb\xf1\x3f\xb9\xc8\x93\x29\x9a\x48\xd7\x63\x18\xac\xbe\xbf\x3a\x77\xf7\x74\x29\x9a\x2a\xb6\xc2\xa3\x52\x24\xb5\xae\x93\x6b\xc5\x32\x54\x51\x9c\xbc\x16\x5f\x30\x23\xec\x9e\x69\x85\x41\x3f\x18\x25\xaf\xae\xaf\xaf\x5e\x21\xcb\x51\xe9\x03\x5b\xe7\x4c\x29\x8e\x2a\x52\x89\x5b\x88\xe3\x17\xf6\xbc\x9e\xd6\xbc\x41\x0b\x5e\x8e\x61\x5e\x99\xe4\x92\x8c\x63\x1e\x8d\x32\xd9\x94\xb9\x78\x6c\x80\x5b\x66\x3a\xe3\x5d\x38\xca\x10\xfd\xb0\x8c\x47\xd6\x96\x9c\xf0\x9e\x4e\x9e\xe4\xe4\x14\x7d\x3f\x50\x68\xd4\xba\xf5\x63\xfa\xc3\x51\xc3\xe9\xf1\x87\x7d\x4e\x60\x61\x77\x5c\x60\xf3\xb1\xce\x10\x58\xa8\x2b\x59\xf2\x6c\x0d\xef\x37\xcf\xfe\xbc\xde\x0a\xe4\x38\xe7\x02\x35\x30\x47\x19\x6a\xbb\x9c\xb8\xc3\xfa\x80\x83\xd0\x96\xa6\xf0\x23\xcb\x6e\xe4\x7c\x4e\x76\x4b\x72\xb9\xb8\x23\x9a\x6a\x46\xce\x2c\x72\x30\xbc\x22\x6d\xc8\xb9\x27\xcc\x8c\xc1\xaa\x36\x3a\x09\x83\x16\x35\x8a\xe1\xe3\x27\x4a\x4a\xc9\x45\xa3\x98\xe1\xd2\xf9\x85\x3d\x15\x14\x66\xc8\x97\xe8\xe8\xf6\x15\x31\x06\xa6\x61\x85\x65\x49\xbf\xb4\xa9\x50\x37\xa5\x01\x39\xb7\xd8\x6d\xe2\xf3\xee\xfe\x58\xc3\xe7\x0b\xf9\x19\x2a\x34\x0b\x99\x27\x61\x60\xa9\x47\x83\x08\x30\x86\x07\x02\xc0\x4c\xca\xd2\xeb\x6c\xca\x45\x51\xe2\x21\xcd\x99\x05\x33\xdd\xed\xb1\x96\x5b\x90\x22\x43\xa7\xcd\x5d\x12\x83\x98\xbe\x47\xa1\xcc\xc0\x5a\x36\xa0\x17\x64\x6a\xdd\x31\xd8\xd1\x3e\xd1\x98\x49\x91\x03\x9b\x1b\x4a\x3e\x06\xe6\x8c\x97\x3a\xf1\x91\x70\xe7\xbc\x18\x1e\xd6\x7c\x2f\x74\x6f\xed\xdc\x9d\xc0\x11\xd8\x95\xa9\x3d\xed\xbe\x6f\x45\xb0\xe2\x65\xe9\x39\x13\x52\x3c\xbd\x7a\x37\xbd\x1e\xbb\xa7\x7f\x5c\x9f\xbf\xda\xa4\x4e\x2b\xcc\xe9\x87\x0f\x49\xd8\x45\xbe\xd7\x86\xac\x55\x83\x90\x06\xb2\x46\x51\x90\x29\xd7\xad\xb5\x88\xb5\xbb\x84\x56\x1d\x98\xc3\x6c\xfd\xc0\xe5\x1e\x10\xd8\xdd\xb6\xc2\xaf\xb0\x75\xe3\x0a\x75\xbd\xef\xda\xfb\x57\x4f\x3a\xf1\xf1\xc7\xc7\x83\x5f\x7f\x25\x89\x92\x9f\xac\x31\xc1\xd9\x19\x8c\x48\xe0\xd1\xbe\x75\x12\x9f\x36\x6c\x04\xd1\x35\x45\x44\xd3\xe8\x73\x99\x23\xfc\x07\x9c\x1e\x1f\xf7\x63\xcb\x9c\x95\x1a\xfb\x41\xc2\xa8\x06\xbd\x9a\x2f\x6f\x6b\x29\x50\x18\xce\xca\xbd\xd6\x27\x00\x37\x10\x03\x27\x76\x56\xf7\x00\xfe\x61\xd3\x9b\xf3\x25\x55\x0b\x7e\xd5\x56\x3b\xbd\x53\x4a\x8a\x06\x99\x42\xa6\xc9\xc3\x57\x8c\x1b\x6b\x1f\xda\x56\x26\x68\x56\x88\xa2\xbb\xf8\x09\x9c\x1c\x1f\x8f\xe1\x19\x7d\xfd\x8d\xbe\xfe\x9d\xbe\x28\x40\x9c\x3c\x3f\x3e\x86\x8a\x97\x25\x77\x56\xac\xe1\x49\xfa\x14\x9a\x9a\xf2\xdf\xe9\x0f\xf0\x85\x1b\x83\xaa\xbd\xda\xfd\x52\x7c\x87\x41\x53\xe6\xa8\xd8\x0d\x46\x5b\xdb\x63\x38\x8d\xc3\x40\xe0\xad\x85\x38\x39\x3e\x6e\x8d\xfc\xa7\x0d\x47\x61\xa0\x44\x6e\xb3\x3f\x13\x79\xf2\x16\x57\x51\xfb\x30\xb5\xe5\x6f\x64\x11\xde\xca\x55\x14\x27\x3f\x0b\x7e\xfb\x96\x09\xe9\x52\xa3\x2d\x0e\x8e\x93\xe3\x53\x48\x53\x2b\xd6\x29\xd5\x67\x19\x0a\xe3\xe5\x0a\x03\xaa\x32\xb9\x27\x5e\xd8\xb8\xde\x5a\xc4\x47\xfe\x09\xce\xc0\xb2\xf6\x04\x06\x4c\x47\x51\xa4\x44\x9e\xbc\x2c\x25\x33\xcf\xff\x16\xc5\x47\xcf\xe2\xa7\x27\xf1\x11\x1e\xcd\xfd\x0a\x21\xd1\xf9\x4e\xb0\xa3\x33\x78\xd6\xb7\x2a\x85\xe6\xff\xac\xef\x3e\x74\xc1\xff\xff\x1d\xf8\xad\xdc\x9f\x35\x9c\x93\x52\x82\x14\xd4\xa6\x38\xe5\x91\x43\x75\xb9\xc3\x67\xe1\x21\x81\xc3\x8e\x4b\xe1\xa0\xaa\xcd\x1a\x74\xc9\x33\x6c\x95\x3b\xa0\xf0\x3b\xb3\xc0\x30\xec\xb3\x72\xc5\xd6\xbd\x78\x41\xf2\x3f\x70\xda\x6f\x4d\xb8\x3d\x1e\x9c\x5a\xdb\x5e\xc8\x2a\xc8\xd7\x7b\x43\x35\xfc\x8b\x9b\x45\x5f\x47\x9d\x36\x40\xe0\x0a\x7c\xa7\xe8\xcc\x58\x2e\x51\x29\x9e\xfb\xba\xc2\x35\xe0\x20\x67\x54\xc1\x3d\xd6\x5d\x31\xd6\x95\x41\x56\xa2\x2d\xf2\x54\x63\xb7\x44\xdb\xfa\x73\x0c\x0f\x94\x5c\xf1\x36\x64\xbf\x47\xf2\x3b\x44\xdf\x75\x11\x99\xb9\x1d\x0f\xe4\xbc\xbb\x1f\x50\x8e\xfb\x7d\xce\x51\x57\x0b\xfe\x19\x4d\x5b\x7b\xc4\x18\xe4\xcd\x56\xc7\xe3\x5b\x9c\x21\x5f\x71\x12\xf5\xc5\xb4\x8e\xf6\x48\xde\xb4\x5e\xd1\xe9\xe2\x0c\xf2\xa4\xf7\xdf\x3a\x49\x97\x59\xe8\x9c\xcd\x5e\xb2\x31\x4c\xd7\x39\xed\xf1\x71\xb7\xd1\xf9\xb9\x8b\xa3\x6d\xd5\x45\x41\xf7\x85\xf5\xbd\x17\xed\xda\x93\x27\x9e\x23\xea\x34\x08\xed\x6c\x58\x81\x07\xc4\x77\x8b\x7f\x76\x06\x25\x8a\xa8\x65\x2f\xa6\xb0\xf0\xa8\xcf\xa0\x8f\x46\x2e\xfa\xb8\xda\xde\x92\x0f\x66\x0a\xd9\x4d\x18\x90\x70\x54\x84\x9e\x97\x52\x63\x5b\x9c\x5a\xbe\x61\x26\xf3\xb5\x2b\x8c\xc9\x7d\x0a\xc6\x45\x1b\x58\x7e\x94\xf9\x3a\xb1\x18\x24\x77\xe0\x4a\xad\x12\xb1\xee\x18\xf9\xe8\x19\xfc\x14\x0f\xc3\xb9\xe7\xc1\x7b\x66\xc6\x55\xd6\x70\xf3\x23\xb1\x82\xca\xf6\x08\xbc\xaa\x4b\xac\x50\x18\x6f\xee\x0e\x02\x66\x0e\x04\x6a\x2a\xca\x95\xb0\x71\x7d\x8a\x06\x72\x9c\x35\xb6\xff\x24\x15\xd2\xaf\xac\x51\x31\x83\x03\x64\x2e\x80\x41\x45\x61\x70\xb5\x40\x85\x54\x76\xda\x44\x22\x45\xb9\x86\x52\x16\x3d\x56\x40\x1b\x66\xd0\xa5\x7b\x0b\x43\xe9\x62\x56\xca\xec\xc6\x26\x89\x2e\xc1\xcc\x95\xac\xa0\x90\xb6\xf9\x5d\x28\xd9\x14\x0b\x1f\xfa\xf6\x88\x74\xa8\xed\x71\xfc\xbb\x8f\xad\xdd\x03\x4f\xc0\xf6\xeb\xae\x29\xef\xe6\x44\xf6\xe3\x9e\x93\x7f\xda\x11\xd1\x1b\xfb\x87\xb4\x49\x36\xe6\x51\xa7\xd3\xcb\x77\x22\x43\xd0\x6b\x91\x25\xf4\x64\x75\xfd\xca\x8d\xc9\xa6\xd3\xcb\xcb\x25\x45\x10\xae\x01\x2b\xca\xec\x36\xd5\x6d\xe6\x69\xb0\xe4\x0c\x34\xaa\x25\xaa\xa7\x9a\x00\xdd\xf4\x2c\xb1\x09\x14\x75\xa6\xf8\xcc\xd5\x4d\xa4\x61\xab\x2d\x4a\x08\xac\x3d\xdc\xab\x61\xfb\xb4\x8d\x0e\xae\x69\xfb\xc0\xc7\xc9\x0c\x9f\xbf\x68\x29\x26\x23\x22\x36\xfa\x1c\x06\x56\x1d\xdf\x8d\x25\x58\x65\xb1\x7c\x20\x39\x97\x8d\x30\xfb\xb0\xb8\x5b\xf6\x58\xaa\x07\x4d\xd8\xb6\x6d\x7e\x10\x77\x1b\x1b\x3b\xe8\x0e\xf7\xca\x15\x50\xac\xd8\x65\x7d\x0f\xee\x06\x9a\x08\xbc\xd6\xe7\x03\x4b\x7a\x57\xa3\xe8\x13\xb0\x79\xa7\x23\xc0\xf7\x40\x5b\x05\xc8\xb2\xe4\xa2\xb0\x6c\xbd\x64\xbc\x6c\x14\x1e\x52\xc0\x2e\xf4\x2e\x91\xb2\x24\x1f\xef\x13\x3b\x44\x64\x00\xfd\x10\xb1\x69\x93\x65\xa8\xf5\x77\x12\xf3\xd0\xdb\xc4\xa6\x0b\xa9\x8c\xd7\x02\xe6\xdf\x12\x6f\x08\xbd\x43\xab\xc7\xd0\xb7\x55\xf5\x00\x43\xd7\x0b\x85\x2c\xbf\x92\xb2\x7c\x8f\x94\xac\x89\xa9\x87\x89\xec\x42\xef\xd0\xe3\x15\xca\xc6\x7c\x27\x53\x1e\x9a\x88\x9c\xbb\x6a\xf7\x5c\x0a\x5f\xf7\x5e\xde\x62\xd6\x50\x89\xe4\x8c\x7b\x48\x24\x3b\x0c\x4d\x04\xdf\x30\x83\x22\x5b\x5f\x4b\xc3\xca\x9f\x90\x89\xc3\xc6\x5d\xf6\xa0\x7f\xa9\x90\x91\x61\xb6\x35\x41\x29\x0b\x1b\x1f\xa2\x72\x5f\x5c\x1b\xc3\x4e\x20\xb1\xc9\xab\x4c\x5e\x8b\xb9\xbc\x88\x30\x71\x23\xc0\x8a\xd5\x1f\x5d\x00\xf8\xd4\xcd\x7c\xee\xee\x29\xcb\x0d\x7d\x7a\xb2\xcf\x8b\x31\xe9\x47\x89\x31\x21\xf5\x5c\x79\x2f\x0a\x21\x6d\x82\xc3\x06\xa5\xe7\xc1\xbb\x78\x1e\x65\x03\x63\xf1\xf6\x3a\xee\x64\x88\xb7\x2f\x14\x58\xe4\x7d\xfe\x3a\xd9\x16\x6e\x17\x66\x0f\xee\xd0\x4d\x27\x7b\x71\x07\x30\x0f\xd2\x68\x9d\xe1\x10\x0d\x0f\xb3\x43\x63\xcb\x29\x27\xfb\x64\x18\xc2\xec\x92\x18\x1c\xbf\x5f\x0d\x0f\x1d\xbf\xc7\x05\x27\xdb\xb8\xbb\x30\xbb\x64\xbc\xe7\x1d\x62\xc1\xc3\x58\xdc\x6f\x39\xdc\x04\x30\xf9\x86\x0b\x5b\x3a\xe5\x96\x57\xee\xda\x20\x26\xdb\x9e\x3b\x0e\x83\xfb\x38\x1c\x94\xe8\xbb\x05\x4c\x0c\x5c\x70\x13\xc5\x7e\x8c\x7a\x85\x8a\xcb\x9c\x67\x76\xaa\x52\xca\xc2\xcd\x59\x05\x2b\x87\x35\x14\x15\x63\x4c\x6b\xae\x6d\xfd\xa5\xd1\x18\x5b\xca\xf4\x4a\x2d\xb3\x50\xa8\x17\xb2\xcc\xb5\x2d\xb7\x1a\x91\xa3\xd2\x86\x89\xdc\xb6\x94\x75\x5d\xf2\xcc\xb5\x78\x33\x5c\xb0\x25\x97\x2a\xb1\xe8\x3f\x8b\xb9\x54\xa6\x11\xcc\x60\xb9\x1e\xf7\x2b\x17\xea\xef\xc5\x63\x03\x0b\xb6\x44\x60\x50\x28\x64\x06\x56\x6c\x4d\xac\xe0\x6d\xed\x0a\x5c\xae\x2d\x95\x9c\x19\x36\x06\x2d\x61\x65\x2b\x5e\xa9\x8c\xad\x22\x1b\x25\xec\x0c\x58\x00\x37\x1a\x74\x53\xdb\xd7\x9c\x54\xb1\xcf\x94\x64\x79\xc6\xf4\x8e\x18\x15\x55\xba\x99\xb6\x75\x93\x9d\xfa\xee\x16\x4f\x10\x4d\xa7\x97\xb1\x63\x7f\x8a\x6e\x38\xac\x27\x69\x7a\xe0\xad\x26\xd7\xba\x41\x9d\x9e\x3e\x4f\xba\x92\xd0\xd7\x75\xd4\x09\xd0\x6d\xb9\x0b\x09\x3c\xce\xd4\x28\x64\x55\x3b\x92\x9f\x9c\xb5\x7a\xb1\xb3\x9f\xfe\x9e\xad\xd8\xf7\x21\xb9\x37\x20\x76\xbb\xe4\xda\xa0\xb0\x01\xd8\xbd\xc9\x10\x68\x92\x37\x76\x31\x1a\x99\xac\x1e\x8d\x61\x74\xf2\xec\xdf\x92\xe3\xe4\x38\x39\x99\x1c\x8f\x7c\x53\xb2\xf5\x1a\x22\xa8\x99\xe0\x59\xe4\x5e\x27\x04\xf7\x61\x18\x04\x85\x7b\x4d\x96\x4c\x49\x45\xd1\xe6\x98\x7d\xfc\xc4\x0e\xbe\x27\x2a\xd5\xc1\x2f\x6d\x44\x17\xd9\x9a\xd8\xfa\xeb\xf1\x70\xd0\x6b\x61\x98\x36\x36\x55\x4c\x11\x85\x9b\xa5\x75\xd9\x61\x2b\x99\xdc\xdd\x0f\x10\xde\xc8\x82\xfc\x72\x0b\xc7\x92\xa7\xf5\x3b\x2b\x81\xed\xde\x7e\x81\x76\x08\xe6\x77\xb3\x9b\x68\x6b\xe6\x1c\xc3\x1d\x74\xbd\x39\x17\x76\x88\xc2\xc9\x62\x89\x46\xd0\xa8\x92\x8e\x19\x91\x32\x26\x69\x3a\x82\x27\xd0\x2a\x23\xf9\x47\x9e\xab\x28\x4e\xa6\xf6\x78\x7b\x1d\xd4\x75\x7d\xed\xee\xc2\x2a\xf0\x2d\xae\x7c\xda\x8a\x46\xff\x75\x79\x3d\x1a\x43\xa3\xca\x31\xa9\xde\x21\xec\xb9\x0d\xab\xbe\xe4\x4a\x71\x61\xe6\x91\x4b\x58\xd4\xcf\x0b\xcc\xda\x77\x78\xad\x45\x4f\xa7\x97\x54\x50\x23\xab\x26\xf0\x83\xee\xde\x08\xd1\x27\x93\xc2\x70\xd1\xa0\xfd\x67\xd5\x17\x38\xc8\x8e\xbd\xde\xcb\xf6\x64\xda\xcc\x5c\xc3\xf0\x2f\x6e\x16\xd1\x68\x34\x86\xbf\xf4\x1a\x7e\x37\x29\xf8\xfa\xbf\xce\x30\xdd\x20\x2e\x37\x83\x4c\x87\x99\x5c\x3a\x57\xf5\x47\xdb\x9e\x7d\xbb\xfa\x70\x5b\x9b\x17\x7c\x54\xe0\x24\x3f\x8b\x8a\x29\xbd\x60\x65\xf4\xf1\xd3\x6c\x6d\x30\xc2\x65\x72\xc1\x0c\x8b\xe2\x78\x0c\x7f\xc1\xdd\xd7\x73\x3b\x6c\x79\xbe\x2c\xe1\xc4\xf6\x47\x8f\xce\x60\xe4\xcf\x3e\x97\x55\xc5\x44\x3e\x3a\x8c\x4a\x46\x4c\x06\xdf\xce\x42\x06\x5e\xf0\xd1\x15\x4a\x9f\x36\xa0\x3b\x5b\x70\x06\x18\xba\xfd\x34\xb5\x51\xbd\xdf\x40\xbb\x80\xce\xe7\xc0\xcd\x63\x0d\xc8\xcd\x82\x7a\x57\x0f\x1c\x9d\xc4\x16\x78\xce\x95\xf6\x01\x0f\x56\xf8\x78\x89\xa0\xc9\x03\x49\xdb\x7d\x5a\xb2\x87\xf9\x2c\x1e\x6e\x51\x8f\xe3\xce\x5a\x30\x0d\xd9\x82\xae\x27\x1f\x60\xfc\x35\x26\xa7\x6f\xc7\xef\x36\xd0\xd7\x4c\x6b\xcc\x41\x73\xea\x79\x57\xe8\x0a\xc9\x1c\xb4\xac\xd0\x2c\xc8\x50\xb6\x38\xe8\x74\xdd\xce\x7e\x82\x3d\x41\xa0\xa7\x97\xcd\xc8\xbc\x85\x6d\x8b\xd6\x3c\x29\xdb\x3a\x35\xfe\xc6\xbd\xb6\xf7\xb3\xb7\x98\xa3\xeb\xde\x5f\xe6\xfd\xd9\xfc\xf9\x17\xe0\x7c\xde\xc3\x22\x2f\x8d\x1e\xa2\x1f\xc3\xdf\x61\x10\x75\xff\x6c\x86\x36\x7e\x49\x5f\xf7\x84\x73\x1f\x7f\xb3\x20\xf9\x83\xc3\x43\x3e\x87\x3c\x71\xa3\x97\xe1\xa8\x6d\xb2\x33\x6b\x6b\xd3\xe8\x85\x8c\xf2\xa4\x37\x9b\x19\xb7\x89\xc9\xc5\x25\xab\x96\x7d\x31\xcc\x4f\xbe\x50\xa9\x56\x46\x37\xbe\x1b\x8e\xe7\xff\x7e\xd6\xcd\xe7\x03\xf7\x4a\x18\x73\x0a\x70\x1e\x9b\x09\x7f\x8c\x1d\x74\x71\x3b\x0c\xea\x3b\x8d\x2d\x49\x06\x87\x49\xa5\xed\xeb\x9f\xd1\xe9\x87\x0f\x36\x3d\xbb\xa3\x07\xdc\xdc\x77\xf9\x62\x67\x3c\x67\xb3\xf5\xf7\xce\x33\xdd\x8c\xf2\x37\x28\xea\xf0\x68\x73\x5b\x85\x43\x9e\xc3\x6f\xea\xef\x77\xab\xef\x80\xf6\xee\xc3\x21\x1f\x4e\x75\x90\x1e\x81\x90\x30\xf7\x6d\x8d\x15\xd4\xbd\xa9\x5b\xa3\x81\xa3\x34\xde\x3b\xf8\xfc\x9f\x00\x00\x00\xff\xff\xcf\xa0\x83\x51\x4b\x27\x00\x00")

func _hardcodedDoerGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedDoerGo,
		"_hardcoded/doer.go",
	)
}

func _hardcodedDoerGo() (*asset, error) {
	bytes, err := _hardcodedDoerGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_hardcoded/doer.go", size: 10059, mode: os.FileMode(436), modTime: time.Unix(1490647601, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __hardcodedMiddlewareGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x57\xdd\x6f\xdc\xc6\x11\x7f\x3e\xfe\x15\x53\x16\xb1\x49\x81\xe6\xb9\x05\x9a\x07\x05\x57\x20\x50\xe4\x4a\xa8\x15\x0b\xfa\x68\x1e\x82\xa0\xd8\x23\x87\xe4\xfa\x78\xbb\xec\xee\xf0\x78\x07\x41\xff\x7b\x31\xbb\x4b\x1e\x4f\x92\x01\xbf\x25\x40\x24\x6a\x66\xe7\xfb\x37\x1f\xee\x44\xb1\x11\x35\x82\x45\xb3\x43\x13\x45\x72\xdb\x69\x43\x90\x44\x8b\xb8\xd0\x8a\x70\x4f\x71\xb4\x88\xab\xad\xfb\xa5\x90\x96\x0d\x51\xc7\xdf\xa6\x57\x24\xb7\xb8\x2c\x71\xdd\xd7\x71\x14\x2d\x74\x87\x8a\x8c\x28\xa4\xaa\x21\xae\x25\x35\xfd\x3a\x2f\xf4\x76\x39\xa3\xcf\xbf\x3f\xd4\x3a\x8e\x16\x24\x6a\xfb\x9d\xaf\x97\xc1\x97\x5a\x77\x9b\x3a\x97\x6a\x79\xd1\xe2\x0e\xcd\x72\x23\x0e\x3b\xc4\x0f\xb5\xce\x77\x3f\x2e\x5b\x5d\xd7\x68\xe2\x28\x8d\xa2\xe5\x12\x6e\x85\x92\xc5\x8d\x2c\xcb\x16\x07\x61\x10\x5a\x5d\x5b\x10\xea\x00\x1d\x33\x6c\x0e\x9f\xb4\x01\xa5\x87\x0c\x06\x7c\x6f\x10\x38\x62\xa9\x7a\x04\x6a\x8c\x1e\x38\x10\x6a\xd0\x3f\x86\xbe\x63\x8d\xfc\xb7\x25\x51\x6c\xc0\x6a\xa0\x46\x5a\xd8\x8a\x03\x14\x46\xd8\xc6\xbf\x35\xba\x40\x6b\xf3\xa8\xea\x55\xf1\xd2\x7e\xd2\x00\x67\x2f\xbf\x12\xaa\x6c\xd1\xa4\x27\x7f\xc1\x53\xb4\x30\x48\xbd\x51\x27\xe4\x4f\xbd\x2a\x12\x56\x96\x0c\x9e\x7e\x87\xb6\xd3\xca\xe2\x6f\x46\x12\x9a\x0c\x0c\x9c\x05\xfa\xff\x7a\xb4\x94\xb2\x9e\x45\x89\x15\x1a\x70\x62\x9e\xb0\x70\x41\x5c\x1a\x03\xe7\x2b\x30\x58\xe8\x1d\x9a\x24\x65\x86\xac\x60\xe2\xad\x56\xa0\x64\xeb\x05\x82\x33\xfc\xf9\xcc\x3f\x76\xc2\x00\x1a\xf7\xbf\x36\x11\x53\xec\x20\xa9\x68\x60\xae\x79\xfc\xce\x13\x3a\x74\x18\x4c\x17\xc2\x72\xd2\x8c\x54\xf5\xb9\xd3\xcc\x6a\x56\x50\x6d\x29\xbf\x64\x65\x55\x32\x8a\xa5\xd3\x73\x67\x65\xfe\x7a\x7c\xc2\xa4\x12\x2b\xd1\xb7\xf4\x0d\x65\x71\xaf\x36\x4a\x0f\x2a\xd4\xed\x87\xbf\xee\x40\x57\xc0\xfe\xc0\x0f\x0f\x71\x36\x69\x3a\x7e\xa5\x3e\x48\xfe\xe9\xf1\x93\x7f\x32\x7a\x7b\xe1\xe1\x9f\x98\x7c\xfc\x4a\x53\x6f\xe3\x97\x24\x76\xa2\x71\xe6\x3c\x08\x32\x37\x4f\x31\x1a\x13\x9f\xb3\xef\x19\xc4\x0e\x25\x8c\x5e\x8c\xcf\x43\xf4\x89\xeb\x95\xfc\x9e\x39\x49\x9a\x3e\xa7\x53\x61\x4e\x32\xf0\xec\x0a\xd3\xe4\xf7\xdc\x92\x57\x0f\x0f\xb7\xc9\x90\x01\x73\x9e\xd3\xe8\xd9\xe1\xda\x92\xa0\xde\x9e\x22\x01\x06\x23\x3a\x0b\x02\x4c\x20\xc3\xe0\xe8\x91\x8b\xfc\x4d\x09\x4b\xa6\x2f\x88\x8b\xf4\x06\xb2\xa2\x85\x97\x01\xa9\x88\xcd\x3a\x40\x27\x16\xce\xde\x52\x95\x82\xfb\x7d\x85\xa2\x44\x93\x14\xba\x44\x16\x73\xf5\xb7\x79\xd0\xb3\x02\xa6\x33\xe1\x54\x36\x7f\x29\xea\xa2\x74\x5e\x87\xe6\xff\xd2\xfd\x2a\xb6\x18\xdc\x7d\xf2\x29\xf8\x4d\x52\xf3\x70\xc2\x16\x65\x69\x5d\x0f\xea\x0e\x14\x13\x48\x83\x80\x30\xc4\xa0\xd2\x06\x7a\x8b\xb0\x3e\xb8\x37\xe3\xa0\x6a\xe5\xda\x08\x73\xc8\xe1\x9a\x98\x6d\x59\xb5\x80\x4e\x4b\xc5\x09\x5a\x63\x21\x58\x48\xd2\x7b\x0b\x85\x68\x5b\x2c\x61\x8d\xad\x1e\x40\xaa\xd9\x28\x10\xaa\xf4\x86\x55\x7b\x80\x41\x1c\xd8\x72\x27\xac\xf7\x46\xaa\x4a\x87\xe1\x21\x2d\x73\x1a\xb1\x63\x8d\x20\xc0\x22\x1d\x8d\xe5\x70\xb9\x43\xd6\xaa\xfb\xba\x61\x7e\xa9\xd1\xaa\xf7\x04\x45\x23\x54\x8d\x4e\xd7\x18\xcc\xc0\x96\x65\xdb\x3a\x5d\x7e\x2c\x49\x0b\x61\x7a\x1c\x63\x26\x0d\x5b\x21\x15\x89\xe0\xad\x6c\xdb\xde\x4a\xad\xc2\x74\x7a\x95\xc2\xa4\xa0\xfd\x28\x3c\x82\x3e\x03\x3d\x65\x5f\xaa\x3a\x7d\xc9\x77\x25\x26\x73\x4b\xae\xff\x0b\xda\xe7\xff\x11\x6d\x8f\xc9\x49\xe9\x9e\x9e\xd3\x3c\x39\x0b\x1a\x22\x1e\x39\x41\xe4\x2f\xc7\x81\x73\x16\x48\xab\x60\x30\xe2\xb1\x13\x42\x2a\x68\x1f\x90\x1f\xfc\x85\xc2\xa0\x20\x64\xb8\x2b\x1c\xc0\x76\x42\xb9\x9a\x97\x20\x2a\x2e\x1c\x47\xfb\x78\xf7\x19\x3a\x41\x8d\xeb\xfe\x06\xc1\xf8\x01\x99\xb3\x9a\x6b\x82\xae\x15\x05\x5a\x9f\x39\x27\x1f\x92\x14\x9e\x8d\x71\x66\x73\xe4\x68\x6a\xd0\x40\xe3\x27\xb3\x85\x9d\x14\x30\xdb\x51\xf9\x7d\x27\xd4\x7c\x72\xa4\xce\x54\xc5\x95\x66\x03\xb8\x97\x96\xb8\x9f\x26\x1b\x8d\x03\xbd\xcd\x3c\x96\xf8\x8d\x8f\xab\xf4\x30\xe5\xed\x72\x5c\x5e\x03\x17\x7c\x8d\x5c\xdf\x46\xb6\xa5\x0f\x4b\x90\x93\x0b\x15\x0d\xd9\xf9\x33\x36\xce\x72\x09\x3f\x13\xe1\xb6\x73\xb0\xfb\xaa\xa5\x1a\xc3\x5e\x1f\xa0\x46\x22\xb7\x4d\x79\x1c\xfa\x8e\xa8\x8c\xde\xba\xb0\x43\x0e\x72\xaf\xe3\x41\x73\x4f\x19\x82\x41\x52\xe3\xd2\x3e\x96\x52\x8c\xcd\xed\xd1\x28\x55\x81\xdc\x07\xdc\x01\xdc\x25\xb5\x26\xe2\xf6\xd1\xbe\x88\xba\x67\x18\x1c\xb8\xc1\x54\xe9\x55\xcf\xe8\xbc\x1f\x2c\x88\xb5\xee\x29\x28\xb4\xd1\x62\x11\x54\xf3\x82\xcc\x1f\xef\x3e\xe7\xb7\x82\x9a\xc8\x2f\x3e\xdb\xbd\x2a\x74\xe4\x56\xa7\x2d\x32\xb7\x15\xcf\x57\x27\x0f\xfe\xd5\xea\xb5\x68\xb9\x1c\xbc\x66\x39\xb6\xc5\xe5\x9e\x99\x94\xcc\x9f\xf1\x70\xbf\x0a\x18\x70\xab\xe4\x1b\xcc\x0b\x61\x8c\x44\x93\x98\xdc\x13\xd2\xf4\x27\x67\x75\xd6\x3e\x0b\xdb\xc1\xa9\x0f\xf7\x9c\x47\xf6\x34\xf1\x81\xb9\xd5\x02\xd8\x5a\xfc\x4e\x81\xec\x84\x7b\xc1\xa0\xfb\x52\x25\xb6\x48\x9d\xa6\xe9\xca\xb0\x5d\xfe\x49\x2a\x69\x9b\x24\x8d\x7c\xa6\xa5\xfa\x8a\x85\x07\x26\x5c\xff\xc2\x9b\x40\xfb\xd3\x8b\x27\xb2\x2c\xe7\x1d\xe0\x36\x62\x2d\x55\x1d\x2d\x16\xc4\x59\xdc\x8a\x0d\x26\x5b\xd1\xfd\xee\xa7\xc5\x1f\xd3\xd0\xe0\x6c\x87\x4c\xdb\x2e\x9f\x52\x7b\xed\x6c\x25\xb6\x3b\x6e\xe9\x53\xbf\x1f\x70\x4f\x37\xa2\x73\xf9\x7d\x83\x3e\xa6\x96\xc6\x9c\xce\x6f\x20\x2e\x30\x6f\xe6\x32\x03\xbd\x61\xcb\xf4\x7b\xac\xe9\x83\x83\xb1\xf9\xe0\x59\xf1\x1f\x3f\x31\xf3\x69\x7e\x0a\x7c\xf3\x7c\xf8\xb9\x2c\xc7\xbf\x5e\x2b\xca\x82\xb1\x74\xbc\xb9\xdc\x49\x62\xbb\xfc\xb3\xae\x79\x37\x50\x12\x87\xb4\xfd\xd7\x60\x81\x72\x87\x65\x9c\xbe\x79\xec\xbd\x29\x53\xb9\x22\x05\x19\x7f\x63\x28\x1c\x2e\x68\xff\x12\xbc\xc1\x43\x5e\x0f\x0e\x0d\x66\x9e\x5a\xdb\xa5\xbe\xc8\x8f\x96\x47\x91\x2f\xcf\xb4\x30\xad\x86\x56\x1c\x78\x36\xfa\x35\x59\x08\x05\x5b\x5d\xca\xea\x00\x92\x38\x98\x69\x53\xc4\xf1\xd1\xfe\x6a\x5a\x2a\x6c\xd3\xef\x0f\xcf\xca\xe0\xc5\x1e\xc9\xe0\x9d\xd7\xe1\xb0\x66\xcd\xc0\xba\xde\xbd\x75\x92\xf8\x44\x38\xc6\x39\x8c\xff\xfd\xfd\xe3\x47\x07\x84\xd3\xa7\xe7\x30\x64\x63\xba\xf9\x1f\x24\xae\xf5\x6e\x90\x1a\x5d\xe6\xf7\xc8\xe0\xca\xc0\xe4\x9e\x90\x8e\x6f\x38\x35\xff\x96\xea\xf8\xe2\x84\x7a\x77\x7b\xe1\xce\x37\x73\xa9\xfa\x6d\x3a\xd7\xfb\x68\xda\x99\xd2\x71\xce\xb8\x70\x5e\x17\x72\x92\xba\x77\x81\x5c\xe8\x12\x27\xe1\x5e\x2a\xfa\xdb\x8f\x89\x35\x43\xb8\xb0\xd2\xf1\x9e\x3f\x92\xe0\x9f\x2b\xf8\xc7\xc7\x8f\x01\x9d\x4e\x9b\xbb\x60\x8f\x4e\x9b\x1e\x27\xbc\x71\x59\x7f\xd5\x83\x5f\x2b\x61\xb6\xce\x87\x6e\x8b\x7c\x07\x91\x39\xf0\xe5\xe2\x06\xba\x2b\xea\x62\x1a\x17\xae\x47\x7c\xe5\xbe\xe3\x0c\x70\xbe\xea\x0d\xbc\x7b\x37\x1a\x98\xcf\x33\x06\xf1\x3d\xd2\x97\x0e\x8d\x20\xa9\x95\x3b\x50\xce\x8e\xa3\xcc\x77\x88\x9f\x39\xf3\x5b\xd9\x1a\xbe\x96\x1d\x92\x46\xd8\x7a\x8f\xd2\xf1\x82\xfe\x7f\x00\x00\x00\xff\xff\xa3\xdc\x93\xdc\xf3\x0e\x00\x00")

func _hardcodedMiddlewareGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedMiddlewareGo,
		"_hardcoded/middleware.go",
	)
}

func _hardcodedMiddlewareGo() (*asset, error) {
	bytes, err := _hardcodedMiddlewareGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_hardcoded/middleware.go", size: 3827, mode: os.FileMode(436), modTime: time.Unix(1490646113, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"_hardcoded/doer.go":       _hardcodedDoerGo,
	"_hardcoded/middleware.go": _hardcodedMiddlewareGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"_hardcoded": &bintree{nil, map[string]*bintree{
		"doer.go":       &bintree{_hardcodedDoerGo, map[string]*bintree{}},
		"middleware.go": &bintree{_hardcodedMiddlewareGo, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
