// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../_hardcoded/doer.go (10.342kB)
// ../_hardcoded/middleware.go (1.685kB)
// ../_hardcoded/tracing.go (6.391kB)

package hardcoded

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __hardcodedDoerGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x5a\xff\x6f\xdb\x46\xb2\xff\x59\xfa\x2b\x26\x02\xee\x42\x26\x32\x25\xe7\xce\xed\x41\x7d\x3e\xa0\x75\xdc\xd7\x02\x69\x12\x54\xee\x6b\x80\x20\xb8\xae\xc8\x91\xb4\xcd\x72\x57\xdd\x5d\x5a\x16\x7c\xfe\xdf\x1f\x66\x76\x49\x91\x12\xe5\xe4\xae\xc5\xc3\xbb\x00\xb1\x25\x72\xe6\xb3\xb3\xb3\xf3\x7d\xbd\x11\xf9\x47\xb1\x42\xc8\x95\x44\xed\x87\x43\x59\x6e\x8c\xf5\x90\x0c\x07\xa3\xc5\xce\xa3\x1b\x0d\x07\xa3\xdc\x68\x8f\x77\x9e\x3e\xa2\xce\x4d\x21\xf5\x6a\xf2\xab\x33\x9a\x1f\x58\x6b\x2c\x53\x49\x33\x91\xa6\xf2\x52\xd1\x17\x65\x56\xf4\xab\x14\x7e\x3d\xb1\x42\x17\xf4\x45\xa3\x8f\xbf\x26\x6b\xef\x37\xf4\xd9\xed\x74\x4e\xbf\xbd\x2c\x71\x34\x1c\x0e\xb6\xb9\x82\xd1\x4a\xfa\x75\xb5\xc8\x72\x53\x4e\xae\x14\xde\xa2\x9d\x6c\xc5\x8a\xfe\x07\x19\x95\x59\xad\xd0\x12\x75\x9b\x52\x2c\xf1\x6e\xb2\xde\x39\x6f\xe5\xdd\xd9\xca\xd4\x1f\x47\x5d\xaa\xc2\x68\x73\x2b\xf4\x5a\x16\x38\xc1\x5b\xd4\xde\x99\xca\xe6\x38\x1a\xa6\xc3\xe1\x64\x02\x85\x41\x0b\xd2\x81\xd0\x20\xb5\x47\xbb\x14\x39\xc2\xd2\x58\x18\x15\x46\xea\xd5\x08\x48\x6e\xb0\xf8\x5b\x85\xce\x3b\xd8\x18\xe7\xe4\x42\xed\x60\x2b\xfd\x1a\xb6\x56\x6c\x36\x52\xaf\x86\x7e\xb7\xc1\x08\xd5\x80\xdc\x0f\x07\x2f\x4d\x92\xc3\x33\x42\xc8\xae\x78\x23\x63\xb0\xf1\xfb\x8f\x01\x31\x85\xa4\xfe\xee\x36\x46\x3b\x1c\x03\xab\x37\x1d\x3e\x0c\x03\xaa\xd9\xbc\x16\x25\x5e\xf9\x3b\x70\xde\x56\xb9\xbf\x7f\x60\xb9\x17\xc2\x61\xc4\xf8\x4e\xe8\x42\xa1\x85\x0d\xda\xa5\xb1\xa5\x03\xbf\x46\x7e\xdf\x91\x3d\xa0\xd1\xe3\x97\x24\xe7\x1e\x6c\x59\xe9\x1c\x92\xa2\x79\x95\xc2\xef\x10\x9b\x76\x6d\xd1\x57\x56\x43\x9e\xbd\x34\x49\xd8\xc8\x64\x02\x16\xbd\xdd\xd5\x92\xd2\x17\x89\x0e\x2e\xa6\xef\xba\xfa\x0d\x42\x32\x6d\x4b\x4a\x02\x2d\x60\xff\x8f\x14\xcd\xcb\xd8\xdd\x5b\xa3\x64\xbe\x83\x1f\xf7\x9f\xe3\x7a\xad\x27\x50\xe0\x52\x6a\x74\x20\x02\x32\x6c\xf8\x71\x16\x16\x6b\x13\x76\x0e\x6f\x32\x81\x6f\x44\xfe\xd1\x2c\x97\x0e\xc2\x96\x82\x66\x75\x55\x2e\xd0\x82\xd0\x05\x78\x59\x4a\xbd\x02\xb3\x8c\xc0\xc2\x7b\x2c\x37\xde\x65\xc3\x41\xcd\x9a\xa4\xf0\xfe\x03\xd9\x7a\xf6\xb2\xb2\xc2\x4b\xa3\x19\x99\x57\x05\x8b\x39\xca\x5b\x0c\xb8\x6d\x45\x8c\x41\x38\xd8\xa2\x52\xf4\x9b\x5e\x5a\x74\x95\xf2\x60\x96\xcc\x5d\xfb\x53\x3c\x9e\xa7\x0e\x7e\x79\x69\x7e\x81\x12\xfd\xda\x14\xd9\x70\xc0\xe8\x49\xe7\xc4\xc6\x70\xe2\xc0\x16\xc6\xa8\xa8\xb3\xb9\xd4\x2b\x85\x8f\x69\xce\xaf\x85\x6f\x4e\x4f\xd4\xd2\x82\xd1\x39\x06\x6d\x1e\x43\x74\xac\xb6\x47\xa1\xc2\xc3\xce\x54\xe0\xd6\xa6\x52\x45\xb3\x0c\x36\xd8\xe7\x0e\x73\xa3\x0b\x10\x4b\x4f\xee\xe5\x61\x29\xa4\x72\x59\x34\xdb\xa3\xf5\x52\x38\xad\xf9\x96\x71\x1e\xbc\xb9\x3f\x87\x67\xc0\x4f\xe6\xbc\xda\x43\xdb\x8a\x60\x2b\x95\x8a\x92\x69\xa3\xcf\xde\xbe\x99\xdf\x8c\xc3\xa7\xaf\x6f\xae\xbe\xdb\x07\x07\xde\xcc\xc5\xbb\x77\x19\xb1\xde\xbc\x79\xf9\x66\x06\xdf\x7b\xb2\x56\x07\xda\x78\xc8\x2b\x6b\x29\x98\xed\x6a\x6b\xd1\xbb\x70\x08\xb5\x3a\xb0\x80\xc5\xee\xc4\xe1\x3e\xb2\xe1\x70\xda\x16\x7f\x83\x83\x13\xb7\xe8\x36\x7d\xc7\xde\x3e\x7a\xd2\x89\x5c\xf2\xd3\x27\x97\xa0\xa5\x82\x7f\xfe\x93\x76\x94\xfd\xc0\xc6\x04\x97\x97\x30\xa2\x0d\x8f\xfa\x9e\xd3\xf6\xe9\xc5\x70\x30\xa0\xb5\xb2\xb9\x17\xbe\x72\x57\xa6\x40\xf8\x2f\xb8\x98\x4e\x09\xbc\xd6\xf8\x52\x28\x87\xc3\xc1\x43\x73\x04\xde\x56\x18\xd5\x7c\x7d\xb7\x31\x1a\xb5\x97\x42\xf5\x5a\x9f\x06\xdc\x53\x74\x9c\x38\x58\xdd\x09\xfe\xc7\x4d\x6f\x29\x6f\x29\x1e\xc6\xa7\x1c\xcf\x5b\xab\x28\x8a\x06\xb9\x45\xe1\xc8\xc3\xb7\x42\x7a\xb6\x0f\xc7\xb1\x17\xfd\x16\x51\x37\x07\x3f\x83\xf3\xe9\x74\x0c\x2f\xe8\xc7\x5f\xe9\xc7\xdf\xe8\x07\x05\x88\xf3\x2f\xa6\x53\x28\xa5\x52\x32\x58\xb1\x83\xe7\x93\x33\xa8\x36\xe0\x0d\x5c\xfc\x09\x7e\x95\xde\xa3\xad\x8f\xb6\x7f\x17\x9f\x61\xd0\x30\xbb\x84\x52\x7c\xc4\xe4\xe0\xf5\x18\x2e\xd2\xe1\x40\xe3\x1d\x53\x9c\x4f\xa7\xb5\x91\xff\xb0\x97\x68\x38\xb0\xba\xa0\xd7\x94\xb2\xb3\xd7\xb8\x4d\xea\x0f\x73\xce\x93\x09\x33\xbc\x36\xdb\x24\xcd\x7e\xd2\xf2\xee\xb5\xd0\x26\x49\xd3\x74\x38\x40\xe2\x9a\x66\xd3\x0b\x98\x4c\x78\x5b\x17\x94\x81\x72\xd4\x3e\xee\x6b\x38\xa0\x3c\x2a\x23\xf8\x8a\xe3\x7a\x6d\x11\xef\xe5\x07\xb8\x04\x16\xed\x39\x74\x84\x4e\x92\xc4\xea\x22\xfb\x56\x19\xe1\xbf\xf8\x6b\x92\x3e\x7b\x91\x9e\x9d\xa7\xcf\xf0\xd9\x32\x3e\x21\x26\x5a\x3f\x6c\xec\xd9\x25\xbc\x68\x5b\x95\x45\xff\xff\xd6\x77\x4f\x1d\xf0\x7f\xbe\x03\xbf\x36\xfd\x59\x23\x38\x29\x25\x48\x4d\x55\x5d\x50\x1e\x39\x54\x93\x3b\x62\x16\xee\x02\x3c\xee\xb8\x14\x0e\xca\x8d\xdf\x81\x53\x32\xc7\x5a\xb9\x1d\x84\x7f\x33\x0b\x74\xc3\xbe\x50\x5b\xb1\x6b\xc5\x0b\xda\xff\x89\xd5\xfe\xd5\x84\xdb\x92\x21\xa8\xb5\xae\xf6\x58\x41\x57\xa1\xf8\xee\xaa\xe1\x67\xe9\xd7\x6d\x1d\x35\xda\x00\x8d\x5b\x88\xf5\x7a\x30\x63\x73\x8b\xd6\xca\x22\xd6\x15\xa1\x84\x06\xb3\xf8\x15\x73\xff\xd4\x35\xc5\x58\x53\x06\xf1\x8e\x0e\xe0\x93\xdc\xdf\xd5\xa0\x59\x94\x67\x0c\x27\x4a\xae\xf4\x90\xb2\x5d\x05\xc6\x37\x84\xff\x3f\x42\x55\x48\xc8\xe3\xce\x3e\xef\x1f\x3a\xc8\x5c\x31\xd6\x45\xe9\xb3\xa6\x16\xfc\x23\xca\xd2\x7a\x89\x31\x98\x8f\x1c\x96\x6a\x81\x93\x34\x0b\xc2\x75\xe5\x4a\xb3\xa4\xbd\x4d\x76\xb4\x27\xe6\x63\xed\x15\x8d\x2e\x2e\xa1\xc8\x5a\xdf\xd9\x49\x9a\xcc\x42\xeb\xec\xdf\x65\x7b\xc3\x1c\x0e\x6e\x85\xed\xf3\xf1\xf0\xa2\xf1\xf3\x21\xd7\x7c\x73\x71\x8b\x9d\xc2\x68\x61\x0a\xca\x51\x90\x53\xa5\xbf\x45\x58\x33\x81\x09\x8b\x65\xf0\xc6\xaf\xd1\x6e\x65\x78\xc7\x51\x90\x09\x84\xb2\x28\x0a\x32\x1f\x51\x30\x2e\x37\x0b\xd5\x72\x89\x16\x8c\x6e\xa2\x5b\xd1\x59\x8a\xd9\xa9\xee\xca\x60\x8e\xc8\x6c\x24\xf0\x6c\x32\x71\x9e\xb6\x73\x8b\x76\xa9\xcc\x96\xfb\x2d\xe6\x90\x46\xbb\xc9\x8b\xbf\x4c\xbf\x9c\xfe\xed\xcb\x2f\x26\xb4\x96\xd4\xab\x33\x92\xf8\xcc\x2c\xcf\x88\xf7\x2c\x62\x9f\x51\xe2\x35\x95\x3f\x2b\x4d\x21\x97\x14\x1b\x9a\x37\xce\x0b\x1f\x75\xb1\xa8\x96\xf0\xfe\x03\x75\xa7\x7c\x06\x36\xfb\x86\x36\x1f\xe3\x1d\x9d\x46\x57\x61\x83\xc1\xa2\x5a\x86\x48\x79\x09\xa1\x43\xcd\x7e\x44\x51\x7c\xad\x54\x12\x78\x29\x7f\x74\xa3\x26\xa1\xd4\x46\xab\xa5\x62\xee\xe1\x80\x4e\xf2\x61\x18\x32\x59\x5d\xf7\x52\xda\xfb\x8a\xa3\xdf\x57\xf5\xb3\xe7\xcf\x99\xbf\x57\xb4\x81\x2d\x2c\xf1\x44\x39\x5e\x9b\xcd\x95\x32\x0e\x6d\xc2\xcd\x36\x65\xda\x6f\x58\xfd\xc9\xa2\x5a\x72\x5e\x1b\x44\x8c\x4b\xb0\x45\x14\x81\xa3\x73\xbd\xa1\x22\x2b\xa8\xb5\xca\xc7\x60\xe3\x36\x6a\xc9\x2e\x2f\x41\xa1\x4e\x6a\xd3\x4b\x29\xe4\x3f\x69\x1b\x5f\xcc\x34\x21\xb3\x30\x5e\x1a\x64\x5c\x58\x14\x1f\xe3\x5a\x93\x09\xb0\x84\x75\xe3\xc1\x36\x19\xcd\x6d\xb9\x7f\x20\x43\x66\xd4\x52\xd5\x42\xb8\xcd\x81\x32\xdd\x86\x77\x92\x31\x1c\x19\x3c\xe3\x87\x3a\x5b\x21\x6e\x1a\x49\xdf\xc7\x1d\x7c\x48\xbb\xb9\x3c\x0a\x19\xc3\x72\x2e\x6d\x5e\x49\xff\x0d\xc9\x8a\x96\x1b\x44\x59\x6e\x14\x96\xd4\xd5\x87\x58\x17\x28\x60\x11\x48\x60\x43\x1d\x99\xd5\x9c\xd4\xe7\xe8\xa1\xc0\x45\xb5\x22\x27\xa1\xd3\xa3\xdf\x66\x83\x56\x78\xec\x30\x4b\x0d\x02\x4a\xca\x81\xdb\x35\x5a\xa4\x9e\x83\x1d\xc0\x68\xb5\x03\x65\x56\x2d\x51\x80\x6d\x34\xd4\x7a\x4c\x43\x1a\x59\x28\x93\x7f\xe4\x0a\xa1\xa9\x2e\x96\xd6\x94\xb0\x32\x94\xf9\xfc\xda\x9a\x6a\xb5\x8e\x79\xaf\x67\x4b\x8f\xf5\xbc\x41\xfe\xf0\x8f\x1b\xb7\x41\x04\x78\x2d\x4a\x24\x4e\xa9\x57\xc3\x41\x18\x97\x04\xaa\x6d\xae\xb2\x9f\xc5\x2a\x04\xcc\x57\xfc\x82\xb4\x49\xfe\x12\x59\xe7\xf3\xeb\x37\x3a\x47\x70\x3b\x9d\x67\xf4\x89\x75\xfd\x5d\x18\xa6\xcc\xe7\xd7\xd7\xb7\x94\x3e\xa4\x03\x2c\xa9\xac\xe3\x3a\x67\x3f\x75\x81\x5b\x29\xc0\xa1\xbd\x45\x7b\xe6\x88\x30\xcc\x58\x32\xae\x9e\xd0\xe5\x56\x2e\x42\xd1\x4c\x1a\x66\x6d\x51\x35\x20\xea\xc5\xa3\x1a\x0e\x57\xdb\xeb\xe0\x86\x5e\x3f\xf2\x2f\xec\x19\x7e\xf9\xd5\x19\x3d\x1b\x11\xd8\xe8\x97\xe1\x80\xd5\xf1\xd9\x5c\x5a\x94\xcc\x15\xb3\xc8\x95\xa9\xb4\xef\xe3\x92\xe1\x71\xe4\xb2\x2d\x6a\xe2\xbe\xa6\xd0\x73\x92\xf7\x90\x1b\x1b\xea\x86\xf7\x6d\xa8\x9e\xc5\xea\x58\xf4\x1e\xde\x3d\x35\x01\x7c\xef\xae\x3a\x96\xf4\x66\x83\xba\x0d\xc0\x45\x47\x03\x20\x7b\xa8\x59\x01\x46\x29\xa9\x57\x2c\xd6\xb7\x42\xaa\xca\xe2\x63\x0a\x38\xa6\x3e\x06\x51\x8a\x7c\xbc\x0d\xf6\x18\x48\x87\xfa\x14\xd8\xbc\xca\x73\x74\xee\x33\xc1\x22\xf5\x21\xd8\x7c\x6d\xac\x8f\x5a\xc0\xe2\x53\xdb\xeb\x52\x1f\x61\xb5\x04\xfa\xb4\xaa\x4e\x08\x74\xb3\xa6\x34\xf9\xd6\x18\xf5\x23\x52\xa5\x46\x42\x9d\x06\x39\xa6\x3e\xc2\x93\x25\x9a\xca\x7f\xa6\x50\x91\x9a\x40\xae\x42\xab\x73\x65\x74\x6c\x7a\xae\xef\x30\xaf\x28\xa5\x07\xe3\xee\x82\xe4\x8f\x53\x13\xe0\x2b\xe1\x51\xe7\xbb\x1b\xe3\x85\xfa\x01\x85\x7e\xdc\xb8\x55\x8b\xfa\x1f\x25\x0a\x32\xcc\xba\x20\x54\x66\xc5\xf1\x21\x51\x7d\x71\x6d\x0c\x47\x81\x84\xb3\x9b\xca\x5e\x99\x55\x42\x0c\xdf\xeb\xa5\x19\xc3\x68\x34\x86\x52\x6c\xde\x87\x20\xf0\xa1\x19\xfa\xdd\x3f\x50\xda\xea\xfa\xf5\xac\xcf\x93\x31\x6b\x47\x8a\x31\x31\xb5\xdc\xb9\x97\x85\x98\xf6\x01\x62\xcf\xd2\xf2\xe2\x63\xbe\xc8\xb2\xa7\x61\xbe\x5e\xe7\x9d\x75\xf9\xfa\xc2\x01\x33\xf7\xf9\xec\xec\x70\x73\xc7\x34\x3d\xbc\x5d\x57\x9d\xf5\xf2\x76\x68\x4e\x62\xd4\x0e\xf1\x18\x46\xa4\x39\xc2\x38\x70\xcc\x59\xdf\x1e\xba\x34\xc7\x10\x9d\xe5\xfb\xd5\x70\x6a\xf9\x1e\x37\x9c\x1d\xf2\x1e\xd3\x1c\xc3\x44\xef\x7b\x4c\x84\x48\xc3\xbc\x9f\x72\xba\x19\x60\xf6\x09\x37\x66\x1c\x75\xe0\x99\xc7\x36\x88\xd9\xa1\xf7\x8e\x87\x83\x87\x6e\x8b\x76\x5c\xc3\xa4\x20\xb5\xf4\x49\x1a\xc7\xe8\x6f\xd1\x4a\x53\xc8\x9c\xa7\x6a\xca\xac\xc2\x9c\x5d\x0b\xd5\x2d\xa3\xa8\x1e\x13\xce\x49\xc7\x25\x98\x43\xef\xb9\x9a\x69\x55\x5b\x7e\x6d\xd1\xad\x8d\x2a\x1c\x57\x5c\x95\x2e\xd0\x3a\x2f\x74\xc1\x23\x85\xcd\x46\xc9\x3c\xb4\xf8\x0b\x5c\x8b\x5b\x69\x6c\xc6\xec\x3f\xe9\xa5\xb1\xbe\xd2\xc2\xa3\xda\x8d\xdb\xc5\x4b\x61\xd0\xe9\xa7\x3e\xb6\x46\xb0\xb2\x28\x3c\x6c\xc5\x8e\x44\xc1\xbb\x4d\x28\x82\xa5\x63\x94\x42\x78\x31\x06\x67\xa8\x9f\xb2\xe8\x8c\xf5\x5c\x48\x56\x56\xf3\x1d\x80\x06\xe9\x1d\xb8\x6a\xc3\x97\x69\xd4\x2f\x2c\xac\x11\x45\x2e\xdc\xd1\x36\x4a\x2a\x76\x73\xc7\xa5\x13\x4f\xfd\x8f\xeb\x27\x48\xe6\xf3\xeb\x34\x88\x3f\xc7\x70\x39\xe0\x66\x93\xc9\x23\xd7\x5f\xd2\xb9\x0a\xdd\xe4\xe2\x8b\xac\xa9\x0a\x63\x69\x47\xdd\x02\x9d\x56\x38\x90\x41\xe4\x99\x7b\x8b\xa2\xac\xaf\x64\x66\x97\xb5\x5e\x78\xf6\xd7\x7e\xc7\x85\x7b\x1f\x53\x36\xf7\xc2\x7a\x7e\xad\xa4\xf3\xa8\x39\x06\x5b\x06\xd3\xe8\xb3\x57\xfc\x30\x19\xf9\x7c\x33\x1a\xc3\xe8\xfc\xc5\x97\xd9\x34\x9b\x66\xe7\xb3\xe9\xe8\x44\xff\xb5\x11\x5a\xe6\x09\xb5\x25\xdc\x2b\x0c\x07\x83\x95\xe1\xbd\x67\x73\x52\x51\xb2\x5f\xa6\x4f\x9e\x34\xd0\xb7\xb6\x4a\xea\xfb\x19\xd9\xe6\xf0\x16\xed\x0e\xce\xa7\x50\x4f\x62\x17\x98\x8b\x2a\x76\x39\x84\x86\x56\xde\x35\x47\x23\x2c\xd2\x91\x0a\x38\x9f\x9e\xd5\x83\x52\x46\x8b\x6e\x0b\x5b\xa9\x0b\xb3\xcd\xe0\x66\x2d\x1d\x28\xf4\x4f\x1d\x54\x74\xfc\x25\x4f\x77\xfb\x20\xbd\x81\x15\xf2\xf5\x85\x55\xbb\x88\x26\xf2\xbc\x0a\xfd\x07\xb9\x57\xbc\x5a\x72\x90\x68\xc3\x3d\x89\xf0\x6c\x7e\x20\xd9\x48\x37\x68\x97\x98\xfb\x46\x70\x53\xd9\x78\x03\x15\xd1\x6a\x6b\x8e\x84\x6a\x07\xa5\xf0\xf9\xba\x11\xe5\xa9\x8b\x9d\x0a\x82\x50\xce\xb0\x5a\xb6\x6b\xd4\x7d\xad\x53\x84\x74\x3c\x10\x84\x7c\x2d\xf4\x0a\x1d\x77\xa7\xca\xac\xbe\xe5\x1c\xa9\xf3\x5d\x98\x2b\x77\xef\x4e\x98\x46\x38\xcf\x09\x78\x8e\xa8\xc3\x78\xba\xc9\xb7\x07\x29\xfa\xfe\xa1\xc3\xf0\xca\xac\x28\xd2\x1d\xf0\x30\x3c\x3d\xbf\x67\xa3\xe0\x76\xfc\x1f\x50\xcf\x95\xe3\xdb\xfc\x63\x72\x70\x8d\x93\xc2\x3d\x34\xe3\x2e\xa9\x79\x2e\x29\x29\x08\x10\xc6\xa0\xb2\x8a\x96\x19\xc5\x51\xc6\x08\x9e\x43\x6d\x5f\xd9\xd7\x45\x61\x93\x34\x9b\xf3\xf2\x6c\xe1\xd4\xcf\xfe\xd6\x98\x37\xdb\xe4\x6b\xdc\xc6\x42\x20\x19\xfd\xf7\xf5\xcd\x68\x0c\x95\x55\x63\xb2\xe6\xc0\xd0\x63\xe0\xac\xbe\xec\xad\x95\xda\x2f\x93\x50\x02\x40\x6e\xb4\xc6\xdc\x73\x73\x68\x9a\x73\x98\xcf\xaf\xa9\x4d\x41\x51\xce\xe0\x4f\x6e\x14\x9a\xf5\x00\x91\x1b\xed\xa5\xae\x90\xbf\xb1\xfa\x06\x81\xb2\x11\xaf\x75\xd1\x9d\xcd\xab\x45\x68\xc3\x7e\x96\x7e\x9d\x50\xf1\xf3\xe7\xd6\x0c\x2d\x0c\xdf\x7e\xfb\x3f\x17\x98\x4e\x10\x6f\xf7\x77\x03\x81\x33\xbb\x0e\xd1\x2f\x2e\xcd\x53\x9d\xc3\x9a\x2e\xbc\x8a\xa2\xce\x2e\x81\xca\xc6\xec\x27\x5d\x0a\xeb\xd6\x42\x25\x61\x4c\x94\xe0\x6d\xf6\x52\x78\x91\xa4\xe9\x18\xfe\x8c\xe9\x57\x3d\x1b\xeb\x8a\x15\xe5\x62\xe0\x8c\xbb\xce\x27\x97\x30\x8a\x6b\x5f\x99\xb2\x14\xba\x18\x9d\x64\x0d\xbf\x27\x13\xb8\x31\x85\xd8\xb1\x87\x59\x84\x9c\xf2\x49\x18\x77\x87\xfd\x41\xd8\x36\x45\xa2\x38\x96\x25\x37\x44\xef\x9a\xe1\x42\x1d\xff\x89\x30\xa4\x9e\x08\x5c\x37\xcc\xf0\xbd\xe6\x3f\x56\x28\x50\x28\xd8\x1a\xab\xd8\x9f\x99\x9d\x97\xa3\x3c\xe6\xf8\x92\xb0\x5e\x93\x5c\x7e\x23\x9c\x03\x19\x32\x56\x33\x13\xce\x1a\xf0\x57\x24\xc2\xd6\x58\xbb\x03\xb1\xa0\xae\xa1\x88\xb3\x0a\xe9\x42\x84\xd8\xe2\x7e\xd4\xc2\x60\xf4\x3a\x3f\xa8\x31\x79\xec\xd7\x60\x7a\x03\x85\x74\x62\xa1\x30\x8e\x5d\x4a\x53\x60\x4b\xc7\xdc\xa3\x3f\xb9\x84\x22\x6b\xcf\x30\x1e\x57\x30\x85\x09\x0a\x29\xf5\x00\xb7\x13\x67\xde\x07\xcc\x0f\x7b\xd2\xa3\x57\x70\x09\xb8\x3f\x2b\x52\x77\x3b\xf4\x85\x2a\x44\x2e\x41\x52\x38\x47\xe9\xd7\x21\x0e\x32\x71\x72\x9e\x32\xf1\x52\x5a\x17\xb3\x34\x6c\xf1\xe9\x2d\x82\xa3\x18\x17\xce\x6b\x8f\x65\x5a\x9c\x2f\xd2\xee\x2b\xea\xcd\xc3\x5a\x6b\x51\xc7\xd6\xa2\xc3\xf1\x97\xb4\x9d\xa9\xb8\x3a\x21\xa5\x63\x41\x47\x9b\xf3\x48\x97\x87\x3c\x05\x38\x53\xa2\x5f\xd3\x69\x1c\x48\xd0\x68\xba\x1e\x58\x0f\x7a\xc2\x6c\x4b\x2f\xfb\x7b\xbe\x9a\xb6\x6e\xb6\x8a\x4c\xd5\xfd\x55\xfa\x09\xcf\xa9\xcf\xa7\xb7\x01\xa1\xc3\xee\x6f\x4d\xfe\x68\xf9\x1e\x00\x95\xe3\x93\x6c\xdd\x5e\xce\xab\x45\x72\x0a\x3f\x85\xbf\x43\x27\xaf\xfd\xd1\x02\xed\x23\x1f\xfd\x78\x20\x9e\xcf\xa8\xa2\x7f\xe7\x8d\x87\x5c\x42\x91\x05\xdf\xbb\xef\xcc\x90\x67\x47\x43\xe4\xba\xf6\x7b\x69\x92\x8e\x3f\x8e\xeb\x6a\x2a\x44\x7e\x56\x4b\x5f\x96\x88\x13\xdb\x30\x33\x0f\x1b\x8d\x23\xe1\xf6\x9d\xe2\xdf\x2f\x9b\x4b\xc5\x41\xf8\x3b\x16\x2c\xe2\x95\x05\x71\x0b\x1d\x97\xe1\x01\xad\xe4\x21\x66\xdb\x69\x62\xa5\xd3\x5a\xcc\x58\x1e\xa0\x27\xa3\x8b\x77\xef\xb8\xa6\x0c\x4b\x77\xa4\x79\x68\x32\xf2\xd1\x58\x99\xe3\xca\x67\x5e\xc2\x0c\xc2\xf0\xfd\x5f\x50\xd4\xe3\x33\xfb\x13\x57\x0f\xcd\xad\xc3\xa7\xf4\xf7\x6f\xab\xef\x11\xed\x3d\x0c\xbb\x72\x04\xd5\xc1\xe4\x19\x68\x03\xcb\xd8\x8a\xf3\x46\xc3\x9f\x17\xec\xd0\xc3\xb3\x49\xda\x3b\xb0\xff\xdf\x00\x00\x00\xff\xff\xbb\xa6\x2f\x90\x66\x28\x00\x00")

func _hardcodedDoerGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedDoerGo,
		"../_hardcoded/doer.go",
	)
}

func _hardcodedDoerGo() (*asset, error) {
	bytes, err := _hardcodedDoerGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/doer.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc, 0xd5, 0x2c, 0x20, 0x46, 0x76, 0xdb, 0xea, 0xde, 0x4f, 0xd6, 0x45, 0xe4, 0x2b, 0x7, 0x75, 0x30, 0x43, 0x84, 0x99, 0xba, 0xea, 0x61, 0xad, 0xfe, 0x22, 0x44, 0x21, 0x79, 0x43, 0x1c, 0xcd}}
	return a, nil
}

var __hardcodedMiddlewareGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x5f\x6b\xe3\x46\x10\x7f\xb6\x3e\xc5\x74\x4b\xc8\xea\x70\xe4\x7b\x28\x14\x02\x7e\x28\xe9\xa5\x79\x39\x38\x2e\xa1\x2d\x94\xc2\x6d\x56\x23\x69\xb1\xbc\xab\xce\x8e\xac\x9a\xe0\xef\x5e\x66\x25\x39\x51\x48\xd3\xa7\x3e\x58\xde\x9d\x99\xdf\x6f\xfe\x6f\x67\xec\xce\xd4\x08\x11\xe9\x80\x94\x65\x6e\xdf\x05\x62\xd0\xd9\x4a\x55\x7b\x56\xd9\x4a\x79\xe4\x4d\xc3\xdc\xc9\x99\x7a\xcf\x6e\x8f\x9b\x12\x1f\xfb\x5a\x65\xd9\x4a\xd5\x8e\x9b\xfe\xb1\xb0\x61\xbf\xb9\x69\xf1\x80\xb4\xd9\x99\xe3\x01\xf1\xaa\x0e\x9b\xc3\x8f\x9b\x36\xd4\x35\x92\xca\xf2\x2c\xdb\x6c\xe0\x8b\xf1\xce\x7e\x76\x65\xd9\xe2\x60\x08\xa1\x0d\x75\x04\xe3\x8f\xd0\x89\x22\x16\x70\x1b\x08\x7c\x18\xd6\x30\xe0\x25\x21\xd8\xe0\xd9\xf9\x1e\x81\x1b\x0a\x83\xf3\x35\x70\x83\xa3\x31\xf4\x9d\x30\xca\x3d\xb2\xb1\x3b\x88\x01\xb8\x71\x11\xf6\xe6\x08\x96\x4c\x6c\x46\x5b\x0a\x16\x63\x2c\xb2\xaa\xf7\xf6\xb5\x7f\xdd\x80\x24\x56\xdc\x19\x5f\xb6\x48\xf9\xe2\x06\x4f\xd9\x8a\x90\x7b\xf2\x0b\xf1\x6d\xef\xad\x16\x32\x3d\x8c\xf2\xaf\x18\xbb\xe0\x23\xfe\x46\x8e\x91\xd6\x40\xf0\x61\x92\xff\xd5\x63\xe4\x5c\x78\x56\x25\x56\x48\x90\x60\xa3\x60\x95\x92\xf8\x44\x04\xd7\x5b\x20\xb4\xe1\x80\xa4\x73\x51\xb8\x0a\xce\xba\xed\x16\xbc\x6b\x47\xc0\x14\x8c\x1c\x4f\xf2\x39\x18\x02\xa4\xf4\x0b\x94\x89\x24\x0e\x8e\x6d\x03\x2f\x99\xe7\x73\xa1\xf9\xd8\xe1\xe4\xda\x9a\x28\x45\x23\xe7\xeb\xeb\xc4\x2c\x34\x5b\xa8\xf6\x5c\x7c\x12\xb2\x4a\xcf\xb0\xfc\x6c\x9e\xbc\xbc\xb4\x9e\x4d\x44\x54\x62\x65\xfa\x96\xff\x85\x4c\xf5\x7e\xe7\xc3\xe0\xa7\xbe\x5d\x7c\x7f\x80\x50\x81\xc4\x03\x17\x0f\x6a\x7d\x66\x7a\x3e\xe5\x63\x92\xf2\x1d\xe7\xa7\xb8\xa5\xb0\xbf\x09\x9e\xf1\x6f\xd6\x54\xcc\xa7\x3c\x1f\x7d\xfc\xac\x55\x82\xaa\x75\x8a\x60\xc2\x7c\x7e\x52\x48\xa4\xae\x25\xf6\x35\xa8\x34\x25\x4c\xc6\xa2\xba\x9e\xb2\xd7\x69\x8c\x8b\x7b\xd1\xe8\x3c\x3f\xe5\xe7\xc6\x2c\x2a\x70\x4a\x8d\x69\x8a\x7b\x59\x91\xbb\x87\x87\x2f\x7a\x58\x83\x68\x4e\x79\x76\x4a\x73\x1d\xd9\x70\x1f\x97\x93\x00\x03\x99\x2e\x82\x01\x9a\xc4\x30\x24\x79\x96\x32\x7f\x13\x11\x99\x7a\xcb\xd2\xa4\x37\x26\x2b\x5b\x8d\x18\x70\x9e\xc5\x6d\x1a\x68\x1d\xe1\xc3\x5b\x54\x39\xa4\xff\x3b\x34\x25\x92\xb6\xa1\x44\x81\xa5\xfe\xc7\x62\xe2\xd9\x82\xc8\x45\xb0\xc4\x16\xaf\xa1\x73\x96\xbf\x22\x45\x17\xfc\x57\xe3\x6b\x84\x12\xad\x2b\x31\xc2\xd0\x20\x37\x48\xc0\x01\x8c\xb5\xd8\x31\x18\x38\x8c\x86\xc5\x98\xea\x02\x96\x56\x60\xd2\x4f\x5d\xc8\xe1\x31\x84\x36\x79\xb8\x69\x1d\x7a\x9e\x00\x37\x0d\xda\xdd\x8b\xc7\xc2\xca\x3d\xa6\xad\xb6\xc9\xee\xd9\x4f\xaa\xc5\x7b\xe0\x57\x9b\xbe\x06\xf2\xf5\x22\xb0\xff\x71\xf7\xe7\x6c\x65\xd1\x8b\xb1\xac\xc5\x2f\xc8\x5a\xfd\x7e\x35\x86\x7c\x35\x05\xa2\x64\xcc\xfe\x6b\xe0\x7f\x2a\xcb\xf9\xa6\xc6\x32\x5c\x4d\x0e\xd4\x7a\x2e\x88\xf0\xb8\x0a\xbe\x23\x5f\xcf\xb5\x9e\x56\x7f\x58\x34\xf7\x87\x8f\x1f\xf3\x17\x52\xfd\xc7\x9f\x8f\x47\x46\x2d\xbb\x7b\xdf\x91\xf3\x5c\xe9\x6f\x4f\x6a\x8f\x31\x9a\x5a\xb6\x46\x2d\xeb\x0e\x97\x17\xf1\x12\x7c\xe0\xa9\xf3\x58\xae\xa1\x6b\x51\x9e\x8b\xbe\xab\xc9\x94\xa8\x4e\xdf\x9e\x83\xca\x93\xaf\xf3\x2b\x76\x7a\x67\xa7\xfe\x09\x00\x00\xff\xff\xa1\x73\xce\xd9\x95\x06\x00\x00")

func _hardcodedMiddlewareGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedMiddlewareGo,
		"../_hardcoded/middleware.go",
	)
}

func _hardcodedMiddlewareGo() (*asset, error) {
	bytes, err := _hardcodedMiddlewareGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/middleware.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcb, 0x1, 0xb6, 0x9d, 0x16, 0xe7, 0x46, 0xa2, 0x49, 0x7d, 0xf6, 0xc, 0x20, 0x3a, 0xd4, 0x73, 0x64, 0xea, 0xcc, 0xe3, 0x1f, 0x62, 0xec, 0xc7, 0x5b, 0x68, 0x93, 0x2d, 0xaf, 0x96, 0x19, 0x61}}
	return a, nil
}

var __hardcodedTracingGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x58\xdd\x4f\xe4\x46\x12\x7f\xb6\xff\x8a\x8a\xa5\xcd\xda\x2b\x63\x43\xb2\xd9\x44\x44\x3c\xb0\xc0\xee\x8e\x0e\xc8\x08\x88\x72\xa7\xd3\x09\x35\x76\x8d\xdd\x5a\xbb\xdb\xd7\xdd\x9e\x0f\xad\xf8\xdf\x4f\x55\xfe\x98\x31\x0c\x5c\x12\x1e\xd0\xb8\xbb\xea\xd7\x55\xd5\xf5\xd9\x8d\xc8\xbe\x8a\x02\xc1\xa2\x59\xa2\x71\x46\x64\x52\x15\xbe\x2f\xeb\x46\x1b\x07\xa1\xef\x05\x99\x56\x0e\xd7\x2e\xf0\xbd\x00\x55\xa6\x73\xa9\x8a\xf4\x41\x2a\x61\x36\x93\xa5\x12\xd7\xf4\xbd\xa8\x99\x52\xa1\x4b\x4b\xe7\x1a\xfa\xad\x2d\xfd\xb7\xce\x64\x5a\x2d\xe9\xa7\x93\x35\x06\xbe\xef\x05\x85\x74\x65\xfb\x90\x64\xba\x4e\xcf\x2a\x5c\xa2\x49\xbf\x8a\xcd\x12\xf1\xa0\xd0\xe9\xf2\xe7\xb4\xd2\x45\x81\x26\x98\x12\xe6\x62\x89\x59\x51\xa6\x85\x3e\xb0\x0d\xae\x52\xfa\xc7\x24\x3a\xd1\x0d\x2a\x87\x15\xd6\xe8\xcc\x26\x91\x3a\x25\xd1\x8d\x7c\x48\xa5\xb2\xce\xb4\x35\x2a\x27\x9c\xd4\x2a\xdd\x81\x2b\xb4\x91\x55\x25\xd2\xba\x5d\xa7\xda\x61\x55\xb7\xeb\x97\xd0\x68\xfb\xb5\xbd\x54\x38\x3a\xad\x75\xf8\x2a\x15\xae\xc9\xb4\x68\x6c\xaa\x5d\xd5\xf0\x3f\x32\xfb\xdf\x63\xda\xfe\x2a\x4c\x93\xbd\x0a\xd1\x18\xdd\x88\x82\x0d\xf0\x2a\x9d\xcd\xbf\xa6\x06\xad\x6e\x0d\xcb\x64\xf3\xaf\x8c\x0f\xaf\x73\xfc\x7f\x15\x46\xaa\xee\xbf\x43\x4b\x9e\x62\xb1\x26\xb7\x78\x0d\xbd\xa3\x48\x97\x47\xc9\xd1\x61\x72\xf8\xea\x19\xbd\x14\x91\xef\x2f\x85\x81\x1c\x17\xa2\xad\xdc\x99\xae\x2a\xcc\x9c\x36\x5f\xb4\x75\x60\x9d\x91\xaa\x80\x13\x08\x2a\x9d\x89\xaa\xd4\x24\xc6\x3e\xea\x39\x05\x40\x2b\x95\x3b\xfa\x00\x27\xf0\xfe\xc7\xa3\x9f\x7d\x3f\x4d\x61\x30\xa3\x36\xe0\x34\xb4\x16\x13\xe6\xde\x59\xde\x31\x74\x72\x87\x6b\x77\x25\x9a\xf9\x76\xf7\x64\xba\x4f\x02\x9f\x75\x11\xf6\xed\x11\xd2\x14\x58\x85\x46\x18\x54\x0e\x4a\x14\x39\x1a\x7f\xd1\xaa\x0c\x6e\xd1\xb5\xcd\xe7\x4a\x3f\x88\x8a\x99\xe6\x46\x2f\x65\x8e\xe6\x54\xe5\x17\xbd\x73\x84\x99\x5b\x43\x1f\xae\x49\x0f\x1a\x41\x38\xdc\x60\x72\xdb\x08\x35\xd0\xc6\xf0\x6e\x5c\x67\x3c\x33\x00\xc6\x80\xc6\x68\x13\xc1\x37\xdf\x23\xa3\x26\xb7\xe8\x9e\xa9\x11\xfa\x9e\xb7\xab\xc7\x35\xae\xce\x74\xdd\x68\x2b\x1d\xee\x25\xf6\x5e\xd6\x3a\x7e\xba\xfd\x51\x14\x85\x28\xf0\xdb\x63\x14\xfb\x5e\xe4\xfb\x9e\x15\x75\x53\x49\x55\xcc\x8d\x7e\x10\x0f\xb2\x92\x6e\x03\xc7\x27\x70\x98\x1c\x1e\xf9\x9e\xb4\x97\x74\x91\xb4\xa0\x6d\xf2\x19\x1d\xaa\x65\x18\xdc\xcf\x6e\xef\x2f\x7f\x3b\x3b\xbd\x0c\x22\x38\x39\x81\xc0\x99\x96\xdc\x53\x2e\x60\xa0\xff\xe6\x7b\x7b\x81\x4f\xe0\x28\x39\xf4\xbd\x47\xc0\xca\x22\xc8\x05\x2c\x9f\x40\xdf\xdd\x9c\x9e\xcd\xae\x3f\xdf\xdf\x9e\x5e\xcd\x2f\xe9\xc7\xfc\xe6\xb7\x8f\xa7\x1f\x67\x97\xb3\xbb\x7f\x05\xd1\xaf\xb0\x84\xef\x4e\x20\x08\x5e\x3a\xe0\x93\xd1\xf5\x85\x5a\xb2\x99\x09\xb9\x4f\x8c\xc9\x5c\x18\x8b\x9f\x2a\x2d\x5c\xb8\x8c\xe1\xc3\xfb\xc8\xf7\x48\x5c\xa2\xfa\xee\x04\x94\xec\x24\xf6\x0c\xba\xd6\x28\xfa\x8e\xbb\x7f\x8b\xda\x25\x17\x74\x63\x8b\x30\xc8\x74\x5b\xe5\xa0\xb4\x83\x86\xd0\xe0\xed\x1b\xfb\x96\xdc\x74\x41\xb0\x41\x0c\x4b\x02\x7d\x7c\x51\xf1\x97\xa5\xf5\x89\x8b\x4e\x9a\x1b\xa9\x5c\xa5\xc2\xa0\x37\xe3\x71\x10\x0f\x16\xa5\x9b\x12\x79\xce\x4a\x11\xe9\x6d\x43\xb4\x8b\x30\x78\x63\x8f\xdf\xe4\x41\xbc\x37\x1e\x9f\xaf\x52\xdc\x11\x54\x9a\xc2\xc5\x12\xcd\x06\x8e\x7e\x02\x8b\x99\x56\xb9\x85\x15\xbe\xad\x2a\x70\x66\x43\x4a\x65\x5a\x29\xcc\x1c\xfd\x9c\x64\x03\xc8\x06\x28\x10\x8e\x71\x5c\x89\xc3\x31\x40\x51\x4f\x5e\x06\x7a\x01\x63\x06\x38\xe6\xf0\x26\xd2\x3f\x4a\x54\x60\x5a\xa5\x28\x49\x48\x45\xc1\x9a\xb7\x19\x33\xb8\x52\x5a\x90\x16\x04\x58\x99\x63\x26\x4c\x0c\x42\xe5\xb0\xda\xe1\x60\x08\x46\xad\x36\x3b\xf4\xc3\xca\x80\xab\x1b\x1c\xa5\x3d\x18\xa5\x4d\x28\xde\xaa\xe6\xac\x92\x14\xfb\xe4\x73\xbb\xb9\x9d\x43\x8c\xb7\x28\x9c\xa6\x5b\x7f\x48\x57\xde\x60\x6f\x0f\xa9\xd5\x1c\x8d\xd4\x79\x78\xf4\xd3\x3b\x2a\xb5\xc9\x2d\x5b\x8f\x82\x69\x0f\xdf\x85\xca\x1b\x2d\x95\x0b\xe9\xea\x5e\xa0\x99\x29\x8b\x59\x6b\x30\xec\x02\xd2\xb3\x93\x44\xd2\xfb\xf1\xc8\x46\x92\x52\x2a\x8a\x61\xab\x4e\xf4\xc4\x7b\x06\x6e\x38\x33\x28\x1c\xe6\x41\xe4\xef\x71\xf6\x57\x7d\x9d\xb3\x14\x64\xc4\x4f\x36\x1d\x2a\xe4\x31\xbc\x59\x06\x2c\x54\x44\x4e\xeb\x7b\xae\x21\xe9\x14\xae\xa6\x69\x2e\x9c\x2a\xb1\xc7\xf5\x63\x62\xba\xe9\x2b\x61\x18\x45\x3b\xe9\x70\x8a\xe4\x9a\xa7\xea\x75\x04\x30\x50\xec\x68\xe9\x7b\x5d\x57\x93\x50\x60\xf5\x29\x90\x8c\x15\x25\x33\xb5\xd0\xe7\x61\x60\x9d\x30\xa4\xd0\x01\xdb\xd2\x04\x31\xf4\x0c\x57\x64\x91\x80\x6e\x09\xad\x0d\x8e\xa1\xfb\xa3\x6f\xba\xb4\x60\x50\xe0\xc0\x08\x87\xc1\xf1\x5e\x85\x7c\xef\x31\xf2\x07\xab\x4e\xf5\x77\x0d\x9b\xd8\x7f\xf4\xbb\x72\xf3\xdc\x5e\x83\x81\xe1\x85\x7a\xb2\x2f\xa5\x70\xde\xf9\xf0\x3e\x86\xa1\xa1\x80\x77\xc3\xaf\x64\xb0\x6c\xf4\x62\x25\x22\x1f\x18\x84\x1d\x28\xae\x9f\xc9\xe5\x7b\x1c\xb7\x48\xb5\x78\x12\xe9\xb3\x73\x28\x50\xa1\xa1\x12\x94\xc0\x4c\x81\x36\x04\xba\xd0\x66\x94\x95\x72\xc7\x4a\x9b\xaf\x10\x0a\x07\x15\x0a\xeb\x60\x25\x5d\xd9\x85\x2e\x13\x21\xb9\xd1\x90\x43\x76\x11\xa1\x6e\xad\x1b\x3e\xb1\x2b\xdb\x30\x3b\xb7\xd0\x2a\xb9\xd0\xa6\xae\x36\x20\x1c\x18\xa1\x72\x5d\xc3\xc2\xe8\x9a\x11\x50\x39\x69\x90\x6c\x9f\x21\x65\x20\xea\x2f\x3e\xbc\x4f\xba\x23\x3e\x69\x03\xb8\xe6\x53\xe3\x89\x26\xeb\x03\x23\x36\xd3\xd3\x73\x8d\x96\x13\x7d\xae\x59\x5a\x82\x18\x8d\x44\x31\x7b\xdb\x49\xbf\xad\xfe\xa7\xd5\x4a\x6c\x6c\xb7\x1c\x46\x1c\xe9\x69\x0a\xaf\xf3\xcc\xb9\x0f\xf9\x28\x2c\xe6\xe1\xf4\x92\x66\xe7\x37\x94\x46\xfb\xad\xe7\x57\x1f\x8d\x27\xdc\x95\x68\x11\x6a\xb1\x96\x75\x5b\x5b\x10\x06\xc9\xea\x45\x2b\x4c\x0e\xa2\x10\xd4\x9b\x83\xd5\x35\xba\x92\x2e\xa4\xd0\xf4\x7f\x65\xb4\x2a\x38\xbb\x5a\x54\x34\x5e\x80\x00\xd7\xe5\xec\x5c\x38\x01\xad\xc2\x75\x83\x99\xc3\xbc\xda\x3c\x53\xbc\x11\xea\x52\xd6\xd2\xd9\x69\xe7\xd3\xad\x71\x0d\x3d\x1d\x1a\xf5\x33\xdd\x2a\xc7\x1b\xc7\x70\x74\x78\xc8\x9d\xc8\xc5\x12\x95\xdb\xdd\xa0\xbf\x61\xf3\x52\xaa\xaf\x4f\xf7\x86\xcd\xc7\x5e\xe3\x8f\xc2\x65\x25\x1a\x4a\xfd\xb5\x36\x08\xb8\x58\xc8\x8c\x92\x60\x0c\x76\x25\x5d\x56\x92\xfe\xd2\x81\x58\x50\x34\x51\x1f\xcc\x95\xe3\x89\x16\x1b\x95\xed\x04\x5d\x0f\x3d\x21\xe9\xcf\x79\x4a\xf3\x45\x2c\xd9\xc2\x0b\x59\xb4\x06\x41\xb7\x0e\x4a\xbd\x82\xd9\xdb\xba\x37\x2e\x59\x7f\x74\x5b\x72\xf4\x31\x38\x17\xd2\x58\xf7\xcc\x93\xc6\x14\x38\xd0\x75\x55\xe0\x91\xdb\xe1\x3f\xd1\x96\x7e\xd2\xe6\x0e\xad\x63\x7b\xa0\x50\x5c\xb0\x1f\x38\x5c\x73\xaa\xb0\xad\x92\x6e\xb0\x42\x4c\x90\x74\xed\xb5\xa4\xec\x6e\x39\x0a\x2c\x1d\x01\xe2\x41\x2f\x91\x83\x57\xb7\x8e\x0a\x30\x87\xcf\x0e\x6f\x02\x33\x07\x5d\xba\xb0\x20\x14\x48\x75\x50\x63\xad\xcd\x86\x30\xc7\xe4\xb5\xe8\x63\x4c\x72\x21\x1e\xec\x90\x73\x36\xb4\xc9\x9f\x6e\xb5\x7b\x9d\xc2\x08\xc2\x77\xe3\x38\x93\xcc\xd4\x15\x9f\xf8\xd7\x9a\xec\x51\xb6\xe3\x13\xd8\x62\x5d\xe3\xea\x29\x5c\x18\xbd\x5c\xcd\x70\x3c\xf2\x28\x39\xfc\x6b\x95\xab\x4f\xb1\xb8\xaf\x16\xa4\x29\x5c\xb5\xeb\x5b\x7e\x1c\xb8\x92\x79\x5e\xe1\x8a\x02\x78\x30\x73\xbd\x5d\x72\xa5\x70\x60\x4b\x6e\x40\x1f\x10\x84\x73\x22\x2b\x31\xa7\xcb\x16\xb0\x33\x65\xf7\x2f\x0d\x09\x41\xcf\x5c\x97\xc7\xdc\x8a\x93\x98\x2a\xec\x31\x70\xfd\xb3\xdd\x7d\x74\x0d\x96\xc8\xf3\xee\xbb\x1b\xef\x40\xaa\x85\x26\x58\xf2\x0d\x83\xff\x6d\xd1\xba\x03\xdb\x60\x26\x17\x32\x1b\x8a\x25\xa1\xdf\xc8\xa2\x74\xa0\xf4\x0a\x56\x08\x5a\x55\x1b\xb0\x6d\xc3\xcf\x1a\x44\x44\xd7\x4f\xe9\x5a\x2a\x06\xa2\x94\x2d\x5c\xa7\xc5\xb9\x70\x22\xd7\xdc\x52\x60\xe6\x06\xaf\xd8\x63\x87\x90\x74\x91\x19\x5e\x8b\x1a\xfb\xc1\x32\x02\x22\x0e\x4b\xe7\x9a\xe4\x8b\x50\x39\x15\x10\xd8\xfd\xea\xc6\xaa\x8a\x2c\xc1\x4d\x13\x3f\x39\x24\xfb\x31\xe3\x71\x9f\xe2\x70\x3b\x50\xd9\x90\xef\xf3\xf3\xbe\xc1\x2c\x8a\x9e\x36\x23\xa7\x39\x67\xd0\xad\xed\x77\xae\x2d\xd8\xde\x7f\x27\x37\xbc\x2e\xf9\x40\xdc\x69\x30\x51\xf3\x13\xf1\x33\x88\x59\x75\x7c\x37\x68\x1b\xad\x2c\xfe\x61\x24\xfb\x95\x81\x77\xfd\x3a\x5f\x5a\xd4\x0d\x34\x69\x3a\x68\x09\xa5\xb0\x80\x6b\xba\x65\x0a\x49\x8e\xfd\x46\xa8\x84\xef\xb0\x69\x1d\x25\x4d\xa9\xfa\x9b\xcf\xdc\xfa\xe9\xad\x13\x9a\x1d\xa3\x88\x93\xfe\x6e\x97\x65\x86\x99\x98\x23\xc2\xf3\x8c\xcc\x89\xd8\x24\x5f\x78\xcc\x26\x73\x86\xc1\x3f\x0f\x7a\xe9\x0e\x66\xe7\x01\x93\xc9\x05\x10\xe5\x76\xa6\xf3\x3c\x4b\xa1\x34\x16\x11\x1b\x8e\x0f\x3f\xc9\x2d\x3b\xc1\x13\x98\x98\x00\xba\x33\xfb\xa9\xf2\x6f\xc2\x58\xd6\x69\xd4\x62\xa8\xc4\x61\x34\x30\x44\xfd\x29\xbd\xdc\x36\xe3\x01\x73\xca\xf5\x2b\xd8\x2c\xf9\x22\xec\xc8\x3c\x48\xd3\x08\x35\x3b\x8f\x3b\xe3\xcd\xce\x99\x33\x63\xd6\xc9\x09\x31\xad\x3e\x3f\x98\x21\x26\x6e\xb7\x8d\xd8\x63\x20\xd9\x7b\xf8\x80\x3e\xfa\x33\xa2\xfe\x60\x5c\x25\xe7\x6d\xdd\x84\x36\xeb\x56\xd2\x94\xcb\x3c\xc5\x20\x8d\xc6\x48\x09\xa1\xc4\x75\x1f\x62\x96\x1f\x5e\xb8\x71\xa2\x08\x8e\xc1\x6a\x72\x00\x70\xa5\xb6\x48\x1f\x1c\xc4\x99\x36\x06\xab\x6e\x36\xa8\x74\x61\x39\x95\xf0\xb9\x96\x5b\x3e\xcb\x27\xc9\x05\x54\xa8\xc2\x41\x1e\x38\x39\x81\x1f\x7f\x80\xef\xbf\xe7\xd5\x4e\x64\x5e\x3c\xfa\x00\xdf\x80\x3c\x75\x32\x68\x76\x49\xe3\x98\x76\x1f\x36\x0e\x21\xfc\xf1\x87\x83\xac\x14\x86\x84\x8d\x62\xf8\xa5\x5f\x3d\xfa\xb0\x5d\xed\x1b\x45\x6e\x6d\x1a\xaa\x52\x79\x27\x88\xd7\x8b\xf0\xd1\xc6\x70\x4f\xb6\x2f\x71\x9d\x9c\x63\xa6\x73\xec\x4d\x3c\xb1\xd9\xbe\x29\x62\xd7\xbf\x93\xd3\x3c\x1f\xbe\x02\xe6\xbc\x97\x79\x10\x77\xbc\xde\x74\x3a\xa7\xd1\xbc\x7b\xd0\x4d\x3e\xca\xe2\x42\xe5\x52\xa8\xe4\x77\xb6\x6f\x38\x4a\xf5\xef\x5f\x8e\xff\xd3\x7b\xd7\xe0\x2a\x2f\x8b\xda\x1b\xee\xaf\x4b\x4a\x8c\x7f\x4f\xd0\x41\xa4\x41\xc6\xc7\x31\x0e\xca\x84\xd3\xf6\x97\xbb\xbb\x79\x68\x56\x31\x70\x43\xff\x18\xf1\x74\xd8\x55\xb8\x9d\x62\xb9\x6d\x20\xb6\x5d\x51\x8e\x36\x33\xf2\x81\x5b\x27\x6a\x97\x44\xd3\x54\xb2\x7b\x44\xe0\x3a\xf3\x3b\x35\x32\x3c\x55\xa0\x63\x77\x6b\x9b\xee\x96\xf9\x29\x90\x0b\xed\x38\x53\x6d\x8b\xf2\x9e\x49\x88\x02\x71\x29\x0c\x1d\xb0\x53\x51\x9e\x64\xf3\xb3\x61\xe0\x1d\xb8\xfa\xd1\x79\xf7\xed\x6b\xfe\xdb\xf9\x3d\xa5\xaf\x9d\xa4\x35\x60\x4e\x1f\xc9\x4e\xe7\xf3\xfb\xeb\xd3\xab\x0b\xc2\xd8\x3e\x78\xed\x50\xfc\x59\xa4\x09\x90\xef\x99\xde\x33\x46\x15\xaf\xd0\x14\x18\x72\xfd\xe8\x57\xce\xbb\xd9\x86\x9f\x14\xb6\xab\xd7\xb8\xa2\x52\xb7\x93\x14\x39\xa9\x77\x4f\xc0\xc9\x6d\x56\x62\x2d\x7e\xbf\xb9\x8c\x27\xab\xdb\x82\xf9\x0f\xdc\x0c\x19\xa9\x17\x93\xe1\xfb\x67\x8b\xbe\x76\x19\xff\xd1\xff\x5f\x00\x00\x00\xff\xff\x53\x18\x05\x26\xf7\x18\x00\x00")

func _hardcodedTracingGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedTracingGo,
		"../_hardcoded/tracing.go",
	)
}

func _hardcodedTracingGo() (*asset, error) {
	bytes, err := _hardcodedTracingGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/tracing.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x91, 0x5b, 0x60, 0x67, 0xc0, 0x1, 0xc2, 0x25, 0xe5, 0x52, 0x40, 0xa6, 0x17, 0x69, 0xb6, 0xc7, 0x37, 0x35, 0x0, 0x48, 0xd5, 0x4f, 0x7c, 0x7d, 0x2b, 0x18, 0x77, 0xdd, 0x0, 0x32, 0x7b, 0xea}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../_hardcoded/doer.go":       _hardcodedDoerGo,
	"../_hardcoded/middleware.go": _hardcodedMiddlewareGo,
	"../_hardcoded/tracing.go":    _hardcodedTracingGo,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"..": {nil, map[string]*bintree{
		"_hardcoded": {nil, map[string]*bintree{
			"doer.go":       {_hardcodedDoerGo, map[string]*bintree{}},
			"middleware.go": {_hardcodedMiddlewareGo, map[string]*bintree{}},
			"tracing.go":    {_hardcodedTracingGo, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
