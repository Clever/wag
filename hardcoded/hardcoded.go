// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../_hardcoded/doer.go (10.399kB)
// ../_hardcoded/middleware.go (1.685kB)
// ../_hardcoded/tracing.go (7.077kB)

package hardcoded

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __hardcodedDoerGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x5a\xff\x6f\x1b\x37\xb2\xff\x59\xfa\x2b\x26\x02\xee\xb2\x9b\xc8\x2b\x39\x77\x6e\x0f\xea\xf3\x01\xad\xed\xbe\x16\x2f\x4d\x82\xca\x7d\x0d\x10\x04\x57\x6a\x77\x24\xb1\xa6\x48\x95\xe4\x4a\x16\x7c\xfe\xdf\x1f\x66\xc8\x5d\xed\x4a\x2b\x27\x77\x2d\x1e\xde\xf3\x0f\xb6\xb4\x3b\xf3\xe1\x70\x38\xdf\xe9\xb5\xc8\xef\xc4\x02\x21\x57\x12\xb5\xef\xf7\xe5\x6a\x6d\xac\x87\xa4\xdf\x1b\xcc\x76\x1e\xdd\xa0\xdf\x1b\xe4\x46\x7b\xbc\xf7\xf4\x11\x75\x6e\x0a\xa9\x17\xa3\x5f\x9d\xd1\xfc\xc0\x5a\x63\x99\x4a\x9a\x91\x34\xa5\x97\x8a\xbe\x28\xb3\xa0\x3f\x2b\xe1\x97\x23\x2b\x74\x41\x5f\x34\xfa\xf8\x67\xb4\xf4\x7e\x4d\x9f\xdd\x4e\xe7\xf4\xd7\xcb\x15\x0e\xfa\xfd\xde\x60\x21\xfd\xb2\x9c\x65\xb9\x59\x8d\xc4\x1c\xef\x47\xcb\x9d\xf3\x56\xde\x9f\x2d\x4c\xf5\x71\xd0\xa6\x2a\x8c\x36\x1b\xa1\x97\xb2\xc0\x11\x6e\x50\x7b\x67\x4a\x9b\x23\x53\x19\x25\xf4\x22\x33\x76\x31\xba\x1f\xd1\xaa\x71\x1f\xa3\xdc\xdf\x47\x01\x94\x59\x2c\xd0\x42\x13\xf0\x4a\xe1\x06\xed\xe8\x4e\xec\x36\x88\xb4\xee\xe6\xcb\x51\x20\x1b\xf4\xd3\x7e\x7f\x34\x82\xc2\xa0\x05\xe9\x40\x68\x90\xda\xa3\x9d\x8b\x1c\x61\x6e\x2c\x0c\x0a\x23\xf5\x62\x00\x04\x0e\x16\x7f\x2b\xd1\x79\x07\x6b\xe3\x9c\x9c\xa9\x1d\x6c\xa5\x5f\xc2\xd6\x8a\xf5\x5a\xea\x45\xdf\xef\xd6\x18\xa1\x6a\x90\x87\x7e\xef\xda\x24\x39\xbc\x20\x84\xec\x8a\x8f\x64\x08\x36\x7e\xff\x31\x20\xa6\x90\x54\xdf\xdd\xda\x68\x87\x43\xe0\x43\x48\xfb\x8f\xfd\x80\x6a\xd6\x6f\xc4\x0a\xaf\xfc\x3d\x38\x6f\xcb\xdc\x3f\x3c\xb2\xdc\x33\xe1\x30\x62\x7c\x27\x74\xa1\xd0\xc2\x1a\xed\xdc\xd8\x95\x03\xbf\x44\x7e\xdf\x92\x3d\xa0\xd1\xe3\x6b\x92\x73\x0f\x36\x2f\x75\x0e\x49\x51\xbf\x4a\xe1\x77\x88\x4d\xbb\xb6\xe8\x4b\xab\x21\x1e\x4c\x76\x6d\x12\x9b\x5d\x85\xd3\x4a\xd2\x21\xe4\x43\x08\xdb\x1b\x8d\xc0\xa2\xb7\xbb\x4a\x7e\xfa\x22\xd1\xc1\xc5\xf8\x7d\x5b\xeb\x41\x74\xa6\x6d\xc8\x4e\x4b\x15\xb0\xff\x21\xf5\xf3\xe2\x76\xf7\xce\x28\x99\xef\xe0\xc7\xfd\xe7\xb8\x5e\xe3\x09\x14\x38\x97\x1a\x1d\x88\x80\x0c\x6b\x7e\x9c\x85\xc5\x9a\x84\xad\x23\x1d\x8d\xe0\x1b\x91\xdf\x99\xf9\xdc\x41\xd8\x68\xd0\xb7\x2e\x57\x33\xb4\x20\x74\x01\x5e\xae\xa4\x5e\x80\x99\x47\x60\xe1\x3d\xae\xd6\xde\x65\xfd\x5e\xc5\x9a\xa4\xf0\xe1\x23\xf9\x49\x76\x5d\x5a\xe1\xa5\xd1\x8c\xcc\xab\x82\xc5\x1c\xe5\x06\x03\x6e\x53\x11\x43\x10\x0e\xb6\xa8\x14\xfd\xa5\x97\x16\x5d\xa9\x3c\x98\x39\x73\x57\xbe\x18\x0f\xed\xb9\x83\x5f\xae\xcd\x2f\xb0\x42\xbf\x34\x45\xd6\xef\x31\x7a\xd2\x3a\xc7\x21\x9c\x38\xc6\x99\x31\x2a\xea\x6c\x2a\xf5\x42\xe1\x53\x9a\xf3\x4b\xe1\xeb\xd3\x13\x95\xb4\x60\x74\x8e\x41\x9b\xc7\x10\x2d\x5b\xee\x50\xa8\xf0\xb0\x33\x25\xb8\xa5\x29\x55\x51\x2f\x83\x35\xf6\xb9\xc3\xdc\xe8\x02\xc4\xdc\x93\xd3\x79\x98\x0b\xa9\x5c\x16\x8d\xf9\x68\xbd\x14\x4e\x6b\xbe\x61\xb2\x07\x6f\x1e\xce\xe1\x05\xf0\x93\x29\xaf\xf6\xd8\xb4\x22\xd8\x4a\xa5\xa2\x64\xda\xe8\xb3\x77\x6f\xa7\xb7\xc3\xf0\xe9\xeb\xdb\xab\xef\xf6\x21\x83\x37\x73\xf1\xfe\x7d\x46\xac\xb7\x6f\xaf\xdf\x4e\xe0\x7b\x4f\xd6\xea\x40\x1b\x0f\x79\x69\x2d\x6a\xaf\x76\x95\xb5\xe8\x5d\x38\x84\x4a\x1d\x58\xc0\x6c\x77\xe2\x70\x9f\xd8\x70\x38\x6d\x8b\xbf\xc1\xc1\x89\x5b\x74\xeb\xae\x63\x6f\x1e\x3d\xe9\x44\xce\xf9\xe9\xb3\x4b\xd0\x52\xc1\x3f\xff\x49\x3b\xca\x7e\x60\x63\x82\xcb\x4b\x18\xd0\x86\x07\x5d\xcf\x69\xfb\xf4\xa2\xdf\xeb\xd1\x5a\xd9\xd4\x0b\x5f\xba\x2b\x53\x20\xfc\x07\x5c\x8c\xc7\x04\x5e\x69\x7c\x2e\x94\xc3\x7e\xef\xb1\x3e\x02\x6f\x4b\x8c\x6a\xbe\xb9\x5f\x1b\x8d\xda\x4b\xa1\x3a\xad\x4f\x03\xee\x29\x5a\x4e\x1c\xac\xee\x04\xff\xd3\xa6\x37\x97\x1b\x8a\x92\xf1\x29\x47\xf9\xc6\x2a\x8a\xa2\x41\x6e\x51\x38\xf2\xf0\xad\x90\x9e\xed\xc3\x71\x44\x46\xbf\x45\xd4\xf5\xc1\x4f\xe0\x7c\x3c\x1e\xc2\x2b\xfa\xf5\x57\xfa\xf5\x37\xfa\x45\x01\xe2\xfc\x8b\xf1\x18\x56\x52\x29\x19\xac\xd8\xc1\xcb\xd1\x19\x94\x6b\xf0\x06\x2e\xfe\x04\xbf\x4a\xef\xd1\x56\x47\xdb\xbd\x8b\xcf\x30\x68\x98\x5c\xc2\x4a\xdc\x61\x72\xf0\x7a\x08\x17\x69\xbf\xa7\xf1\x9e\x29\xce\xc7\xe3\xca\xc8\x7f\xd8\x4b\xd4\xef\x59\x5d\xd0\x6b\x4a\xf7\xd9\x1b\xdc\x26\xd5\x87\x29\x67\xe4\x84\x19\xde\x98\x6d\x92\x66\x3f\x69\x79\xff\x46\x68\x93\xa4\x69\xda\xef\x21\x71\x8d\xb3\xf1\x05\x8c\x46\xbc\xad\x0b\xca\x4b\x39\x6a\x1f\xf7\xd5\xef\x51\x76\x95\x11\x7c\xc1\x71\xbd\xb2\x88\x0f\xf2\x23\x5c\x02\x8b\xf6\x12\x5a\x42\x27\x49\x62\x75\x91\x7d\xab\x8c\xf0\x5f\xfc\x35\x49\x5f\xbc\x4a\xcf\xce\xd3\x17\xf8\x62\x1e\x9f\x10\x13\xad\x1f\x36\xf6\xe2\x12\x5e\x35\xad\xca\xa2\xff\x3f\xeb\xbb\xa7\x0e\xf8\xff\xbf\x03\xbf\x31\xdd\x59\x23\x38\x29\x25\x48\x4d\xe5\x59\x50\x1e\x39\x54\x9d\x3b\x62\x16\x6e\x03\x3c\xed\xb8\x14\x0e\x56\x6b\xbf\x03\xa7\x64\x8e\x95\x72\x5b\x08\xff\x66\x16\x68\x87\x7d\xa1\xb6\x62\xd7\x88\x17\xb4\xff\x13\xab\xfd\xab\x09\xb7\x21\x43\x50\x6b\x55\x03\xb2\x82\x62\x09\xd5\x56\xc3\xcf\xd2\x2f\x9b\x3a\xaa\xb5\x01\x1a\xb7\x10\x6b\xe4\x60\xc6\x66\x83\xd6\xca\x22\xd6\x15\xa1\x45\x00\x33\xfb\x15\x73\xff\xdc\xd5\xc5\x58\x5d\x06\xf1\x8e\x0e\xe0\x93\xdc\xdf\x57\xa0\x55\x49\x37\x84\x13\x25\x57\x7a\x48\xd9\xac\x0d\xe3\x1b\xc2\xff\x6f\xa1\x4a\x24\xe4\x61\x6b\x9f\x0f\x8f\x2d\x64\xae\x18\xab\x52\xf5\x45\x5d\x0b\xfe\x11\xc5\x6a\xb5\xc4\x10\xcc\x1d\x87\xa5\x7d\xb5\x9a\x05\xe1\xda\x72\xa5\x59\xd2\xdc\x26\x3b\xda\x33\x73\x57\x79\x45\xad\x8b\x4b\x28\xb2\xc6\x77\x76\x92\x3a\xb3\xd0\x3a\xfb\x77\xd9\xde\x30\xfb\xbd\x8d\xb0\x5d\x3e\x1e\x5e\xd4\x7e\xde\xe7\x9a\x6f\x2a\x36\xd8\x2a\x8c\x66\xa6\xa0\x1c\x05\x39\xd5\xff\x5b\x84\x25\x13\x98\xb0\x58\x06\x6f\xfd\x12\xed\x56\x86\x77\x1c\x05\x99\x40\x28\x8b\xa2\x20\xf3\x11\x05\xe3\x72\x0b\x51\xce\xe7\x68\xc1\xe8\x3a\xba\x15\xad\xa5\x98\x9d\xea\xae\x0c\xa6\x88\xcc\x46\x02\x4f\x46\x23\xe7\x69\x3b\x1b\xb4\x73\x65\xb6\xdc\x88\x31\x87\x34\xda\x8d\x5e\xfd\x65\xfc\xe5\xf8\x6f\x5f\x7e\x31\xa2\xb5\xa4\x5e\x9c\x91\xc4\x67\x66\x7e\x46\xbc\x67\x11\xfb\x8c\x12\xaf\x29\xfd\xd9\xca\x14\x72\x4e\xb1\xa1\x7e\xe3\xbc\xf0\x51\x17\xb3\x72\x0e\x1f\x3e\x52\x67\xcb\x67\x60\xb3\x6f\x68\xf3\x31\xde\xd1\x69\xb4\x15\xd6\xeb\xcd\xca\x79\x88\x94\x97\x10\xba\xdb\xec\x47\x14\xc5\xd7\x4a\x25\x81\x97\xf2\x47\x3b\x6a\x12\x4a\x65\xb4\x5a\x2a\xe6\xee\xf7\xe8\x24\x1f\xfb\x21\x93\x55\x75\x2f\xa5\xbd\xaf\x38\xfa\x7d\x55\x3d\x7b\xf9\x92\xf9\x3b\x45\xeb\xd9\xc2\x12\x4f\x94\xe3\x8d\x59\x5f\x29\xe3\xd0\x26\xdc\xa8\x53\xa6\xfd\x86\xd5\x9f\xcc\xca\x39\xe7\xb5\x5e\xc4\xb8\x04\x5b\x44\x11\x38\x3a\x57\x1b\x2a\xb2\x82\x5a\xad\xd0\x5d\x85\x45\xa3\x64\x97\x97\xa0\x50\x27\x95\xe9\xa5\x14\xf2\x9f\x35\x8d\x2f\x66\x9a\x90\x59\x18\x2f\x0d\x32\xce\x2c\x8a\xbb\xb8\xd6\x68\x04\x2c\x61\xd5\x78\xb0\x4d\x46\x73\x9b\xef\x1f\xc8\x90\x19\xb5\x54\x95\x10\x6e\x7d\xa0\x4c\xb7\xe6\x9d\x64\x0c\x47\x06\xcf\xf8\xa1\xce\x56\x88\xeb\x5a\xd2\x0f\x71\x07\x1f\xd3\x76\x2e\x8f\x42\xc6\xb0\x9c\x4b\x9b\x97\xd2\x7f\x43\xb2\xa2\xe5\x06\x51\xae\xd6\x0a\x57\xa8\x7d\x8c\x75\x81\x02\x66\x81\x04\xd6\xd4\x91\x59\xcd\x49\x7d\x8a\x1e\x0a\x9c\x95\x0b\x72\x12\x3a\x3d\xfa\x6b\xd6\x68\x85\xc7\x16\xb3\xd4\x20\x60\x45\x39\x70\xbb\x44\x8b\xd4\x73\xb0\x03\x18\xad\x76\xa0\xcc\xa2\x21\x0a\xb0\x8d\x86\x5a\x8f\x69\x48\x23\x33\x65\xf2\x3b\xae\x10\xea\xea\x62\x6e\xcd\x0a\x16\x86\x32\x9f\x5f\x5a\x53\x2e\x96\x31\xef\x75\x6c\xe9\xa9\x9e\x37\xc8\x1f\x7e\xb8\x71\xeb\x45\x80\x37\x62\x85\xc4\x29\xf5\xa2\x1e\x8f\xf0\x4f\xf8\x9c\xfd\x17\xcf\x45\x5e\xf3\x17\xd2\x26\xf9\x4b\x64\x9d\x4e\x6f\xde\xea\x1c\xc1\xed\x74\x9e\xd1\x27\xd6\xf5\x77\x61\x6c\x33\x9d\xde\xdc\x6c\x28\x7d\x48\x07\xb8\xa2\xb2\x8e\xeb\x9c\xfd\x7c\x07\x36\x52\x80\x43\xbb\x41\x7b\xe6\x88\x30\x4c\x73\x32\xae\x9e\xd0\xe5\x56\xce\x42\xd1\x4c\x1a\x66\x6d\x51\x35\x20\xaa\xc5\xa3\x1a\x0e\x57\xdb\xeb\xe0\x96\x5e\x3f\xf1\x13\xf6\x0c\xbf\xfc\xea\x8c\x9e\x0c\x08\x6c\xf0\x4b\xbf\xc7\xea\xf8\x6c\x2e\x2d\x56\xcc\x15\xb3\xc8\x95\x29\xb5\xef\xe2\x92\xe1\x71\xe4\xb2\x0d\x6a\xe2\xbe\xa1\xd0\x73\x92\xf7\x90\x1b\x6b\xea\x9a\xf7\x5d\xa8\x9e\xc5\xe2\x58\xf4\x0e\xde\x3d\x35\x01\x7c\xef\xae\x5a\x96\xf4\x76\x8d\xba\x09\xc0\x45\x47\x0d\x20\x3b\xa8\x59\x01\x46\x29\xa9\x17\x2c\xd6\xb7\x42\xaa\xd2\xe2\x53\x0a\x38\xa6\x3e\x06\x51\x8a\x7c\xbc\x09\xf6\x14\x48\x8b\xfa\x14\xd8\xb4\xcc\x73\x74\xee\x33\xc1\x22\xf5\x21\xd8\x74\x69\xac\x8f\x5a\xc0\xe2\x53\xdb\x6b\x53\x1f\x61\x35\x04\xfa\xb4\xaa\x4e\x08\x74\xbb\xa4\x34\xf9\xce\x18\xf5\x23\x52\xa5\x46\x42\x9d\x06\x39\xa6\x3e\xc2\x93\x2b\x34\xa5\xff\x4c\xa1\x22\x35\x81\x5c\x85\x56\xe7\xca\xe8\xd8\xf4\xdc\xdc\x63\x5e\x52\x4a\x0f\xc6\xdd\x06\xc9\x9f\xa6\x26\xc0\xd7\xc2\xa3\xce\x77\xb7\xc6\x0b\xf5\x03\x0a\xfd\xb4\x71\xab\x06\xf5\x3f\x56\x28\xc8\x30\xab\x82\x50\x99\x05\xc7\x87\x44\x75\xc5\xb5\x21\x1c\x05\x12\xce\x6e\x2a\xfb\x5e\xcf\xcd\x75\x82\x19\x85\x85\x21\xac\xc4\xfa\x43\x08\x00\x1f\xeb\x81\xdf\xc3\x23\xa5\xac\xb6\x4f\x4f\xba\xbc\x18\xb3\x66\x94\x18\x12\x53\xc3\x95\x3b\x59\x88\x69\x1f\x1c\xf6\x2c\x0d\x0f\x3e\xe6\x8b\x2c\x7b\x1a\xe6\xeb\x74\xdc\x49\x9b\xaf\x2b\x14\x30\x73\x97\xbf\x4e\x0e\x37\x77\x4c\xd3\xc1\xdb\x76\xd3\x49\x27\x6f\x8b\xe6\x24\x46\xe5\x0c\x4f\x61\x44\x9a\x23\x8c\x03\xa7\x9c\x74\xed\xa1\x4d\x73\x0c\xd1\x5a\xbe\x5b\x0d\xa7\x96\xef\x70\xc1\xc9\x21\xef\x31\xcd\x31\x4c\xf4\xbc\xa7\x44\x88\x34\xcc\xfb\x29\x87\x9b\x00\x66\x9f\x70\x61\xc6\x51\x07\x5e\x79\x6c\x83\x98\x1d\x7a\xee\xb0\xdf\x7b\x4c\xfb\xad\xfe\xec\xb8\x80\x49\x41\x6a\xe9\x93\x34\xce\xd0\xdf\xa1\x95\xa6\x90\x39\x8f\xd4\x94\x59\x84\x21\xbb\x16\xaa\x5d\x43\x51\x31\x26\x9c\x93\x8e\xeb\x2f\x87\xde\x73\x29\xd3\x28\xb5\xfc\xd2\xa2\x5b\x1a\x55\x38\x2e\xb7\x4a\x5d\xa0\x75\x5e\xe8\x82\xe7\x09\xeb\xb5\x92\x79\xe8\xef\x67\xb8\x14\x1b\x69\x6c\xc6\xec\x3f\xe9\xb9\xb1\xbe\xd4\xc2\xa3\xda\x0d\x9b\x95\x4b\x61\xd0\xe9\xe7\x3e\xf6\x45\xb0\xb0\x28\x3c\x6c\xc5\x8e\x44\xc1\xfb\x75\xa8\x80\xa5\x63\x94\x42\x78\x31\x04\x67\xa8\x99\xb2\xe8\x8c\xf5\x5c\x45\x96\x56\xf3\x05\x80\x06\xe9\x1d\xb8\x72\xcd\xb7\x70\xd4\x2c\xcc\xac\x11\x45\x2e\xdc\xd1\x36\x56\x54\xe9\xe6\x8e\xeb\x26\x1e\xf9\x1f\x17\x4f\x90\x4c\xa7\x37\x69\x10\x7f\x8a\xe1\x66\xc0\x4d\x46\xa3\x27\x6e\xd9\xa4\x73\x25\xba\xd1\xc5\x17\x59\x5d\x12\xc6\xba\x8e\x5a\x05\x3a\xad\x70\x20\xbd\xc8\x33\xf5\x16\xc5\xaa\xba\x8f\x99\x5c\x56\x7a\xe1\xc1\x5f\xf3\x1d\x57\xed\x5d\x4c\xd9\xd4\x0b\xeb\xf9\xb5\x92\xce\xa3\xe6\x00\x6c\x19\x4c\xa3\xcf\x5e\xf3\xc3\x64\xe0\xf3\xf5\x60\x08\x83\xf3\x57\x5f\x66\xe3\x6c\x9c\x9d\x4f\xc6\x83\x13\xcd\xd7\x5a\x68\x99\x27\xd4\x93\x70\xa3\xd0\xef\xf5\x16\x86\xf7\x9e\x4d\x49\x45\xc9\x7e\x99\x2e\x79\xd2\x40\xdf\xd8\x2a\xa9\xef\x67\x64\x9b\xc3\x0d\xda\x1d\x9c\x8f\xa1\x1a\xc3\xce\x30\x17\x65\x6c\x71\x08\x0d\xad\xbc\xaf\x8f\x46\x58\xa4\x23\x15\x70\x3e\x3e\xab\xa6\xa4\x8c\x16\xfd\x16\xb6\x52\x17\x66\x9b\xc1\xed\x52\x3a\x50\xe8\x9f\x3b\x28\xe9\xf8\x57\x3c\xda\xed\x82\xf4\x06\x16\xc8\x77\x17\x56\xed\x22\x9a\xc8\xf3\x32\x34\x1f\xe4\x5f\xf1\x5e\xc9\x41\xa2\x0d\x37\x24\xc2\xb3\xf9\x81\x64\x23\x5d\xa3\x9d\x63\xee\x6b\xc1\x4d\x69\xe3\xf5\x53\x44\xab\xac\x39\x12\xaa\x1d\xac\x84\xcf\x97\xb5\x28\xcf\x5d\x6c\x53\x10\x84\x72\x86\xd5\xb2\x5d\xa2\xee\xea\x9b\x22\xa4\xe3\x69\x20\xe4\x4b\xa1\x17\xe8\xb8\x35\x55\x66\xf1\x2d\x27\x49\x9d\xef\xc2\x50\xb9\x7d\x71\xc2\x34\xc2\x79\xce\xbe\x53\x44\x1d\x66\xd3\x75\xc2\x3d\xc8\xcf\x0f\x8f\x2d\x86\xd7\x66\x41\xa1\xee\x80\x87\xe1\xe9\xf9\x03\x1b\x05\xf7\xe2\xff\x80\x6a\xa8\x1c\xdf\xe6\x77\xc9\xc1\x1d\x4e\x0a\x0f\x50\xcf\xba\xa4\xe6\xa1\xa4\xa4\x20\x40\x18\xbd\xd2\x2a\x5a\x66\x10\xe7\x18\x03\x78\x09\x95\x7d\x65\x5f\x17\x85\x4d\xd2\x6c\xca\xcb\xb3\x85\x53\x33\xfb\x5b\x6d\xde\x6c\x93\x6f\x70\x1b\x2b\x81\x64\xf0\x9f\x37\xb7\x83\x21\x94\x56\x0d\xc9\x9a\x03\x43\x87\x81\xb3\xfa\xb2\x77\x56\x6a\x3f\x4f\x42\x0d\x00\xb9\xd1\x1a\x73\xcf\x9d\xa1\xa9\xcf\x61\x3a\xbd\xa1\x1e\x05\xc5\x6a\x02\x7f\x72\x83\xd0\xa9\x07\x88\xdc\x68\x2f\x75\x89\xfc\x8d\xd5\xd7\x0b\x94\xb5\x78\x8d\xfb\xf4\x6c\x5a\xce\x42\x0f\xf6\xb3\xf4\xcb\x64\x30\x18\xc2\x9f\x1b\x03\xb4\x30\x79\xfb\xed\x7f\x5d\x60\x3a\x41\xdc\xec\x2f\x06\x02\x67\x76\x13\xa2\x5f\x5c\x9a\x47\x3a\x87\x05\x5d\x78\x15\x45\x9d\x5c\x02\xd5\x8c\xd9\x4f\x7a\x25\xac\x5b\x0a\x95\x84\x19\x51\x82\x9b\xec\x5a\x78\x91\xa4\xe9\x10\xfe\x8c\xe9\x57\x1d\x1b\x6b\x8b\x15\xe5\x62\xe0\x8c\x5b\xce\x67\x97\x30\x88\x6b\x5f\x99\xd5\x4a\xe8\x62\x70\x92\x35\xfc\x1d\x8d\xe0\xd6\x14\x62\xc7\x1e\x66\x11\x72\xca\x27\x61\xd6\x1d\xf6\x07\x61\xdb\x14\x89\xe2\x4c\x96\xdc\x10\xbd\xab\x27\x0b\x55\xfc\x27\xc2\x90\x7a\x22\x70\xd5\x2d\xc3\xf7\x9a\xff\x7f\xa1\x40\xa1\x60\x6b\xac\x62\x7f\x66\x76\x5e\x8e\xf2\x98\xe3\x1b\xc2\x6a\x4d\x72\xf9\xb5\x70\x0e\x64\xc8\x58\xf5\x40\x38\xab\xc1\x5f\x93\x08\x5b\x63\xed\x0e\xc4\x8c\x5a\x86\x22\x0e\x2a\xa4\x0b\x11\x62\x8b\xfb\x39\x0b\x83\xd1\xeb\xfc\xa0\xc8\xe4\x99\x5f\x8d\xe9\x0d\x14\xd2\x89\x99\xc2\x38\x73\x59\x99\x02\x1b\x3a\xe6\x06\xfd\xd9\x25\x14\x59\x73\x80\xf1\xb4\x82\x29\x4c\x50\x48\xa9\xa6\xb7\xad\x38\xf3\x21\x60\x7e\xdc\x93\x1e\xbd\x82\x4b\xc0\xfd\x59\x91\xba\x9b\xa1\x2f\x54\x21\x72\x0e\x92\xc2\x39\x4a\xbf\x0c\x71\x90\x89\x93\xf3\x94\x89\xe7\xd2\xba\x98\xa5\x61\x8b\xcf\x37\x08\x8e\x62\x5c\x38\xaf\x3d\x96\x69\x70\xbe\x4a\xdb\xaf\xa8\x31\x0f\x6b\x2d\x45\x15\x5b\x8b\x16\xc7\x5f\xd2\x66\xa6\xe2\xea\x84\x94\x8e\x05\x1d\x6d\xce\xf3\x5c\xee\x7e\x0a\x70\x66\x85\x7e\x49\xa7\x71\x20\x41\xad\xe9\x6a\x5a\xdd\xeb\x08\xb3\x0d\xbd\xec\x2f\xf9\x2a\xda\xaa\xd3\x2a\x32\x55\x35\x57\xe9\x27\x3c\xa7\x3a\x9f\xce\x0e\x84\x0e\xbb\xbb\x37\xf9\xa3\xe5\x7b\x04\x54\x8e\x4f\xb2\x71\x75\x39\x2d\x67\xc9\x29\xfc\x14\xfe\x0e\xad\xbc\xf6\x47\x0b\xb4\x8f\x7c\xf4\xeb\x91\x78\x1e\xd3\x4f\x56\xd1\xbf\xf3\xba\x43\xce\xa1\xc8\x82\xef\x3d\xb4\x06\xc8\x93\xa3\x09\x72\x55\xfb\x5d\x9b\xa4\xe5\x8f\xc3\xaa\x9a\x0a\x91\x9f\xd5\xd2\x95\x25\xe2\xb8\x36\x0c\xcc\xc3\x46\xe3\x3c\xb8\x79\xa1\xf8\xf7\xcb\xfa\x46\xb1\x17\xfe\x89\x05\x8b\x78\x5f\x41\xdc\x42\xc7\x65\x78\x3a\x2b\x79\x82\xd9\x74\x9a\x58\xe9\x34\x16\x33\x96\xa7\xe7\xc9\xe0\xe2\xfd\x7b\xae\x29\xc3\xd2\x2d\x69\x1e\xeb\x8c\x7c\x34\x53\xe6\xb8\xf2\x99\x37\x30\xbd\x30\x79\xff\x17\x14\xf5\xf4\xc0\xfe\xc4\xbd\x43\x7d\xe5\xf0\x29\xfd\xfd\xdb\xea\x7b\x42\x7b\x8f\xfd\xb6\x1c\x41\x75\x30\x7a\x01\xda\xc0\x3c\xf6\xe2\xbc\xd1\xf0\xbf\x05\x3b\xf4\xf0\x62\x94\x76\x4e\xeb\xff\x27\x00\x00\xff\xff\x00\xed\xaf\xb6\x9f\x28\x00\x00")

func _hardcodedDoerGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedDoerGo,
		"../_hardcoded/doer.go",
	)
}

func _hardcodedDoerGo() (*asset, error) {
	bytes, err := _hardcodedDoerGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/doer.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x53, 0x8e, 0xd, 0xe3, 0x74, 0x70, 0x92, 0xb4, 0x98, 0xaa, 0xed, 0xf4, 0xe0, 0x3e, 0xbe, 0xd0, 0x40, 0x34, 0x8f, 0xe3, 0x23, 0xd1, 0xa, 0x9c, 0x12, 0x3b, 0xc, 0x52, 0x1d, 0xe9, 0x2b, 0x73}}
	return a, nil
}

var __hardcodedMiddlewareGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x5f\x6b\xe3\x46\x10\x7f\xb6\x3e\xc5\x74\x4b\xc8\xea\x70\xe4\x7b\x28\x14\x02\x7e\x28\xe9\xa5\x79\x39\x38\x2e\xa1\x2d\x94\xc2\x6d\x56\x23\x69\xb1\xbc\xab\xce\x8e\xac\x9a\xe0\xef\x5e\x66\x25\x39\x51\x48\xd3\xa7\x3e\x58\xde\x9d\x99\xdf\x6f\xfe\x6f\x67\xec\xce\xd4\x08\x11\xe9\x80\x94\x65\x6e\xdf\x05\x62\xd0\xd9\x4a\x55\x7b\x56\xd9\x4a\x79\xe4\x4d\xc3\xdc\xc9\x99\x7a\xcf\x6e\x8f\x9b\x12\x1f\xfb\x5a\x65\xd9\x4a\xd5\x8e\x9b\xfe\xb1\xb0\x61\xbf\xb9\x69\xf1\x80\xb4\xd9\x99\xe3\x01\xf1\xaa\x0e\x9b\xc3\x8f\x9b\x36\xd4\x35\x92\xca\xf2\x2c\xdb\x6c\xe0\x8b\xf1\xce\x7e\x76\x65\xd9\xe2\x60\x08\xa1\x0d\x75\x04\xe3\x8f\xd0\x89\x22\x16\x70\x1b\x08\x7c\x18\xd6\x30\xe0\x25\x21\xd8\xe0\xd9\xf9\x1e\x81\x1b\x0a\x83\xf3\x35\x70\x83\xa3\x31\xf4\x9d\x30\xca\x3d\xb2\xb1\x3b\x88\x01\xb8\x71\x11\xf6\xe6\x08\x96\x4c\x6c\x46\x5b\x0a\x16\x63\x2c\xb2\xaa\xf7\xf6\xb5\x7f\xdd\x80\x24\x56\xdc\x19\x5f\xb6\x48\xf9\xe2\x06\x4f\xd9\x8a\x90\x7b\xf2\x0b\xf1\x6d\xef\xad\x16\x32\x3d\x8c\xf2\xaf\x18\xbb\xe0\x23\xfe\x46\x8e\x91\xd6\x40\xf0\x61\x92\xff\xd5\x63\xe4\x5c\x78\x56\x25\x56\x48\x90\x60\xa3\x60\x95\x92\xf8\x44\x04\xd7\x5b\x20\xb4\xe1\x80\xa4\x73\x51\xb8\x0a\xce\xba\xed\x16\xbc\x6b\x47\xc0\x14\x8c\x1c\x4f\xf2\x39\x18\x02\xa4\xf4\x0b\x94\x89\x24\x0e\x8e\x6d\x03\x2f\x99\xe7\x73\xa1\xf9\xd8\xe1\xe4\xda\x9a\x28\x45\x23\xe7\xeb\xeb\xc4\x2c\x34\x5b\xa8\xf6\x5c\x7c\x12\xb2\x4a\xcf\xb0\xfc\x6c\x9e\xbc\xbc\xb4\x9e\x4d\x44\x54\x62\x65\xfa\x96\xff\x85\x4c\xf5\x7e\xe7\xc3\xe0\xa7\xbe\x5d\x7c\x7f\x80\x50\x81\xc4\x03\x17\x0f\x6a\x7d\x66\x7a\x3e\xe5\x63\x92\xf2\x1d\xe7\xa7\xb8\xa5\xb0\xbf\x09\x9e\xf1\x6f\xd6\x54\xcc\xa7\x3c\x1f\x7d\xfc\xac\x55\x82\xaa\x75\x8a\x60\xc2\x7c\x7e\x52\x48\xa4\xae\x25\xf6\x35\xa8\x34\x25\x4c\xc6\xa2\xba\x9e\xb2\xd7\x69\x8c\x8b\x7b\xd1\xe8\x3c\x3f\xe5\xe7\xc6\x2c\x2a\x70\x4a\x8d\x69\x8a\x7b\x59\x91\xbb\x87\x87\x2f\x7a\x58\x83\x68\x4e\x79\x76\x4a\x73\x1d\xd9\x70\x1f\x97\x93\x00\x03\x99\x2e\x82\x01\x9a\xc4\x30\x24\x79\x96\x32\x7f\x13\x11\x99\x7a\xcb\xd2\xa4\x37\x26\x2b\x5b\x8d\x18\x70\x9e\xc5\x6d\x1a\x68\x1d\xe1\xc3\x5b\x54\x39\xa4\xff\x3b\x34\x25\x92\xb6\xa1\x44\x81\xa5\xfe\xc7\x62\xe2\xd9\x82\xc8\x45\xb0\xc4\x16\xaf\xa1\x73\x96\xbf\x22\x45\x17\xfc\x57\xe3\x6b\x84\x12\xad\x2b\x31\xc2\xd0\x20\x37\x48\xc0\x01\x8c\xb5\xd8\x31\x18\x38\x8c\x86\xc5\x98\xea\x02\x96\x56\x60\xd2\x4f\x5d\xc8\xe1\x31\x84\x36\x79\xb8\x69\x1d\x7a\x9e\x00\x37\x0d\xda\xdd\x8b\xc7\xc2\xca\x3d\xa6\xad\xb6\xc9\xee\xd9\x4f\xaa\xc5\x7b\xe0\x57\x9b\xbe\x06\xf2\xf5\x22\xb0\xff\x71\xf7\xe7\x6c\x65\xd1\x8b\xb1\xac\xc5\x2f\xc8\x5a\xfd\x7e\x35\x86\x7c\x35\x05\xa2\x64\xcc\xfe\x6b\xe0\x7f\x2a\xcb\xf9\xa6\xc6\x32\x5c\x4d\x0e\xd4\x7a\x2e\x88\xf0\xb8\x0a\xbe\x23\x5f\xcf\xb5\x9e\x56\x7f\x58\x34\xf7\x87\x8f\x1f\xf3\x17\x52\xfd\xc7\x9f\x8f\x47\x46\x2d\xbb\x7b\xdf\x91\xf3\x5c\xe9\x6f\x4f\x6a\x8f\x31\x9a\x5a\xb6\x46\x2d\xeb\x0e\x97\x17\xf1\x12\x7c\xe0\xa9\xf3\x58\xae\xa1\x6b\x51\x9e\x8b\xbe\xab\xc9\x94\xa8\x4e\xdf\x9e\x83\xca\x93\xaf\xf3\x2b\x76\x7a\x67\xa7\xfe\x09\x00\x00\xff\xff\xa1\x73\xce\xd9\x95\x06\x00\x00")

func _hardcodedMiddlewareGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedMiddlewareGo,
		"../_hardcoded/middleware.go",
	)
}

func _hardcodedMiddlewareGo() (*asset, error) {
	bytes, err := _hardcodedMiddlewareGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/middleware.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcb, 0x1, 0xb6, 0x9d, 0x16, 0xe7, 0x46, 0xa2, 0x49, 0x7d, 0xf6, 0xc, 0x20, 0x3a, 0xd4, 0x73, 0x64, 0xea, 0xcc, 0xe3, 0x1f, 0x62, 0xec, 0xc7, 0x5b, 0x68, 0x93, 0x2d, 0xaf, 0x96, 0x19, 0x61}}
	return a, nil
}

var __hardcodedTracingGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x59\x6d\x6f\xdb\x3a\xb2\xfe\x6c\xfd\x8a\x39\x06\x7a\x2a\x15\x8e\x14\xb7\x3d\xe9\xa9\x0f\xf2\x21\x4d\xd2\xd6\x40\xd3\x06\x4d\xee\x3d\xb8\xb8\x58\x14\xb4\x34\x96\x89\xc8\xa4\x96\xa4\xfc\xb2\x41\xfe\xfb\x62\x86\x92\x2c\xc5\x4e\xb6\xdd\x7c\x70\x25\xbe\x0c\x67\x86\x0f\x9f\x79\xa8\x96\x22\xbd\x13\x39\x82\x33\x22\x95\x2a\x0f\x02\xb9\x2c\xb5\x71\x10\x06\x83\x61\xaa\x95\xc3\x8d\x1b\x06\x83\x21\xaa\x54\x67\x52\xe5\xc9\x4c\x2a\x61\xb6\xbd\xa6\x05\x6e\xe8\x7d\xbe\xe4\x91\x0a\x5d\xb2\x70\xae\xa4\x67\x6d\xe9\xd7\x3a\x93\x6a\xb5\xa2\x47\x27\x97\x38\x0c\x82\xc1\x30\x97\x6e\x51\xcd\xe2\x54\x2f\x93\xf3\x02\x57\x68\x92\x3b\xb1\x5d\x21\x1e\xe5\x3a\x59\xbd\x4b\x0a\x9d\xe7\x68\x68\x46\xae\x63\x5d\xa2\x72\x58\xe0\x12\x9d\xd9\xc6\x52\x27\xe4\x97\x91\xb3\x44\x2a\xeb\x4c\xb5\x44\xe5\x84\x93\x5a\x25\x1d\xa3\xb9\x36\xb2\x28\x44\xb2\xac\x36\x89\x76\x58\x2c\xab\xcd\xaf\x5a\x6b\x02\xe1\xf9\x4d\x44\x87\x0c\x50\xff\x73\x7d\x09\x6e\x28\xa5\x68\x6c\xa2\x5d\x51\xf2\x0f\xa5\x1b\x77\x4f\xb9\x29\xd3\x67\x4d\x94\x46\x97\x22\x67\xc7\x86\xc1\xc0\x66\x77\x3c\x0d\x9e\x9e\x60\xb3\xbb\x84\xc7\x3c\x6b\xb6\x1d\xe5\x7f\x1d\x5a\xf7\xec\xf8\xda\x62\x14\x04\x49\x02\x8d\x4f\xda\x80\xd3\x50\x59\x8c\x83\x95\x30\xdd\xe6\x8e\xd7\xf1\x2d\x6e\xdc\x95\x28\xaf\x77\xbd\xa7\xfd\x7e\x32\x7d\xee\x11\x77\xff\x00\x49\xc2\x90\xc4\x52\x18\x54\x0e\x16\x28\x32\x34\xbc\xec\x05\xce\x45\x55\x38\x58\x68\xeb\x20\x01\x46\xeb\x5c\x1b\xe8\x79\x0c\x56\x66\x98\x0a\x13\xc3\x37\x55\x6c\x41\xac\x84\x2c\xc4\xac\x40\x90\x0a\x84\x02\xa9\x1c\x1a\x25\x0a\x68\xe0\x6f\x35\x99\x36\x98\xe1\x5c\x2a\xcc\x60\x81\x06\x21\xa4\x5d\xb7\x93\xa4\x0b\x2c\x5a\xe5\xa8\x5d\x26\xe9\x2d\x4a\xe0\x9d\x15\x7a\x96\xa4\xb3\x93\xe3\x77\xb3\x63\x31\x1b\xff\xf1\xfe\xcd\xbb\xd7\xc7\x6f\x4e\xde\x8e\xdf\xa7\x02\xdf\xbd\x7d\x3b\x1f\xcf\x50\x64\xef\xd3\xd7\xf3\xf7\xf8\xfa\x69\x64\x34\x0e\x72\x53\xaa\xd5\x5c\xe6\x89\x2e\x29\x51\x6e\x5b\xa2\x8d\x73\x1d\x71\xb2\x33\x9f\x8c\x73\x5d\x14\x98\x3a\x6d\x3e\x53\x52\xac\x33\x52\xe5\x70\x0a\xc3\x42\xa7\xa2\xa0\x44\x0d\x0f\x8e\xbe\xa6\xdc\x55\x52\xb9\xf1\x09\x9c\xc2\xdb\x37\xe3\x77\x9c\xe1\x1b\x74\x55\xf9\xa9\xd0\x33\x51\xf0\xae\x5c\x1b\xbd\x92\x19\x9a\x33\x95\x5d\xd6\x0e\x83\x45\x67\xa1\x2a\x29\x99\x4d\x10\x84\x02\xff\x3c\x22\x2b\xc2\xc2\x1a\x8b\x82\xfe\x75\x0b\x7c\xb4\x3d\x39\x5b\xf7\x5b\x4c\x30\x60\xfb\xbc\x8d\xbe\x29\x47\x85\x86\x50\x62\x5b\x6c\x25\x09\xdc\x2e\x70\xb7\x9a\x50\xd9\x6e\xa6\x30\x08\x06\x5d\x65\x68\xf3\xa4\x02\x6d\x5a\x7b\x0b\x84\x54\x14\x85\xf7\x2f\xc3\x39\x39\xbf\xa8\x5c\xa6\xd7\x2a\x0e\xe6\x95\x4a\x7f\x26\xde\x30\x75\x1b\xa8\xf9\x30\xae\x51\x1a\x41\xd8\x1c\xc4\xf8\xa6\x14\xaa\x19\x3b\x82\x57\x6d\x3b\xdb\x33\x8d\xc1\x11\xa0\x31\xda\x44\x70\x1f\x0c\x92\x04\xc6\x31\xa5\x91\xb2\xd8\x04\xc5\xcd\xaf\xdb\x66\xb6\x61\xda\x28\xb9\xf7\x4d\x0c\xc2\x5a\x99\xab\x5e\x0e\x3b\x83\x78\xd4\x74\x0e\x6b\x7c\x49\x49\xa9\x94\x22\x30\x30\x12\x8a\xed\x88\xf2\xa1\x80\x12\x05\x7a\x3e\x07\x2b\x96\x65\x21\x55\x1e\xc3\x37\xb7\x40\xb3\x96\x16\x7d\x1b\x7a\x0f\x5f\x80\x36\xb0\x5e\x08\x47\x1c\x0d\xb7\xdf\xcf\xce\xa7\x5f\x3f\xfd\xb8\x39\xbb\xba\xfe\x42\x0f\xd7\xdf\xbf\x7d\x38\xfb\x30\xfd\x32\xbd\xfd\x3f\xb0\x25\xa6\x72\x2e\xd1\xc6\xc1\xa0\x31\x7b\x6d\xf4\x4c\xcc\x64\x21\xdd\x16\x26\xa7\x70\x1c\x1f\x8f\x83\x81\xb4\x5f\xc8\x19\x6a\xd0\x36\xfe\x84\x0e\xd5\x2a\x1c\xfe\x98\xde\xfc\xf8\xf2\xed\xfc\xec\xcb\x30\x82\xd3\x53\x18\x3a\x53\x11\x77\xc9\x39\x34\xe3\xef\x83\xc1\x41\xc3\xa7\x30\x8e\x8f\x83\xc1\x03\x60\x61\x11\xe4\x1c\x56\x8f\x4c\x3f\xe7\xf6\x30\xfa\x0b\x56\xf0\xdb\x29\x0c\x87\x4f\x2d\xf0\xd1\xe8\xe5\xa5\x5a\xf1\xe6\x91\xe5\xba\x9e\xc5\xd7\xc2\x58\xfc\x58\x68\xe1\xc2\xd5\x08\x4e\xde\x46\xc1\x80\xdc\xa5\x51\xbf\x9d\x82\x92\xde\xe3\x81\x87\x25\xbd\x8f\xfc\xcf\x7c\xe9\xe2\x4b\xc2\xc1\x3c\x1c\xa6\xba\x2a\x32\x50\xda\x41\x49\xd6\xe0\xe5\x0b\xfb\x92\x70\x3a\x27\xb3\xc3\x11\xac\xc8\xe8\xc3\x93\x81\x3f\xed\x6d\x30\x78\xf0\x48\xb8\x5c\xa1\xd9\xc2\xf8\x0f\xb0\x98\x6a\x95\xd1\xa1\x7c\x59\x10\x6a\xb6\xb4\x4e\xaa\x95\xc2\xd4\xd1\x63\xff\x80\xa6\x0d\x47\x80\x70\x6c\x87\xce\x51\xcd\x1f\x0c\x26\xe2\x22\xd0\x73\x68\x29\x66\xc2\xfc\x41\x43\xff\x26\x88\x35\xc0\x93\x8a\xa0\x99\x55\x29\x4f\x70\x0b\x69\x41\x5a\x10\x0d\x41\x8f\xf8\x1c\xaf\x3b\x33\xd8\x44\x0d\xd7\xce\xf8\xa6\xa5\xb1\xab\x4b\xdc\x11\x6f\xeb\x6d\x1c\x0c\x44\x96\xf1\x36\x51\x9a\x6f\x4a\x23\x95\x9b\x87\xc3\x17\x76\xf2\x22\x1b\x8e\x0e\xf2\xe5\x7e\x2b\xf1\x62\x14\x0c\xb0\x3d\xd0\xf5\xce\xf7\xea\x75\xfc\x15\xd7\x61\x43\x09\x1f\x44\x7a\x97\x1b\x5d\xa9\x2c\x8c\x46\xc1\x60\xd0\x1f\xf9\xb7\x74\x8b\xef\x58\xe7\x5a\x6a\x75\x8d\x46\xea\x2c\x1c\xff\xf1\x8a\x04\x51\x7c\xc3\x3b\xf3\xc4\xbc\x4b\x95\x95\x5a\x2a\x17\x52\x5c\x4f\x8c\x99\x2a\x8b\x69\x65\x90\xd7\x8e\x82\x03\x28\x7c\x16\x84\x4c\x4a\x90\x1a\x14\x8e\x32\xdb\x84\x3d\x81\x17\xab\x21\xc7\x1e\x79\x34\xb9\x92\x92\xa0\x70\xdd\x67\xb5\x70\x97\xa7\x03\x78\x8c\x82\x01\x49\x87\xf8\x06\xdd\xa3\x69\xae\x8c\x82\x81\x57\x7a\x31\xa1\xb6\xa6\x55\xa2\xda\x28\x9e\xaa\xb9\xbe\x08\x87\xd6\x09\x43\x4e\x1d\x79\x96\x1b\x8e\xa0\x9e\x70\x45\x51\x0d\x29\x27\x68\xed\x70\x02\xfe\x8f\xde\x29\x45\xc3\xc6\x91\x23\x23\x1c\x0e\x27\x87\x1c\x1b\x05\x83\x87\x28\x68\x32\xb3\x8b\xc1\x95\x9c\xa2\xe0\xe1\x67\x6b\xe1\x47\x6d\x6e\xd1\x3a\x82\xe9\x12\x85\xe2\xc3\x34\x43\x2a\x5a\x5c\x8a\x2a\x25\x1d\x90\xb2\x92\x2a\xf7\x85\x51\x65\xb0\x94\x94\x73\x5f\x19\x2d\x2d\x01\x62\xa6\x57\xe8\x85\x4c\xe5\xe8\x70\xd0\xe1\xea\xce\x8d\x61\xea\xea\x1a\x67\xbd\x86\x39\x5a\xe2\x52\x9b\x2d\xd9\x6c\xab\x22\x19\xc0\x8d\x58\x4a\x3e\x24\x75\x19\xc5\x0c\x6c\x29\x94\xfd\xf9\x7a\x57\xc7\x14\x46\x10\xbe\x6a\xa5\x61\x3c\x55\x57\xbc\xe2\xaf\x55\xba\xd6\xb7\xc9\x29\xec\x6c\x7d\xc5\xf5\x63\x73\x61\xf4\x33\x18\x1b\xc7\xc7\xff\x01\x53\xcf\x6d\x29\x27\xe0\x69\xf3\xf0\x44\x45\x3f\x44\xbf\xcc\xd1\x27\x6f\xa3\x27\x93\x40\xc1\xd7\xbe\xb4\x23\xbe\xee\x2d\x1d\x0c\x98\x33\x19\x30\x3d\x96\x9d\x5e\xec\x64\x50\x0c\xd3\xae\xa8\x69\xdc\x21\xa8\xad\xb5\xb9\x83\x50\x38\x28\x50\x58\x07\x6b\xe9\x16\x9e\x36\x7d\x1d\xa7\xc3\xdb\xf0\x77\xd7\x22\x2c\x2b\xeb\x5a\x80\xd4\xb2\x6b\x7a\x61\x09\x73\x73\x6d\x96\xa4\x9a\x1d\x18\xa1\x32\xbd\x84\xb9\xd1\x4b\xb6\x80\xca\x49\x83\x84\xa6\xd4\x03\x54\x2a\x77\xf2\x36\xf6\x4b\x7c\xac\xb1\x57\x16\x38\xea\x45\xb2\x39\x32\x62\xdb\x5f\x3d\xd3\x68\xb9\xee\x65\x9a\xbd\x25\x13\x6d\x92\x88\xd3\x6e\xbc\xf7\x3b\x89\x75\xcd\x37\x81\x0f\xc2\x62\x16\xf6\x13\x3e\xbd\xf8\x4e\xe5\xa8\xee\x3a\x40\x41\x11\xf3\xa6\x17\x90\x16\x61\x29\x36\x72\x59\x2d\x2d\xab\x46\xa7\x21\xaf\x84\xc9\x40\xe4\x82\xae\x80\x60\xf5\x12\xdd\x82\x4f\x8f\xa6\xdf\xb5\xd1\x2a\xe7\x43\x6b\x51\xd1\x85\x17\x04\x38\x5f\xfb\x32\xe1\x04\x54\x0a\x37\x25\xa6\x0e\xb3\x62\xbb\x17\x44\x29\xd4\x17\xb9\x94\xce\xf6\xa5\xa2\x6f\x63\x79\x70\xe6\xe8\xf6\x59\x39\x3c\xd7\x95\x72\xdc\x31\x81\xf1\xf1\x31\x79\x3c\xb8\x5c\xa1\x72\xdd\x0e\xfa\x6b\x3a\xbf\x48\x75\xf7\xb8\xaf\xe9\x7c\xe0\x88\xfb\xbe\x6c\x55\xda\x41\xba\x2f\x15\x9e\xe4\xae\xaa\xcd\x0d\x9a\x15\x9a\x2b\x99\x65\x05\xae\x77\x6a\xda\xc2\x72\xd7\xe4\x16\xc2\x81\x5d\xb0\x64\x99\x21\x08\xe7\x44\xba\xc0\x8c\x52\x28\xa0\x73\xe3\x06\xcb\xc6\x58\xb2\x4f\x9d\xdf\x6a\xb7\xe6\x7d\x56\xb9\x9d\x00\x93\xba\xf5\x94\xe4\xeb\xbf\xc8\x32\xff\xee\x6f\x98\x20\xd5\x5c\x93\x59\x02\x91\xc1\x7f\x56\x68\xdd\x51\xad\x2f\xd3\xa6\x02\x90\xf5\xef\x32\x5f\x38\x50\x7a\x0d\x6b\x04\x4d\x37\x3d\x5b\x95\x7c\x23\xa4\x41\xb4\x57\x84\x68\xa9\xd8\x10\xa1\x5a\x38\x1f\xc5\x85\x70\x22\xd3\x5c\xeb\x30\x75\x0d\x31\x1e\xc8\x43\x48\xb1\xc8\x14\xbf\x8a\x25\xd6\x17\xab\x08\x68\x30\x5f\x0e\xe3\xcf\x42\x65\x74\xc6\xa0\xfb\x46\xe7\x5e\xbb\x82\x32\xc1\xa2\x81\x3f\x3f\xc4\x87\x6d\x8e\xda\x7e\xda\xa3\xdd\xed\xd8\x86\xbb\x7b\x74\xb4\xe3\x34\xbf\x32\x3c\xbf\x76\x33\xd8\xfb\xd0\x73\xf4\x23\xcd\x67\x23\x66\xed\xe7\x7d\x47\x5b\x6a\x65\xf1\x6f\x23\x99\xe9\x0c\xbc\xaa\xdb\x39\xed\x91\x17\xb1\x49\xd2\xf8\x09\x0b\x61\x01\x37\xb4\x4f\x54\x57\xb8\x80\x95\x42\xc5\xbc\x0b\x65\xe5\x40\x3a\xba\x5e\xfb\xbd\x4b\xdd\xe6\xf1\xbe\x91\x35\xdb\x96\x02\x3e\x0d\xdd\xe2\x6f\x9a\xdb\x55\x48\x51\xb3\xa0\xb6\x29\xab\x6e\x1e\xda\x76\xfe\x05\x36\x8d\x3f\x0b\x5b\x13\x40\x58\xfb\x39\x20\x5f\xa6\x17\x23\x6f\x7d\x7a\xc1\x33\x53\x9e\x4a\x83\xe2\x1b\xde\xc1\x30\x1a\x51\x6b\x3b\xb7\x6d\x66\x13\x49\xc2\x07\x9b\xe0\x41\x3a\x1f\x09\xab\x0b\xdc\xd4\xbb\xef\x2f\xa4\x4c\x7b\x04\xae\x11\x58\x4d\x91\x81\x5b\x68\xba\x3b\x69\x8f\xaf\x54\x1b\x83\x85\xd7\x53\x85\xce\x2d\xa3\x9c\x7d\xb2\x4c\xd8\x96\x57\x92\x73\x28\x50\x85\xb5\xaf\x7c\xef\x79\xf3\x1a\x7e\xff\x9d\x5b\x7d\x24\xdc\x38\x3e\x81\x7b\xa0\x2d\xe8\x49\x74\x8f\xe7\x09\xf5\xce\xb6\x0e\x21\x7c\xf3\xfa\x28\x5d\x08\x43\xce\x46\x23\xf8\xb3\x6e\x1d\x9f\xec\x5a\x6b\x9a\x67\x32\x2b\x49\x43\x64\xde\x91\x41\xed\xc2\x07\x3b\x82\x1f\x94\xb3\x05\x6e\xe2\x0b\x4c\x75\x86\x75\x6a\x1a\x1f\xfd\xf0\x03\xaa\xad\xbb\x71\xf1\x59\x96\x35\x6f\x43\x9e\xf9\x43\x66\xc3\x91\x9f\x3b\xe8\x0b\x73\x52\xe5\xfe\xa3\x62\xfc\x41\xe6\x97\x2a\x93\x42\xc5\xff\xc3\xf9\x0d\x5b\xaf\xfe\xff\xcf\xc9\x3f\xa2\xa8\x5e\xdc\x27\xe6\x69\x57\xeb\xc4\xfd\xba\xa7\x34\xf1\xbf\x73\xb4\x71\xa9\xf1\x91\x6e\x6c\xfe\x67\x11\x33\xa3\x7c\xbe\xbd\xbd\x0e\xcd\x7a\x04\x5c\x8e\x1f\x22\x56\xd4\x9e\x7c\xbd\x22\x50\x96\x69\xab\x61\x5d\x3a\x3c\xae\x6d\xf5\x9f\x40\x88\xc7\xd2\x42\xa2\x72\x0d\x27\xda\x86\x62\x9d\xb8\x43\xe6\x39\xd1\x9f\xb5\x36\xa2\x1c\x01\xc6\x79\xec\x0f\x7b\xfd\xed\xac\x5d\xcf\xb3\x6f\x87\x65\xc9\x5e\x7d\xa7\x81\x95\x28\x2a\xae\x8f\x65\x45\x17\xc6\xfa\xa0\x83\x22\x26\xd4\x95\x63\x51\xb0\xff\x59\x46\x5a\x1e\x8f\xd9\x4e\x34\xd4\x1f\x2a\xb4\x22\x8e\x06\x14\xe9\xa2\x59\x8e\x4f\x4f\xfd\xe9\x19\xd6\x5a\xbd\x64\x07\x66\x98\xb3\x6e\x76\xb2\xf0\xa7\x89\xee\x80\x4a\x3a\x29\x0a\xf9\x2f\xcc\x20\xc4\x38\x1f\x51\xb4\x52\xd5\xa5\xc6\x97\x94\xaa\x8c\x6a\x22\xef\xe6\x34\x9c\x09\x8b\xbb\x0c\x7b\x72\xa3\x9b\xda\xad\x91\x65\xc9\xe2\xae\x14\x8a\xb8\xf8\xdc\x6d\xfe\x97\x63\xe6\xaf\x6f\x73\x91\xe2\xfd\x43\xb4\x3f\xa1\x23\xeb\x4c\xa7\xf9\xbe\xb7\xce\x04\x7a\xaf\xfb\x8b\x4c\xf6\x5a\x18\x10\x6e\x5b\x62\xcf\x2c\xd1\x4e\x95\x3a\x5a\xb4\x1f\x08\xc0\xbe\x6b\xc1\xe0\xb9\x58\x5a\xfd\x1b\x12\xd2\x3a\xd3\x22\x68\x8d\x84\x7b\xfc\x1f\xbe\xea\xd5\x89\xae\xb2\x6f\xeb\x8c\xff\x40\x1e\xf7\xd2\x4e\x75\xc8\xc5\xfd\x2c\xf0\xed\xb5\x1e\x4c\xf5\xee\x91\x14\x66\x51\xff\x69\x4f\xd4\x47\xd1\xde\xc4\x27\x0a\xe5\xde\xb8\x9b\x3a\x1d\x1f\x99\x2b\xe9\x8e\xc1\xc5\x8f\x14\x9e\xce\x6a\x46\x3f\x50\xf3\xea\x2f\xa8\x5c\x52\x56\x23\xd0\x77\x44\x34\x1d\xde\x88\x39\xb7\xa1\x71\xf1\xe3\x7c\x47\x71\x58\xab\x84\xba\x7a\xe9\xbb\xba\x32\xd5\xc9\x5a\xb5\xd4\xd0\x60\x28\xbe\xf2\xde\x24\x09\x49\x76\x04\x61\xdb\x8c\xbe\xb4\xad\x86\x6e\xce\x1e\x7f\x21\xf1\xfa\x2e\x8a\x3b\xdb\xd6\x68\xb9\x4b\x5f\x9a\x29\xf0\x33\xea\xf3\x65\xb0\x2e\xd8\x5e\x64\xed\x8a\x11\xcb\x23\x3e\xa7\x42\x31\x9a\x9a\x83\x59\x7f\x70\xaf\x8f\xd3\x41\x9b\x07\x90\x52\xf3\xb5\x07\xfb\xf4\xa2\xd5\x4b\xf7\xc1\xcf\x97\x7c\x2a\xf8\xfd\x52\xbf\x5f\xe6\x9b\x4b\xd5\xa3\x71\xfb\xf5\x7c\xb4\x37\x66\x4f\x09\x10\x11\x0f\xbc\xc4\xd8\xb9\x57\x8f\xef\x7a\xb9\x43\x59\x5c\xa7\xa3\xeb\xf8\xa8\xf7\x7f\x19\x9f\x39\x79\xe7\xc2\x18\x89\x26\x34\xf5\x7b\xd4\xd1\x71\xbf\xa2\x49\x1e\x82\x7f\x07\x00\x00\xff\xff\x72\x8c\xce\xfa\xa5\x1b\x00\x00")

func _hardcodedTracingGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedTracingGo,
		"../_hardcoded/tracing.go",
	)
}

func _hardcodedTracingGo() (*asset, error) {
	bytes, err := _hardcodedTracingGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/tracing.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x22, 0xcf, 0xca, 0x43, 0xc8, 0x71, 0xfb, 0xbe, 0x8, 0x57, 0xf8, 0x2, 0xb6, 0x6c, 0x2f, 0x88, 0x8, 0xad, 0x25, 0x8, 0x1b, 0xf5, 0x4c, 0x23, 0x15, 0x7, 0xe8, 0x0, 0xc, 0xd1, 0x8e, 0xd6}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../_hardcoded/doer.go":       _hardcodedDoerGo,
	"../_hardcoded/middleware.go": _hardcodedMiddlewareGo,
	"../_hardcoded/tracing.go":    _hardcodedTracingGo,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"..": {nil, map[string]*bintree{
		"_hardcoded": {nil, map[string]*bintree{
			"doer.go":       {_hardcodedDoerGo, map[string]*bintree{}},
			"middleware.go": {_hardcodedMiddlewareGo, map[string]*bintree{}},
			"tracing.go":    {_hardcodedTracingGo, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
