// Code generated by go-bindata.
// sources:
// _hardcoded/doer.go
// _hardcoded/middleware.go
// DO NOT EDIT!

package hardcoded

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __hardcodedDoerGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x1a\x7f\x6f\xdb\x36\xf6\x6f\xfb\x53\x70\x06\x76\x95\x52\x57\x4e\xba\x65\x77\xf0\x2e\x3b\x6c\x49\x7a\x2d\xb0\xb5\xc5\x9c\xdd\x15\x28\x8a\x95\x96\x68\x9b\x8b\x4c\x6a\x22\x95\xc4\xc8\xfc\xdd\xef\xbd\x47\x4a\xa6\x6c\xd9\xc9\xb6\xe2\x70\xe7\x02\xb1\x2c\xbe\xf7\xf8\xde\xe3\xfb\xcd\x16\x3c\xbd\xe6\x73\xc1\xd2\x5c\x0a\x65\xfb\x7d\xb9\x2c\x74\x69\x59\xd4\xef\x0d\x52\xad\xac\xb8\xb3\x03\x78\x14\x2a\xd5\x99\x54\xf3\xd1\x2f\x46\x2b\x7a\x51\x96\xba\x34\xf8\x34\x5b\x12\x44\xae\xe7\xf8\xb5\xe4\x76\x31\x2a\xb9\xca\xf0\x87\x12\xd6\x7f\x8d\x16\xd6\x16\xf8\x6c\x56\x2a\xc5\x6f\x2b\x97\x62\xd0\x87\x87\xb9\xb4\x8b\x6a\x9a\xa4\x7a\x39\xe2\x33\x71\x37\x5a\xac\x8c\x2d\xe5\xdd\xb3\xb9\xae\x1f\x07\x6d\xa8\x4c\x2b\x7d\xc3\xd5\x42\x66\x62\x24\x6e\x80\x67\xa3\xab\x32\x05\x62\x3d\x5d\xc0\xaf\x92\xa7\xc0\x27\x0b\x31\x82\xf7\xe1\x33\x6c\x41\xa4\x75\xce\xd5\x3c\xd1\xe5\x7c\x74\x37\x42\x56\xbd\xd8\xa3\xd4\xde\x79\xae\x41\xb6\xb9\x28\x81\xa6\x2e\xae\xe7\x89\x54\xa3\xf3\x1c\x76\x2e\x47\xd7\x7c\x75\x23\x04\xd0\x49\x6e\x4e\x47\x0e\x68\xd0\x8f\xfb\xfd\xd1\x88\x65\x1a\x10\xa4\x61\x5c\x31\x09\xe4\xca\x19\x4f\x05\x9b\x69\x20\x92\x69\xd8\x7b\xc0\x90\x34\x2b\xc5\xaf\x95\x30\xd6\xb0\x42\x1b\x23\xa7\xf9\x8a\xdd\x02\xdb\xec\xb6\xe4\x45\x01\x50\x7d\xbb\x2a\x84\x27\xd5\x10\xb9\xef\xf7\x2e\x74\x94\xb2\x23\xa4\x90\x9c\xd3\xb1\x0d\x59\xe9\x7f\xff\xe8\x28\xc6\x2c\xaa\x7f\x9b\x42\x2b\x23\x86\x8c\x4e\x2c\xee\xaf\xfb\x8e\xaa\x2e\x5e\xf3\xa5\x38\xb7\x77\x0c\x94\x5c\xa5\xf6\x7e\x4d\x7c\x4f\xb9\x11\x9e\xc6\x4b\x38\xc5\x1c\xb6\x2e\x60\x63\x5d\x2e\x0d\xb3\x0b\x41\xeb\x2d\xde\x1d\x35\x7c\x7d\x81\x7c\x6e\x88\xcd\x2a\x95\xb2\x28\x6b\x96\x62\xf6\x27\xd8\x46\xa9\x4b\x61\xab\x52\x31\x7f\x2c\x09\x50\x2b\x93\x73\x77\x56\x51\x3c\x64\x29\x50\x23\xf1\x40\x0a\x7f\xc2\xc4\x11\xcf\x32\x53\xbf\x60\x56\xb7\x15\xef\xb8\x0f\xc1\x9d\x00\xb8\x5f\x46\x9a\xef\x07\xa2\x04\x70\x7f\x56\x9a\x7e\x0f\xe4\x60\xe3\x33\x16\xc8\x80\x16\x8c\x87\x82\xaf\x61\x35\xf9\x17\xcf\x2b\x11\x35\x07\x75\xbf\x8e\x93\x08\x3d\x42\xcd\x01\xf4\x86\x03\xaf\x05\x0b\xec\x39\x99\x14\x5c\xf5\x7b\x20\xfe\xd5\x9b\x8b\x37\x63\x14\x9c\x59\x3e\x37\x20\x6c\xce\xad\x97\x5e\xaa\xa2\xb2\x2c\xe3\x96\xff\xa3\xdf\x93\x33\x56\xf0\x12\x08\x20\x26\xee\xba\x4d\xed\x45\xa9\x97\x35\x7b\xc0\x51\xfc\x75\x08\xff\xd9\x19\x53\x32\x47\x4d\xf5\x80\x91\x2d\x64\xcb\x4b\x82\xf2\xec\x0f\x5b\xab\xe7\x0b\x99\x67\x6f\x66\xd1\x86\xd8\x46\x09\x31\xc8\xb6\x66\x22\x37\xe2\x71\x94\x11\x9c\x24\x01\xd5\xa2\x08\xa6\x48\xae\x00\x54\x94\x51\x9c\xbc\x52\xbf\x88\xd4\x46\xf0\x6a\x63\x27\x40\x33\x24\xf7\xf2\xea\xea\xed\x4b\xc1\x33\x51\x9a\x03\x4b\xe7\xbc\x2c\x25\x90\x2c\x13\xf7\x22\x06\x4d\xe0\x7e\x81\x0a\xbc\x75\xc2\xcf\x21\x83\x90\x98\x5c\xe2\x49\xcf\x22\x08\xa2\x55\x9e\xa9\x27\x16\x34\x8f\xcc\x34\x96\xb8\x70\x94\x59\xf4\xf9\x4d\x3c\x20\xc3\x70\x92\x78\x3a\x59\x92\xa1\x85\x87\x46\x0d\x2b\xe5\xaa\x76\x4a\xfc\x21\x85\x61\xa7\xc7\xef\xba\x2c\x9a\x60\x77\xec\x79\xf3\x21\xcb\xee\x11\xd4\x5b\x9d\xcb\x74\xc5\x7e\xdc\x3c\xfb\xfd\x82\x37\x2c\x13\x33\xa9\x60\x3b\xee\x28\x43\xbc\xc2\xd7\x89\xdb\x2c\x04\x6c\xc5\x29\x20\xf2\x1d\xa4\x17\x3d\x9b\xa1\x11\xa2\x5c\x2e\x88\xa8\x6a\x39\x45\xcf\x54\x60\xa0\x72\x89\xda\xd0\x33\x4f\x98\x5b\x2b\x96\x85\x35\x49\xbf\x57\xa3\x46\x31\x7b\xff\x01\xf3\x45\x72\x51\x95\x60\xc8\xda\x19\x39\xed\x0a\x58\xa9\x90\x37\xc2\xd1\x0d\x15\x31\x64\xdc\xb0\x5b\x91\xe7\xf8\x8d\x8b\xa5\x30\x55\x6e\x61\x27\xc2\xae\x73\x92\xf7\xdd\x27\x86\x7d\xbc\xd0\x1f\xd9\x52\xd8\x85\xce\x60\x73\xa2\x1e\xb5\xdc\x79\xc8\xf6\x78\xf3\x54\xeb\xdc\xeb\x6c\x02\xc2\xe4\xe2\x90\xe6\xec\x82\xdb\xe6\xf4\x78\xcd\x2d\xd3\x2a\x15\x4e\x9b\xbb\x24\x5a\x01\xba\x43\xa1\x40\x70\xa5\x2b\x66\x16\x68\x6a\xcd\x36\xa2\xa1\x7d\x62\x04\xe4\xb4\x8c\xf1\x99\xc5\x4c\x62\xd9\x8c\xcb\x1c\x34\xec\xc2\xda\xce\x7e\x31\xdb\xaf\xf9\x20\x0e\x6f\xad\xdc\x9f\xb0\x23\x46\x6f\x26\xb4\xdb\x3a\xb4\x22\x48\x6b\x70\x10\x8e\x33\xa5\xd5\xb3\xb7\x6f\x26\x57\x43\xf7\xf4\xed\xd5\xf9\xcb\x4d\x1e\x24\x61\x4e\xdf\xbd\x4b\xfa\x4d\x18\x7b\x65\xd1\x5a\x0d\x40\x5b\x96\x56\x25\x46\x8c\x7c\x55\x5b\x8b\x5a\xb9\x43\xa8\xd5\x21\x20\xdf\xac\xf6\x1c\xee\x01\x81\xdd\x69\x03\x17\x6c\xeb\xc4\xc1\x68\x8a\xae\x63\x0f\x8f\x1e\x75\xe2\xe3\x8f\x8f\x07\xbf\xfd\x86\x12\x25\x3f\x90\x31\xb1\xb3\x33\x36\x40\x81\x07\x5d\xef\x51\x7c\x5c\xa0\x08\x02\x81\x0a\xc2\x9b\xad\xcc\xb9\xce\x04\xfb\x3b\x38\xf7\x71\x18\x5b\x66\x1c\xa2\x62\x18\x24\xc0\x2e\x84\x57\xf3\xe5\x1d\x30\x07\xb2\x4a\x9e\x77\x5a\x9f\x62\x62\x03\xd1\x72\x62\x67\x75\x7b\xf0\x0f\x9b\xde\x0c\x3c\x0f\xf2\xbb\x7f\x4b\xa5\x4b\xb0\x4b\x8e\xd1\x20\x2d\x05\x37\xe8\xe1\xb7\x1c\x0c\x0f\xed\xc3\x50\x99\x21\xec\xad\x10\xaa\x39\xf8\x31\x3b\x39\x3e\x1e\xb2\xe7\xf8\xe7\x4b\xfc\xf3\x37\xfc\x83\x01\xe2\xe4\x2b\x50\xc2\x12\xcc\x47\x3a\x2b\x36\xec\xe9\xe8\x19\xab\x0a\x4c\x66\xa7\x9f\xb3\x5f\x24\x04\x8c\xb2\x3e\xda\x6e\x29\x1e\x61\xd0\x98\x39\x96\xfc\x5a\x44\x5b\xcb\x43\x76\x0a\x61\x59\x41\xea\x40\x08\xe0\xb1\x36\xf2\x1f\x36\x1c\x01\x01\xe0\x13\x53\x39\xf0\x9b\xbc\x16\xb7\x51\xfd\x30\xa1\xca\x34\x22\x84\xd7\xfa\x16\x32\xd2\x4f\x4a\xde\xbd\xe6\x4a\xbb\x3c\x47\x99\xfe\x38\x39\x3e\x65\xa0\x12\x14\xeb\x14\x8b\xad\x14\x04\xf0\x72\xf5\x7b\x58\x32\x4a\x4f\x7c\x4e\x71\xbd\xb6\x88\xf7\xf2\x03\xa4\x46\x62\xed\x29\x6b\x31\x1d\x45\x11\x70\x94\xbc\xc8\x35\xb7\x5f\x7d\x19\xc5\x47\xcf\xe3\x67\x27\xf1\x91\x38\x9a\xf9\x37\x88\x84\xfb\x3b\xc1\x8e\xce\xd8\xf3\xd0\xaa\xe0\xeb\x7f\xd6\x77\xf7\x1d\xf0\xff\xbf\x03\xbf\xd6\xdd\x59\xc3\x39\x29\x26\x48\x85\x3d\x87\x53\x1e\x3a\x54\x93\x3b\x7c\x16\x6e\x13\x38\xec\xb8\x18\x0e\x20\xcb\x02\x18\x00\x8b\x5a\xb9\x2d\x0a\x7f\x30\x0b\xb4\xc3\x3e\xcf\x6f\xf9\x2a\x88\x17\x28\xff\x9e\xdd\x7e\x6f\xc2\x0d\x78\x70\x6a\xad\x1b\x1b\x52\x90\xaf\xf7\xda\x6a\xf8\x37\x04\xa8\x50\x47\x8d\x36\x40\xb5\xb7\xcc\xb7\x7d\xce\x8c\x35\xa8\xba\x84\x0e\xd3\x95\x0e\xae\x37\x66\x7a\x8a\x15\xdc\x13\xd3\x14\x63\x4d\x19\x44\x12\x6d\x91\xc7\x82\xb9\x26\x5a\xd7\x9f\x43\xb6\xa7\xe4\x8a\xb7\x21\xc3\x86\xc7\xaf\x20\x7d\xd7\x12\x00\xe5\x61\x4b\xce\xfb\x75\x8b\x72\x1c\x36\x2d\x47\x4d\x2d\xf8\x29\x3a\xb0\x7a\x0b\x28\xe8\xaf\xb7\xda\x17\xdf\xaf\xb4\xf9\x82\x96\x25\x14\x93\x1c\xed\x33\x40\xf5\x5e\xd1\xe8\xe2\x0c\x2a\xde\xe0\x37\x39\x49\x93\x59\x70\x9f\xcd\x5a\xb2\x31\x4c\xd7\x06\x75\xf8\xb8\x5b\x68\xfc\xdc\xc5\xd1\xba\xea\xc2\xa0\xfb\x35\xf9\xde\xd7\xf5\xbb\xa7\x4f\x3d\x47\xa6\x70\xe1\xe1\xac\x5d\x81\xf7\x90\xef\x1a\x1f\xfc\x3e\x17\x2a\xaa\xd9\x8b\x31\x2c\x7c\x16\x32\xe8\xa3\x91\x8b\x3e\xae\xb6\x27\xf2\xbd\x29\x64\xc3\x6b\x78\x00\xe1\xb0\x08\x3d\xcf\x35\xb4\x39\xbe\x38\x25\xbe\xc1\xb4\xb3\x95\x2b\x8c\xd1\x7d\xe6\x5c\xaa\x3a\xb0\x7c\x07\x2b\x09\x61\xa0\xdc\x3d\x57\x6a\xe5\x42\x14\x0d\x23\xef\x3d\x83\x1f\xe2\x76\x38\xf7\x3c\x78\xcf\x4c\x65\x99\x56\xd2\x7e\x87\xac\x88\x92\x7a\x04\xb9\x2c\x72\xb1\xc4\x51\x8a\x33\x77\x07\xc1\xa6\x0e\x04\x7a\x3e\xcc\x45\x8a\xe2\xfa\x04\x12\x50\x26\xa6\x15\x35\x93\xa8\x42\xfc\x86\xae\x09\xdc\x5f\xb4\x90\xa5\x02\xbf\x5a\x62\x18\xbc\x5d\x88\x52\x60\xd9\x49\x89\x44\x2b\xc8\x00\xb9\x9e\x07\xac\x80\x97\x02\xb6\x4b\xf7\x04\x83\xe9\x62\x9a\xeb\xf4\x9a\x92\x44\x93\x60\x66\xd0\x8d\xb2\xb9\xa6\x4e\x76\x51\xea\x6a\xbe\xf0\xa1\xaf\x43\xa4\x43\x6d\x8f\xe3\xdf\x7d\xa8\x76\xef\x79\x02\xd4\x7c\xbb\x0e\xbb\x19\xfa\xd0\xe7\xc8\xfd\x48\xbe\xa7\x2f\x54\x24\x9a\x97\xc7\x9a\x4c\x2e\xdf\x40\xf5\xce\x70\xb4\x95\xe0\x13\xa9\xf9\xa5\x1b\x5e\xc1\xe2\x25\x0e\xa9\x70\x16\x24\x96\x98\xd4\x29\xcb\x6d\xa6\x5c\xec\x46\x72\x66\x44\x09\x01\xe7\x99\x41\x40\x37\xd3\x4a\x28\x77\x0a\x93\x96\x72\xea\x4a\x26\x54\x2e\x29\x0a\x73\x01\xaf\x37\xf7\x1a\xd8\xde\x6d\x23\xfe\x15\x2e\x1f\xf8\x38\x71\xd9\x47\x1c\xec\x8d\x07\x48\x6c\xf0\xb1\xdf\x23\x4d\x3c\x1a\x4b\x01\x34\x62\xf9\x18\x72\xae\x2b\x60\xa1\xe3\x23\xdd\x6b\x8f\x55\x06\xd0\x88\x4d\x1d\xf3\x5e\xdc\x6d\x6c\xd1\x40\x37\xb8\x6f\x5d\xed\x84\xd3\xcc\x47\xe0\x6e\xa0\x91\xc0\x2b\x73\xde\x32\xa2\x37\x05\x54\xa7\xc1\x87\x52\x4e\x43\x40\x76\x40\x93\x02\x34\x54\x85\x6a\x4e\x6c\xbd\x80\x26\xab\x2a\xc5\x21\x05\xec\x42\xef\x12\xc9\x73\x74\xef\x90\xd8\x21\x22\x2d\xe8\x7d\xc4\x26\x55\x9a\x0a\x63\x1e\x49\xcc\x43\x6f\x13\x9b\x2c\x74\x69\xbd\x16\x44\xf6\x90\x78\x6d\xe8\x1d\x5a\x01\x43\x0f\xab\x6a\x0f\x43\x57\x0b\x38\x8b\xec\x2d\x9c\xd3\x8f\x02\xf3\x34\x32\xb5\x9f\xc8\x2e\xf4\x0e\x3d\x08\xb0\xba\xb2\x8f\x64\xca\x43\x23\x91\x73\x57\xe8\x42\x0a\xf4\x25\xef\xe5\x9d\x48\x2b\xac\x8e\x9c\x71\xb7\x89\xa4\x87\xa1\x91\xe0\xf7\xe0\xf4\x2a\x5d\x5d\x69\xcb\xf3\x1f\x04\x57\x87\x8d\x3b\x0f\xa0\x7f\x5e\x02\x38\x90\xa8\xcb\x01\x08\x63\x14\x1f\xa2\x7c\x2b\xa4\x41\x82\xd8\x8e\x21\x94\xb2\xf2\xe4\x95\x9a\xe9\x8b\x08\xfa\x17\x9a\xe2\x2d\x79\xf1\xde\xf9\xfe\x87\x66\xd2\x73\xbf\xc6\xdc\xd6\x76\xe7\x71\x97\x03\x8b\x24\x0c\x10\x38\x6e\x0b\xbd\xb8\x13\x05\x91\x36\x71\x61\x83\x12\x38\xef\x2e\x9e\x47\xd9\xc0\x10\x5e\xa7\xcf\x8e\xdb\x78\x5d\x51\x80\x90\xbb\x5c\x75\xbc\x2d\xdc\x2e\x4c\x07\x6e\xdb\x43\xc7\x9d\xb8\x2d\x98\xbd\x34\x6a\x3f\x38\x44\xc3\xc3\xec\xd0\xd8\xf2\xc7\x71\x97\x0c\x6d\x98\x5d\x12\xad\xed\xbb\xd5\xb0\x6f\xfb\x0e\xef\x1b\x6f\xe3\xee\xc2\xec\x92\xf1\x4e\x77\x88\x05\x0f\x43\xb8\x0f\xf9\xda\x18\x70\x1f\xf0\x5e\xa2\x93\x6f\x39\xe4\xae\x0d\x8a\x64\xdb\x69\x01\x71\x1d\xf7\x5b\x85\xf9\x6e\xd9\x12\x83\x2f\x4b\x28\xa5\xfd\xf0\x14\x2c\x58\xea\x4c\xa6\x34\x4b\x01\x7f\x75\xd3\x55\xc5\xf3\x76\xe5\x84\x25\x18\x37\x46\x1a\xaa\xba\x8c\xb0\x96\x0a\x98\xa0\xc0\x82\x72\x49\x98\x85\xce\x33\x43\x45\x56\xa5\x70\xf4\x6c\xe1\x91\x1a\xc9\xa2\x80\xaa\xd5\x35\x76\x53\xb1\xe0\x37\x52\x97\x09\xa1\xff\x04\xbe\x5f\xda\x4a\xc1\x1e\x39\x54\xfc\x41\xd1\x82\x5d\x3d\x0e\xb5\x01\x5a\x40\x31\x32\x07\x11\xa0\xbe\xe3\x2b\x64\x05\x47\x40\x54\xd6\x4a\x43\x54\xf0\xb2\x61\xc8\x8c\x66\xb7\x54\xe7\xe2\xed\x22\xd6\x8e\x50\x9b\xd2\xe4\x57\x41\x69\x68\x98\xa9\x0a\xba\x77\xc4\x3a\x7d\x5a\x6a\x9e\xa5\xdc\xec\x88\xb1\xc4\xfa\x36\x35\x54\x32\xd1\xac\x77\xb7\x6e\x62\x11\xc4\xaf\xd8\xb1\x3f\x11\x6e\x24\x6c\xc6\xa3\xd1\x81\x6b\x46\x69\x0c\x04\xa5\xd1\xe9\x57\x49\x53\x08\xfa\x92\x0e\xeb\x7f\x3c\x2d\x77\x20\x3d\x8f\x33\xb1\x20\xed\xb2\x1e\xc4\x43\x33\xe1\xdf\xd3\xc4\x27\x5c\xa3\x3a\xbd\x0b\xc9\x5d\x62\xd0\x72\x0e\xa7\x26\x14\x05\x60\x77\x7f\xa1\x84\x4d\xbe\xa7\x97\xd1\xc0\xa6\xc5\x60\xc8\x06\x27\xcf\xff\x9a\x1c\xc3\xbf\x93\xf1\xf1\xc0\xb7\x22\x5b\x97\x0f\xbd\x82\x2b\x99\x46\xee\x12\x01\x6a\x7f\xf8\x33\x77\x37\x5d\xc9\x04\x55\x14\x6d\xb6\xe9\xe2\x27\x76\xf0\x81\xa8\x58\xfd\xbe\xa0\x88\x0e\x36\x8c\x6c\x7d\x71\xdc\x1e\xef\x12\x0c\x1c\x11\xa5\x8a\x09\x8e\xf2\x68\x82\xd6\x64\x87\xad\x64\x72\xbf\x6e\x21\x40\xd2\x41\xbf\xdc\xc2\x21\xf2\xf8\xfe\x9e\x24\xa0\x9e\xed\x67\x56\x8f\xbe\xfc\x6a\x7a\x1d\x6d\x4d\x9a\x81\x63\xd6\x74\xe4\x52\xd1\xe8\x44\xa2\xc5\x22\x8d\x5e\x55\xe6\xb8\xcd\x00\x95\x01\x76\x30\x60\x4f\x59\xad\x8c\xe4\xdb\x2c\xc3\x6b\xa2\x09\x6d\x4f\xc7\x81\xbd\xd6\xaf\xcd\x59\x90\x02\xe1\x54\x7d\xda\x8a\x06\xff\xbc\xbc\x82\x03\x01\x92\x43\x54\xbd\x43\xe8\x38\x0d\x52\x5f\xf2\x16\xa8\xda\x59\xe4\x12\x16\x76\xf1\x0a\xa2\x98\xbf\x86\xab\x2d\x1a\xf4\x83\xb5\x34\x1c\xc5\x98\x7d\x6e\x9a\x7b\x20\xfc\x60\xdb\x2f\x55\x25\xe8\x17\xa9\xaf\xe7\x20\x1b\xf6\x82\xdb\xef\x64\x52\x4d\x5d\xaf\x80\x53\x82\x68\x00\x94\xfe\x12\xb4\xf9\x6e\x3e\xf0\xeb\x7f\x9d\x61\x3c\x41\x71\xb3\x19\x5f\x3a\xcc\xe4\xd2\xb9\xaa\xdf\x9a\x3a\xf5\xed\xea\xc3\x2d\x6d\xae\xf5\xb0\xb6\x49\x7e\x52\x4b\x5e\x9a\x05\xcf\xa3\xf7\x1f\xa6\x2b\x2b\x22\x71\x93\x5c\x40\x74\x89\xe2\x18\xe4\x15\xbb\x97\x72\x3b\x6c\x79\xbe\x88\x70\x42\xad\x11\x40\x0f\xfc\xde\xe7\x7a\xb9\xc4\xff\xb9\x70\x18\x15\x8d\x18\x0d\xbe\x9e\x80\xb4\xbc\xe0\xbd\x2b\x94\x3e\x6c\x40\x77\x96\xc0\xa0\x45\xdf\xad\x83\xd5\x62\x54\x0f\xdb\x66\x17\xd0\x81\x3d\x89\xa3\x4f\x01\x87\x89\x1d\xab\x07\x8e\x4e\x62\x02\x9e\x49\x88\xde\xee\xf8\x21\xa8\x3e\x81\x10\x6c\xd0\x03\x51\xdb\x21\x2d\x1d\x60\x3e\x8f\xdb\x4b\xd8\xde\xb8\xbd\x16\xdc\xb0\x74\x81\xc7\x93\xb5\x30\xbe\x88\xd1\xe9\xeb\xa1\x3b\x05\xfa\x02\xb2\x0c\x40\x19\x89\xed\x2e\x44\x73\x2a\x21\xe1\xb7\xc6\x6b\x33\x34\x94\x2d\x0e\x1a\x5d\xd7\x13\x9f\x5e\x47\x10\x08\xf4\xb2\x19\x94\xd7\xb0\x75\xbd\x9a\x25\x79\x5d\xa7\xc6\x0f\x9c\x6b\x7d\x3e\x9d\xc5\x1c\x1e\x77\x77\x99\xf7\xa9\xf9\xf3\x77\xd8\xc0\x50\x30\xfe\x07\x2f\x8d\xf6\xd1\x8f\xd9\x37\xac\x15\x75\x3f\x35\x43\x1b\xbf\xc4\x3f\x6b\xc4\x59\xc7\x0f\x16\x24\x7f\x72\x64\x08\xf2\x67\x89\x1b\xb8\xb4\x07\x6c\xe3\x9d\x09\x5b\x9d\x46\xe1\x55\x96\x04\x13\x99\x61\x9d\x98\x5c\x5c\x22\xb5\x74\xc5\x30\x3f\xef\xc2\x49\x57\x2d\x28\x0d\xed\xda\x43\xf9\x6f\xce\x9a\xa9\x7c\xcf\x5d\x04\x83\x05\x43\x80\xf3\xd8\x5c\xf9\x6d\x68\xbc\x25\x69\x04\x14\x3a\x0d\x95\x24\xad\xcd\x74\x69\xe8\xd2\x67\x70\xfa\xee\x1d\xa5\x67\xb7\x75\x8b\x9b\x75\x93\x2f\x76\x86\x72\x94\xad\x1f\x3b\xc5\x74\x93\xc9\xdf\xa1\xa8\xc3\x03\xcd\x6d\x15\xb6\x79\xee\x3f\xa8\xbf\x3f\xac\xbe\x03\xda\x5b\xf7\xdb\x7c\x38\xd5\xb1\xd1\x11\x53\x1a\x27\xfd\xd4\xd6\x90\xa0\xee\x7e\x6e\x25\x2c\x3b\x1a\xc5\x9d\xe3\xce\xff\x04\x00\x00\xff\xff\xf7\xbf\x01\xa5\xdc\x26\x00\x00")

func _hardcodedDoerGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedDoerGo,
		"_hardcoded/doer.go",
	)
}

func _hardcodedDoerGo() (*asset, error) {
	bytes, err := _hardcodedDoerGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_hardcoded/doer.go", size: 9948, mode: os.FileMode(420), modTime: time.Unix(1479410122, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __hardcodedMiddlewareGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x56\x5f\x6f\xdb\x36\x10\x7f\xb6\x3e\xc5\x4d\x43\x31\x69\x50\xe9\xa7\xbd\xb4\xc8\x43\x91\x26\x4b\x80\xa6\x2b\x1a\x0f\x7d\x08\x82\x82\x91\x28\x8b\xb5\x4c\x69\x24\x65\x27\x08\xf2\xdd\x77\x77\xa4\x6c\x39\x71\xb6\x3d\xed\x21\x31\x7d\xbc\xbf\xbf\xfb\xdd\xd1\xbd\x2c\x57\x72\xa9\xc0\x29\xbb\x51\x36\x49\xf4\xba\xef\xac\x87\x2c\x99\xa5\xf5\xda\xa7\xf8\x61\x94\x9f\x37\xde\xf7\x74\xb6\x83\xf1\x7a\xad\xe6\x95\xba\x1b\x96\x69\x82\x92\x65\xd7\xaf\x96\x42\x9b\xf9\x69\xab\xd0\xc1\x7c\x25\x1f\x36\x4a\xbd\x5d\x76\x62\xf3\xdb\xbc\xed\x96\x4b\x65\xd1\x70\xb5\xb9\xd2\x55\xd5\xaa\xad\xb4\x0a\xfe\xd9\x66\xbd\x53\x24\xff\x5d\xaf\x8c\xb7\xb2\xd4\x66\x89\x76\xda\x37\xc3\x9d\x28\xbb\xf5\x7c\x22\x9f\x9e\xd1\x47\x9a\xe4\x49\x52\x0f\xa6\x84\x2d\xaa\xef\xc3\x66\x54\xa1\x2e\xd5\x67\xb9\xc6\x6a\xbd\x45\xed\x02\x6c\x37\x78\x65\x81\xca\x13\x17\xd2\xa0\xaa\x2d\x60\x9f\xc1\xb9\x81\x9b\x5b\xf2\x95\x4d\x35\x72\x78\xfd\x1b\x3c\x26\xb3\x26\x1e\xdf\x9d\x44\xff\xc9\xac\xee\x2c\x7c\x2f\xa0\x36\x2c\x94\x06\x01\x3f\x88\x82\x56\x3b\xb3\x13\x54\xcb\xe2\x97\x3c\x99\x3d\x25\x93\x9b\x58\xe6\xa4\xaa\xbd\xe2\x5e\xab\x97\x46\x97\x47\x75\xe6\x73\xf8\x84\x3d\x21\x34\xf7\xf1\x01\x01\x55\x0e\x5a\xe9\x7c\x01\x5a\x28\x81\xc8\xb5\x2d\xdc\x29\xc0\x76\x43\xad\xad\xf3\x82\x4d\x17\x8d\x76\xb0\x96\x2b\x54\xd6\x1e\x5c\x07\xbe\x91\x1e\x3a\xdf\x60\xd4\x89\xbb\x46\x3a\x90\x65\xa9\x9c\x03\x4f\x3a\x0a\x02\x0f\xd8\x07\x9b\x1c\xd0\x41\x9b\x1f\xaa\xf4\xe8\xd2\x44\x6d\xab\xfe\x1a\x94\xf3\x98\x96\xf1\xea\x9e\x62\xef\x4b\x9b\x5a\x8a\xcf\x6a\x3b\xd6\x56\xc0\xa4\xbd\x58\xa8\x55\x7e\xb0\x06\xe2\x6d\xf2\x94\x24\x18\xfb\x19\x2e\x94\x16\x66\x6a\x1e\xc2\x85\x13\x70\x8e\x6d\x32\xdd\xb6\x80\xad\xfa\x85\x71\x41\xb6\x9b\x41\x61\x56\xb6\xdb\x12\x68\x94\x1e\x2b\xc3\xd0\x27\x5c\x0d\x71\x09\x47\x28\xa0\xc1\xf0\x3c\x40\x69\xa5\x6b\x82\xae\xed\x08\x07\x11\x08\xf9\xa2\x2f\xff\x42\xa4\xb1\x88\x89\xf8\x9c\xc8\xc8\x8c\xdc\x06\xf9\x57\xe5\xfa\xce\x38\xf5\xcd\x6a\x4f\x30\x58\xf8\x35\xca\x19\xc4\x9c\xa9\x55\xa9\x1a\x3d\xb2\x59\x10\xcc\x38\x95\x33\x1b\x48\xaa\xca\x0e\xc7\x30\xcb\xe9\x42\xd7\xb0\xbb\x3b\x39\x01\xa3\xdb\x60\x10\x93\xa1\xe3\x13\xfd\xdb\x48\x0b\xca\xf2\x5f\x87\x6b\x03\x25\x0e\xe7\xad\x6c\x60\xea\x79\x3c\x8b\xcc\x3f\xf4\x2a\x86\x2e\xa5\x1b\x07\xf0\x1d\x7b\x26\x37\x48\xfa\xb5\x17\x67\xe4\xac\xce\x46\xb3\x7c\xa7\xce\x51\xa6\xda\xa3\x0a\x89\xb0\x3a\x39\xb4\xfe\x15\x67\xe9\x60\x56\xd8\x53\x13\xfb\xf6\xe6\xe7\x0d\x74\x35\x50\x3e\xf0\x66\x91\x16\x3b\x4f\xfb\x53\x1e\x8a\xa4\xff\x81\xb8\xe2\xdc\x76\xeb\xd3\xc0\xc6\xcc\x8a\xf1\x94\xe7\x21\xc6\xc7\x2c\x65\xd3\xb4\xe0\x0c\xa2\xcd\xd5\x63\x8a\xb9\xa4\xef\x28\xf7\x02\x52\x66\x09\x8d\xaf\x42\x51\xa8\x3e\xe3\x2d\x2a\xae\xe9\x06\x9d\x3d\xe5\xbb\xc6\x1c\x20\xf0\xc4\x8d\x69\xc4\x35\x6d\xe8\x8b\xc5\xe2\x4b\x86\x04\xe5\xcd\x90\x47\x5e\xbf\xd8\x0a\xc8\x40\x25\x3d\x8e\xa9\x04\xa3\xb6\xe0\xd0\x1d\x18\x1c\x8c\x0a\x64\x4d\xfb\x8e\xa8\xf9\xe7\xd7\x4f\x58\xb1\x6f\x18\x8d\xfd\xd4\x09\x72\x78\xe9\xa1\x6f\x31\x55\x17\x38\xcd\xf6\xda\x1c\x1b\x4e\xdc\x69\x38\x33\x03\xb6\xe8\xee\x21\x6e\x82\x38\x73\x0e\x36\x5a\xc2\x64\x37\x8b\x6b\x74\x33\x45\x32\xe7\x50\x35\x26\xc9\x01\xd4\xbd\x76\xbc\x06\x76\x31\x1a\x25\x2b\x74\x54\x84\x31\x23\x9d\x50\x57\x45\xc1\xc2\xb4\xed\x4b\x1e\x77\x96\x84\xb2\xd1\x6d\x15\xca\xc2\x5d\x43\x76\x71\xfe\x8e\x6c\xcf\xff\x6b\x02\xb1\xd2\x0f\xde\xab\x75\xef\x69\x27\xfe\xe8\xb0\xca\x58\x36\x96\xb2\x54\xde\xf3\x76\x21\x7a\x20\x00\x75\x07\x35\xe2\xc4\x65\x47\x0c\x70\x09\xe2\x5b\xc8\x6f\x17\x4d\xac\xc0\xee\x89\x2f\xd8\xbd\x24\x4c\xa2\xeb\x5f\x20\x9d\xf0\x2c\xbb\xb2\xe0\x31\x45\xa3\xa9\xc2\xef\x6d\x77\x27\xdb\x05\xc5\xc3\xb9\x27\xe7\xb3\xb3\x7b\xba\xf4\xd9\x54\x8d\xd8\x76\x11\x9b\xc0\xdc\x7e\xe5\xf2\x54\x5a\xab\xd1\x93\x15\x41\x90\xe7\xef\x39\xea\x4f\x93\x05\x82\x29\x1e\xe6\x80\xbc\xb7\x9e\x32\xcd\x42\x61\xcc\x75\x50\x2d\x72\xe9\xbf\x19\x14\x07\xb7\xa7\xd4\xf5\x3f\xea\xcc\x95\x39\x7b\xda\xad\x3d\xd7\x8b\x73\x6d\xb4\x6b\x90\x70\xa1\x13\xe1\xc5\x09\xf0\x5f\x7e\x0c\x0f\x0f\xbf\x05\xf8\x29\x75\x35\xa5\x20\x8f\x28\xbd\x97\x68\xe9\x09\x45\x7a\xfe\xb2\xb5\xec\x6f\xc2\x0c\xdf\x86\x8f\x3c\xa0\x1d\x91\xc6\x88\x3b\x68\x2f\x39\x56\x86\xa2\x1d\xed\x0f\xf3\x5e\xa0\xec\x4a\xf6\x8c\xef\x11\xf9\x08\xad\x1f\x31\x9d\x2e\x65\x6a\x30\xad\x8a\x0a\x5d\xae\x28\xb2\xbf\x49\x3b\xff\x96\x79\x64\xdf\x86\xab\xf4\xf6\x3d\x5d\x3e\x4e\x77\xd3\xab\xfb\xec\x43\x55\x8d\xdf\x5e\x3a\x2a\x62\xb0\x7c\x7c\x04\x78\x47\x62\x65\xf8\x93\xe2\x6c\x83\x99\x67\x69\x84\xed\x3b\x3e\x29\x4a\x6f\x54\x95\xe6\x47\x5f\x9f\xa3\x36\x35\x37\x29\xda\x84\xa5\x87\xcb\xeb\xd4\xdf\x3f\x27\x6f\xcc\xf0\x1b\xfe\xbc\x63\x36\xd8\x29\xb4\xae\xe7\x2e\x3f\x5f\x97\x82\xb4\x47\xb5\xe0\x36\x1f\x57\xe8\xdf\x01\x00\x00\xff\xff\x09\x40\xa0\x27\x03\x0b\x00\x00")

func _hardcodedMiddlewareGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedMiddlewareGo,
		"_hardcoded/middleware.go",
	)
}

func _hardcodedMiddlewareGo() (*asset, error) {
	bytes, err := _hardcodedMiddlewareGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_hardcoded/middleware.go", size: 2819, mode: os.FileMode(420), modTime: time.Unix(1480384269, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"_hardcoded/doer.go":       _hardcodedDoerGo,
	"_hardcoded/middleware.go": _hardcodedMiddlewareGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"_hardcoded": &bintree{nil, map[string]*bintree{
		"doer.go":       &bintree{_hardcodedDoerGo, map[string]*bintree{}},
		"middleware.go": &bintree{_hardcodedMiddlewareGo, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
