// Code generated by go-bindata.
// sources:
// _hardcoded/doer.go
// _hardcoded/middleware.go
// DO NOT EDIT!

package hardcoded

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __hardcodedDoerGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x3a\x7b\x6f\xdb\x46\xf2\x7f\x4b\x9f\x62\x2b\xa0\xbf\x90\x8e\x42\xd9\x69\xdd\xdf\x41\x3d\xf7\xd0\x2a\xce\x25\xb8\x36\x31\x22\xf7\x2e\x40\x10\x34\x2b\x72\x25\x6d\x4d\xed\xb2\xdc\xa5\x6d\xc1\xf5\x77\xbf\x99\xd9\x25\xb5\x94\x28\xd9\x7d\xe0\x70\xa7\x00\x16\x45\xce\xcc\xce\xfb\xc5\x14\x3c\xbd\xe2\x0b\xc1\xd2\x5c\x0a\x65\xfb\x7d\xb9\x2a\x74\x69\x59\xd4\xef\x0d\x52\xad\xac\xb8\xb5\x03\xb8\x14\x2a\xd5\x99\x54\x8b\xd1\xcf\x46\x2b\xba\x51\x96\xba\x34\x78\x35\x5f\x11\x44\xae\x17\xf8\xb5\xe2\x76\x39\x2a\xb9\xca\xf0\x87\x12\xd6\x7f\x8d\x96\xd6\x16\x78\x6d\xd6\x2a\xc5\x6f\x2b\x57\x62\xd0\x87\x8b\x85\xb4\xcb\x6a\x96\xa4\x7a\x35\xe2\x73\x71\x3b\x5a\xae\x8d\x2d\xe5\xed\xb3\x85\xae\x2f\x07\x6d\xa8\x4c\x2b\x7d\xcd\xd5\x52\x66\x62\x24\xae\x81\x67\xa3\xab\x32\x05\x62\x3d\x5d\xc0\xaf\x92\xa7\xc0\x27\x0b\x31\x82\xfb\xe1\x35\x1c\x01\x48\x96\x2f\xcc\x23\xa1\x47\x5e\x19\x0b\x9d\x73\xb5\x48\x74\xb9\x18\xdd\x8e\x50\x38\xaf\xa8\x51\x6a\x6f\xbd\x9c\xa0\x8d\x85\x28\x81\xae\x2e\xae\x16\x89\x54\xa3\x49\x0e\xbc\x96\xa3\x2b\xbe\xbe\x16\x02\x68\x25\xd7\xa7\x23\x07\x34\xe8\xc7\xfd\xfe\x68\xc4\x32\x0d\x08\xd2\x30\xae\x98\x04\x72\xe5\x9c\xa7\x82\xcd\x35\x10\xc9\x34\x9c\x3f\x60\x48\x9a\x95\xe2\x97\x4a\x18\x6b\x58\xa1\x8d\x91\xb3\x7c\xcd\x6e\x80\x75\x76\x53\xf2\xa2\x00\xa8\xbe\x5d\x17\xc2\x93\x6a\x88\xdc\xf5\x7b\x2f\x74\x94\xb2\x23\xa4\x90\x4c\xc8\xd0\x43\x56\xfa\xdf\xef\x1c\xc5\x98\x45\xf5\x6f\x53\x68\x65\xc4\x90\x91\x8d\xe3\xfe\x7d\xdf\x51\xd5\xc5\x1b\xbe\x12\x13\x7b\xcb\xc0\x2c\x55\x6a\xef\xee\x89\xef\x19\x37\xc2\xd3\x78\x05\x76\xcf\xe1\xe8\x02\x0e\xd6\xe5\xca\x30\xbb\x14\xf4\xbc\xc5\xbb\xa3\x86\xb7\x5f\x20\x9f\x1b\x62\xf3\x4a\xa5\x2c\xca\x9a\x47\x31\xfb\x03\x6c\xa3\xd4\xa5\xb0\x55\xa9\x98\x37\x4b\x02\xd4\xca\x64\xe2\x6c\x15\xc5\x43\x96\x02\x35\x12\x0f\xa4\xf0\x56\x26\x8e\x78\x96\x99\xfa\x06\xb3\xba\xad\x78\xc7\x7d\x08\xee\x04\xc0\xf3\x32\xd2\x7c\x3f\x10\x25\x80\xfb\xa3\xd2\xf4\x7b\x20\x07\x1b\x9f\xb1\x40\x06\xf4\x79\x34\x0a\xde\x86\xa7\xc9\x3f\x79\x5e\x89\xa8\x31\xd4\xdd\x7d\x9c\x44\x18\x43\x6a\x01\xa0\xd7\x1c\x78\x2d\x58\xe0\xd3\xc9\xb4\xe0\xaa\xdf\x03\xf1\x2f\xdf\xbe\x78\x3b\x46\xc1\x19\xc5\x43\x29\x72\x6e\xbd\xf4\x52\x15\x95\x65\x19\xb7\xfc\x6f\xfd\x9e\x9c\xb3\x82\x97\x40\x00\x31\xf1\xd4\x6d\x6a\x2f\x4b\xbd\xaa\xd9\x03\x8e\xe2\xaf\x43\xf8\xcf\xce\x98\x92\x39\x6a\xaa\x07\x8c\x6c\x21\x5b\x5e\x12\x94\x67\x7f\xd8\x7a\x3a\x59\xca\x3c\x7b\x3b\x8f\x36\xc4\x36\x4a\x88\x41\xb6\x7b\x26\x72\x23\x1e\x47\x19\xc1\x5d\xdc\x13\xc7\xff\x90\x2a\x4b\xa6\xc2\x46\xa6\x18\xb2\xd6\xdd\x77\x17\x13\x67\xa7\x73\x55\xad\x62\x12\x1e\xac\x81\x52\x9b\x22\xb9\x04\xea\xa2\x8c\xe2\xe4\xb5\xfa\x59\xa4\x88\x1d\xb8\x16\xb0\x11\x72\xf0\xea\xf2\xf2\xe2\x95\xe0\x99\x28\xcd\x81\x47\x13\x5e\x96\x12\x48\x96\x89\xbb\x11\x83\xf2\xf0\xbc\x40\x6b\xde\xa1\xe1\xe7\x90\x41\xde\x4d\xce\xd1\x39\xe6\x11\x64\xea\x2a\xcf\xd4\x13\x0b\xc6\x42\x66\x1a\xe7\x5d\x3a\xca\x2c\xfa\xfc\x3a\x1e\x90\x2f\x39\xe1\x3d\x9d\x2c\xc9\x30\x28\xc2\x38\x80\x27\xe5\xba\x8e\x63\xfc\x21\x85\x61\xa7\xc7\xef\xbb\x82\x80\x60\x77\x42\x60\xf3\xa1\x60\xe8\x11\xd4\x85\xce\x65\xba\x66\xef\x36\xd7\xfe\xbc\xe0\x0e\xcb\xc4\x5c\x2a\x38\x8e\x3b\xca\x90\xe2\xf0\x76\xe2\x0e\x0b\x01\x5b\xa9\x0d\x88\x7c\x07\x35\x4c\xcf\xe7\xe8\xb7\x28\x97\xcb\x3b\x60\xb3\x19\x06\xb3\x02\x9f\x96\x2b\xd4\x86\x9e\x7b\xc2\xdc\x5a\xb1\x2a\xac\x49\xfa\xbd\x1a\x35\x8a\xd9\x87\x8f\x58\x94\x92\x17\x55\x09\xbe\xaf\x5d\x5c\xd0\xa9\x80\x95\x0a\x79\x2d\x1c\xdd\x50\x11\x43\xc6\x0d\xbb\x11\x79\x8e\xdf\xf8\xb0\x14\xa6\xca\x2d\x9c\x44\xd8\x75\xe1\xf3\xe1\xfe\xc4\xb0\x4f\x2f\xf4\x27\xb6\x12\x76\xa9\x33\x38\x9c\xa8\x47\xad\x0c\x30\x64\x7b\x12\xc0\x4c\xeb\xdc\xeb\x6c\x0a\xc2\xe4\xe2\x90\xe6\xec\x92\xdb\xc6\x7a\xbc\xe6\x96\x69\x95\x0a\xa7\xcd\x5d\x12\xad\x9c\xde\xa1\x50\x20\xb8\xd6\x15\x33\x4b\x74\xb5\xe6\x18\xd1\xd0\x3e\x31\x02\xca\x60\xc6\xf8\xdc\x62\xf1\xb1\x6c\xce\x65\x0e\x1a\x76\x99\x70\xe7\xbc\x98\xed\xd7\x7c\x90\xba\xb7\x9e\xdc\x9d\xb0\x23\x46\x77\xa6\x74\xda\x7d\xe8\x45\x50\x09\xc1\x10\x8e\x33\xa5\xd5\xb3\x8b\xb7\xd3\xcb\xa1\xbb\xfa\xf6\x72\xf2\x6a\x53\x3a\x49\x98\xd3\xf7\xef\x93\x7e\x93\xf9\x5e\x5b\xf4\x56\x03\xd0\x96\xa5\x55\x89\x49\x26\x5f\xd7\xde\xa2\xd6\xce\x08\xb5\x3a\x04\x94\xa8\xf5\x1e\xe3\x1e\x10\xd8\x59\x1b\xb8\x60\x5b\x16\x07\xa7\x29\xba\xcc\x1e\x9a\x1e\x75\xe2\xf3\x8f\xcf\x07\xbf\xfe\x8a\x12\x25\x3f\x90\x33\xb1\xb3\x33\x36\x40\x81\x07\x5d\xf7\x51\x7c\x7c\x40\x19\x04\x12\x15\x64\x44\x5b\x99\x89\xce\x04\xfb\x2b\x04\xf7\x71\x98\x5b\xe6\x1c\x12\x69\x98\x24\xc0\x2f\x84\x57\xf3\xf9\x2d\x30\x07\xb2\x4a\x9e\x77\x7a\x9f\x62\x62\x03\xd1\x0a\x62\xe7\x75\x7b\xf0\x0f\xbb\xde\x1c\x22\x0f\x5a\x02\x7f\x97\xba\x9d\xe0\x94\x1c\xb3\x41\x5a\x0a\x6e\x30\xc2\x6f\x38\x38\x1e\xfa\x87\xa1\xce\x44\xd8\x1b\x21\x54\x63\xf8\x31\x3b\x39\x3e\x1e\xb2\xe7\xf8\xe7\x4b\xfc\xf3\x17\xfc\x83\x09\xe2\xe4\x2b\x50\xc2\x0a\xdc\x47\x3a\x2f\x36\xec\xe9\xe8\x19\xab\x0a\xac\x7f\xa7\x9f\xb3\x9f\x25\x24\x8c\xb2\x36\x6d\xb7\x14\x8f\x70\x68\xac\x1c\x2b\x7e\x25\xa2\xad\xc7\x43\x76\x0a\x69\x59\x41\xe9\x40\x08\xe0\xb1\x76\xf2\x1f\x36\x1c\x01\x01\xe0\x13\xab\x3f\xf0\x9b\xbc\x11\x37\x51\x7d\x31\xa5\xf6\x37\x22\x84\x37\xfa\x06\x2a\xd2\x8f\x4a\xde\xbe\xe1\x4a\xbb\xd2\x48\xcd\xc1\x71\x72\x7c\xca\x40\x25\x28\xd6\x29\xf6\x67\x29\x08\xe0\xe5\xea\xf7\xb0\xcb\x94\x9e\xf8\x82\xf2\x7a\xed\x11\x1f\xe4\x47\xa8\xa6\xc4\xda\x53\xd6\x62\x3a\x8a\x22\xe0\x28\x79\x99\x6b\x6e\xbf\xfa\x32\x8a\x8f\x9e\xc7\xcf\x4e\xe2\x23\x71\x34\xf7\x77\x10\x09\xcf\x77\x82\x1d\x9d\xb1\xe7\xa1\x57\xc1\xd7\x7f\x6d\xec\xee\x33\xf0\xff\x7e\x00\xbf\xd1\xdd\x55\xc3\x05\x29\x16\x48\x85\x63\x8a\x53\x1e\x06\x54\x53\x3b\x7c\x15\x6e\x13\x38\x1c\xb8\x98\x0e\xa0\xca\x02\x18\x00\x8b\x5a\xb9\x2d\x0a\xbf\xb3\x0a\xb4\xd3\x3e\xcf\x6f\xf8\x3a\xc8\x17\x28\xff\x9e\xd3\x7e\x6b\xc1\x0d\x78\x70\x6a\xad\x67\x21\x52\x90\xef\xf7\xda\x6a\xf8\x17\x24\xa8\x50\x47\x8d\x36\x40\xb5\x37\xcc\x4f\x8a\xce\x8d\x35\xa8\xba\x84\x31\xd6\xb5\x0e\x6e\x00\x67\x7a\x86\x1d\xdc\x13\xd3\x34\x63\x4d\x1b\x44\x12\x6d\x91\xc7\x1e\xbb\x26\x5a\xf7\x9f\x43\xb6\xa7\xe5\x8a\xb7\x21\xc3\x19\xc9\x3f\x41\xfa\x6e\x8a\x00\xca\xc3\x96\x9c\x77\xf7\x2d\xca\x71\x38\xe7\x1c\x35\xbd\xe0\x9f\x31\xb4\xd5\x47\xc0\x0c\x70\xb5\x35\xf1\xf8\x11\xa7\xcd\x17\x4c\x39\xa1\x98\x14\x68\x9f\x01\xaa\x8f\x8a\x46\x17\x67\xd0\xf1\x06\xbf\x29\x48\x9a\xca\x82\xe7\x6c\x9e\x25\x1b\xc7\x74\x93\x53\x47\x8c\xbb\x07\x4d\x9c\xbb\x3c\x5a\x77\x5d\x98\x74\xbf\xa6\xd8\xfb\xba\xbe\xf7\xf4\xa9\xe7\x08\x27\x0d\x44\x3b\x6b\x77\xe0\x3d\xe4\xbb\xc6\x87\xb8\xcf\x85\x8a\x6a\xf6\x62\x4c\x0b\x9f\x85\x0c\xfa\x6c\xe4\xb2\x8f\xeb\xed\x89\x7c\x6f\x06\xd5\xf0\x0a\x2e\x40\x38\x6c\x42\x27\xb9\x86\xc9\xc8\x37\xa7\xc4\x37\xb8\x76\xb6\x76\x8d\x31\x86\xcf\x82\x4b\x55\x27\x96\xef\xe0\x49\x42\x18\x28\x77\xcf\xb5\x5a\xb9\x10\x45\xc3\xc8\x07\xcf\xe0\xc7\xb8\x9d\xce\x3d\x0f\x3e\x32\x53\x59\xa6\x95\xb4\xdf\x21\x2b\xa2\xa4\x19\x41\xae\x8a\x5c\xac\x70\x5f\xe3\xdc\xdd\x41\xb0\x99\x03\x81\x31\x11\x6b\x91\xa2\xbc\x0e\xd3\x18\x24\xa7\x59\x45\xf3\x27\xaa\x10\xbf\x61\x6a\x82\xf0\x17\x2d\x64\xa9\x20\xae\x56\x98\x06\x6f\x96\xa2\x14\xd8\x76\x52\x21\xd1\x0a\x2a\x40\xae\x17\x01\x2b\x10\xa5\x80\xed\xca\x3d\xc1\x60\xb9\x98\xe5\x3a\xbd\xa2\x22\xd1\x14\x98\x39\x0c\xb0\x6c\xa1\x69\xf8\x5d\x96\xba\x5a\x2c\x7d\xea\xeb\x10\xe9\xd0\xd8\xe3\xf8\x77\x1f\xea\xdd\x7b\x9e\x00\xcd\xeb\x6e\x28\x6f\xf6\x44\xf4\x39\x72\x3f\x92\xef\xe9\x0b\x15\x89\xee\xe5\xb1\xa6\xd3\xf3\xb7\xd0\xbd\x33\xdc\x9f\x25\x78\x45\x6a\x7e\xe5\x36\x64\xf0\xf0\x1c\x37\x61\xb8\x3e\x12\x2b\x2c\xea\x54\xe5\x36\xab\x34\x76\x2d\x39\x33\xa2\x84\x84\xf3\xcc\x20\xa0\x5b\x9c\x25\x54\x3b\x85\x49\x4b\x39\x73\x2d\x13\x2a\x97\x14\x85\xb5\x80\xd7\x87\x7b\x0d\x6c\x9f\xb6\x11\xff\x12\x1f\x1f\xf8\x38\x71\xd9\x27\xdc\x1e\x8e\x07\x48\x6c\xf0\xa9\xdf\x23\x4d\x3c\x1a\x4b\x01\x34\x62\xf9\x1c\x32\xd1\x15\xb0\xd0\xf1\x91\xee\xb6\xc7\x2a\x03\x68\xc4\xa6\x89\x79\x2f\xee\x36\xb6\x68\xa0\x1b\xdc\x0b\xd7\x3b\xe1\xca\xf4\x11\xb8\x1b\x68\x24\xf0\xda\x4c\x5a\x4e\xf4\xb6\x80\xee\x34\xf8\x50\xc9\x69\x08\xc8\x0e\x68\x52\x80\x86\xae\x50\x2d\x88\xad\x97\x30\x64\x55\xa5\x38\xa4\x80\x5d\xe8\x5d\x22\x79\x8e\xe1\x1d\x12\x3b\x44\xa4\x05\xbd\x8f\xd8\xb4\x4a\x53\x61\xcc\x23\x89\x79\xe8\x6d\x62\xd3\xa5\x2e\xad\xd7\x82\xc8\x1e\x12\xaf\x0d\xbd\x43\x2b\x60\xe8\x61\x55\xed\x61\xe8\x72\x09\xb6\xc8\x2e\xc0\x4e\xef\x04\xd6\x69\x64\x6a\x3f\x91\x5d\xe8\x1d\x7a\x90\x60\x75\x65\x1f\xc9\x94\x87\x46\x22\x13\xd7\xe8\x42\x09\xf4\x2d\xef\xf9\xad\x48\x2b\xec\x8e\x9c\x73\xb7\x89\xa4\x87\xa1\x91\xe0\xf7\x10\xf4\x2a\x5d\x5f\x6a\xcb\xf3\x1f\x04\x57\x87\x9d\x3b\x0f\xa0\x7f\x5a\x01\x38\x90\xa8\xdb\x01\x48\x63\x94\x1f\xa2\x7c\x2b\xa5\x41\x81\xd8\xce\x21\x54\xb2\xf2\xe4\xb5\x9a\xeb\x17\x11\xcc\x2f\xb4\xf8\x5b\xf1\xe2\x83\x8b\xfd\x8f\xcd\xa6\xe7\xee\x1e\x6b\x5b\x3b\x9c\xc7\x5d\x01\x2c\x92\x30\x41\xe0\xba\x2d\x8c\xe2\x4e\x14\x44\xda\xe4\x85\x0d\x4a\x10\xbc\xbb\x78\x1e\x65\x03\x43\x78\x9d\x31\x3b\x6e\xe3\x75\x65\x01\x42\xee\x0a\xd5\xf1\xb6\x70\xbb\x30\x1d\xb8\xed\x08\x1d\x77\xe2\xb6\x60\xf6\xd2\xa8\xe3\xe0\x10\x0d\x0f\xb3\x43\x63\x2b\x1e\xc7\x5d\x32\xb4\x61\x76\x49\xb4\x8e\xef\x56\xc3\xbe\xe3\x3b\xa2\x6f\xbc\x8d\xbb\x0b\xb3\x4b\xc6\x07\xdd\x21\x16\x3c\x0c\xe1\x3e\x14\x6b\x63\xc0\x7d\x20\x7a\x89\x4e\xbe\x15\x90\xbb\x3e\x28\x92\xed\xa0\x05\xc4\xfb\xb8\xdf\x6a\xcc\x77\xdb\x96\x18\x62\x59\x42\x2b\xed\x97\xa7\xe0\xc1\x52\x67\x32\xa5\x5d\x0a\xc4\xab\xdb\xae\x2a\x9e\xb7\x3b\x27\x6c\xc1\xb8\x31\xd2\x50\xd7\x65\x84\xb5\xd4\xc0\x04\x0d\x16\xb4\x4b\xc2\x2c\x75\x9e\x19\x6a\xb2\x2a\x85\xab\x67\x0b\x97\x34\x48\x16\x05\x74\xad\x6e\xb0\x9b\x89\x25\xbf\x96\xba\x4c\x08\xfd\x47\x88\xfd\xd2\x56\x0a\xce\xc8\xa1\xe3\x0f\x9a\x16\x9c\xea\x71\xa9\x0d\xd0\x02\x9a\x91\x05\x88\x00\xfd\x1d\x5f\x23\x2b\xb8\x02\xa2\xb6\x56\x1a\xa2\x82\xef\x27\x86\xcc\x68\x76\x43\x7d\x2e\xbe\xc2\xc4\xde\x11\x7a\x53\xda\xfc\x2a\x68\x0d\x0d\x33\x55\x41\x2f\x37\xb1\x4f\x9f\x95\x9a\x67\x29\x37\x3b\x62\xac\xb0\xbf\x4d\x0d\xb5\x4c\xb4\xeb\xdd\xed\x9b\x58\x04\xf9\x2b\x76\xec\x4f\x85\x5b\x09\x9b\xf1\x68\x74\xe0\x5d\xa6\x34\x06\x92\xd2\xe8\xf4\xab\xa4\x69\x04\x7d\x4b\x87\xfd\x3f\x5a\xcb\x19\xa4\xe7\x71\xa6\x16\xa4\x5d\xd5\x8b\x78\x18\x26\xfc\x7d\xda\xf8\x84\xcf\xa8\x4f\xef\x42\x72\xef\x3d\xe8\x71\x0e\x56\x13\x8a\x12\xb0\x7b\x7f\xa1\x84\x4d\xbe\xa7\x9b\xd1\xc0\xa6\xc5\x60\xc8\x06\x27\xcf\xff\x3f\x39\x86\x7f\x27\xe3\xe3\x81\x1f\x45\xb6\x5e\x3e\xf4\x0a\xae\x64\x1a\xb9\x97\x08\xd0\xfb\xc3\x9f\x85\x7b\x39\x96\x4c\x51\x45\xd1\xe6\x98\x2e\x7e\x62\x07\x1f\x88\x8a\xdd\xef\x4b\xca\xe8\xe0\xc3\xc8\xd6\x17\xc7\xed\xf5\x2e\xc1\x80\x89\xa8\x54\x4c\x71\x95\x47\x1b\xb4\xa6\x3a\x6c\x15\x93\xbb\xfb\x16\x02\x14\x1d\x8c\xcb\x2d\x1c\x22\x8f\xf7\xef\x48\x02\x9a\xd9\x7e\x62\xf5\xea\xcb\x3f\x4d\xaf\xa2\xad\x4d\x33\x70\xcc\x9a\x89\x5c\x2a\x5a\x9d\x48\xf4\x58\xa4\xd1\xab\xca\x1c\x8f\x19\xa0\x32\xc0\x0f\x06\xec\x29\xab\x95\x91\x7c\x9b\x65\xf8\x9a\x68\x4a\xc7\x93\x39\x70\xd6\xfa\xa5\xb1\x05\x29\x10\xac\xea\xcb\x56\x34\xf8\xfb\xf9\x25\x18\x04\x48\x0e\x51\xf5\x0e\xa1\xc3\x1a\xa4\xbe\xe4\x02\xa8\xda\x79\xe4\x0a\x16\x4e\xf1\x0a\xb2\x98\x7f\x73\x57\x7b\x34\xe8\x07\x7b\x69\x30\xc5\x98\x7d\x6e\x9a\xf7\x40\xf8\xc1\xb1\x5f\xaa\x4a\xd0\x2f\x52\x5f\xcf\x41\x36\xec\x05\xaf\xd8\x93\x69\x35\x73\xb3\x02\x6e\x09\xa2\x01\x50\xfa\xbf\x60\xcc\x77\xfb\x81\x5f\xfe\xe3\x0c\xa3\x05\xc5\xf5\x66\x7d\xe9\x30\x93\x73\x17\xaa\xfe\x68\x9a\xd4\xb7\xbb\x0f\xf7\x68\xf3\x5a\x0f\x7b\x9b\xe4\x47\xb5\xe2\xa5\x59\xf2\x3c\xfa\xf0\x71\xb6\xb6\x22\x12\xd7\xc9\x0b\xc8\x2e\x51\x1c\x83\xbc\x62\xf7\xa5\xdc\x0e\x5b\x9e\x2f\x22\x9c\xd0\x68\x04\xd0\x03\x7f\xf6\x44\xaf\x56\xf8\xdf\x23\x0e\xa3\xa2\x13\xa3\xc3\xd7\x1b\x90\x56\x14\x7c\x70\x8d\xd2\xc7\x0d\xe8\xce\x23\x70\x68\xd1\x77\xcf\xc1\x6b\x31\xab\x87\x63\xb3\x4b\xe8\xc0\x9e\xc4\xd5\xa7\x00\x63\xe2\xc4\xea\x81\xa3\x93\x98\x80\xe7\x12\xb2\xb7\x33\x3f\x24\xd5\x27\x90\x82\x0d\x46\x20\x6a\x3b\xa4\xa5\x03\xcc\xe7\x71\xfb\x11\x8e\x37\xee\xac\x25\x37\x2c\x5d\xa2\x79\xb2\x16\xc6\x17\x31\x06\x7d\xbd\x74\xa7\x44\x5f\x40\x95\x01\x28\x23\x71\xdc\x85\x6c\x4e\x2d\x24\xfc\xd6\xf8\xda\x0c\x1d\x65\x8b\x83\x46\xd7\xf5\xc6\xa7\xd7\x91\x04\x02\xbd\x6c\x16\xe5\x35\x6c\xdd\xaf\x66\x49\x5e\xf7\xa9\xf1\x03\x76\xad\xed\xd3\xd9\xcc\xa1\xb9\xbb\xdb\xbc\x3f\x9b\x3f\xff\xda\x1b\x18\x0a\xd6\xff\x10\xa5\xd1\x3e\xfa\x31\xfb\x86\xb5\xb2\xee\x9f\xcd\xd0\x26\x2e\xf1\xcf\x3d\xe2\xdc\xc7\x0f\x36\x24\x7f\x70\x65\x08\xf2\x67\x89\x5b\xb8\xb4\x17\x6c\xe3\x9d\x0d\x5b\x5d\x46\xe1\x56\x96\x04\x1b\x99\x61\x5d\x98\x5c\x5e\x22\xb5\x74\xe5\x30\xbf\xef\xc2\x4d\x57\x2d\x28\x2d\xed\xda\x4b\xf9\x6f\xce\x9a\xad\x7c\xcf\xbd\x08\x06\x0f\x86\x04\xe7\xb1\xb9\xf2\xc7\xd0\x7a\x4b\xd2\x0a\x28\x0c\x1a\x6a\x49\x5a\x87\xe9\xd2\xd0\x4b\x9f\xc1\xe9\xfb\xf7\x54\x9e\xdd\xd1\x2d\x6e\xee\x9b\x7a\xb1\xb3\x94\xa3\x6a\xfd\xd8\x2d\xa6\xdb\x4c\xfe\x06\x45\x1d\x5e\x68\x6e\xab\xb0\xcd\x73\xff\x41\xfd\xfd\x6e\xf5\x1d\xd0\xde\x7d\xbf\xcd\x87\x53\x1d\x1b\x1d\x31\xa5\x71\xd3\x4f\x63\x0d\x09\xea\xde\xcf\xad\x85\x65\x47\xa3\xb8\x73\xdd\xf9\xef\x00\x00\x00\xff\xff\xd8\x1c\xcc\xa1\x41\x27\x00\x00")

func _hardcodedDoerGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedDoerGo,
		"_hardcoded/doer.go",
	)
}

func _hardcodedDoerGo() (*asset, error) {
	bytes, err := _hardcodedDoerGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_hardcoded/doer.go", size: 10049, mode: os.FileMode(420), modTime: time.Unix(1481074477, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __hardcodedMiddlewareGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x57\x5f\x6f\xdb\x38\x12\x7f\xb6\x3e\x05\x4f\x87\xa6\x52\xe0\xca\xb9\x03\x7a\x0f\x29\x7c\x40\x91\x26\x9b\x62\x9b\x36\x68\xd2\xed\x43\x51\x2c\x68\x89\x92\xd8\xc8\xa4\x96\xa4\xac\x18\x41\xbe\xfb\xce\x0c\x29\x59\x4e\x5c\xa0\x6f\x5b\xa0\x09\x35\xe4\xfc\xe6\xff\x9f\xb4\x3c\xbf\xe3\x95\x60\x56\x98\x8d\x30\x51\x24\xd7\xad\x36\x8e\x25\xd1\x2c\xce\xb5\x72\xe2\xde\xc5\x70\x2c\xd7\xf4\x4b\x09\xb7\xa8\x9d\x6b\xf1\x6c\x3a\xe5\xe4\x5a\x2c\x0a\xb1\xea\xaa\x38\x8a\x66\xba\x15\xca\x19\x9e\x4b\x55\xb1\xb8\x92\xae\xee\x56\x59\xae\xd7\x8b\x09\x7d\x7a\x7e\x55\x69\x80\x71\xbc\xb2\xbf\xf8\x7a\x11\x74\xa9\x74\x7b\x57\x65\x52\x2d\xce\x1a\x01\x2a\x2f\xee\xf8\x76\x23\x04\x3c\xc8\x36\xaf\x17\x8d\xae\x2a\x61\xe2\x28\x8d\xa2\xc5\x82\x5d\x73\x25\xf3\x2b\x59\x14\x8d\xe8\xb9\x11\x0c\x6e\x2d\xe3\x6a\xcb\x5a\xbc\xb0\x19\xbb\xd0\x86\x29\xdd\xcf\x59\x2f\x5e\xc2\x3d\x5a\x2c\x55\x27\x98\xab\x8d\xee\xd1\x10\x57\x0b\xff\x98\x75\x2d\x22\xe2\xb7\x75\xe0\x33\x66\x35\x7c\x48\xcb\xd6\x7c\xcb\x72\xc3\x6d\xed\xdf\x1a\x9d\x0b\x6b\xb3\xa8\xec\x54\xfe\x54\x7e\x52\x33\xf4\x5e\x76\xc9\x15\x50\x4c\xba\xf7\xc5\x1e\xa2\x99\x11\xae\x33\x6a\x8f\x7c\x01\x38\x09\x82\x25\xbd\xa7\x7f\x16\xb6\xd5\xca\x8a\xaf\x46\x3a\x61\xe6\xcc\xb0\xe3\x40\xff\xab\x13\xd6\xa5\x88\x33\x2b\x44\x09\x88\xc4\xe6\x09\x33\x32\xe2\xdc\x18\x76\xba\x64\x46\xe4\x1a\x3c\x97\xa4\x78\x21\x4b\x36\xde\x2d\x97\x4c\xc9\xc6\x33\x04\x65\xf0\xf8\x88\x3f\x36\xdc\x30\x61\xe8\xbf\x86\x3c\x01\x8a\xed\xa5\xcb\x6b\x36\x45\x1e\xce\x59\xe2\xb6\xad\x08\xa2\x73\x6e\xd1\x69\x06\xfc\x79\x4a\xc8\x08\xb3\x64\x90\x53\xd9\x39\x82\x95\xc9\xc0\x96\x8e\xcf\x49\xca\xf4\xf5\xf0\x04\x49\x60\x1d\xef\x1a\xf7\x13\xb0\xb8\x53\x77\x10\x53\x15\xe2\xf6\xe2\xdf\x1b\xa6\x4b\x86\xfa\xb0\x17\xb7\xf1\x7c\x44\xda\x9d\x52\x6f\x24\xfe\xf4\xf9\x93\x5d\x18\xbd\x3e\xf3\xe9\x9f\x98\x6c\x38\xa5\xa9\x97\xf1\x2e\x89\x89\x35\x9e\x93\x06\x81\xe7\xea\x21\x06\x5d\xe2\x53\xd4\x7d\xce\x62\xca\x12\xcc\x5e\x01\x24\x6f\x7d\x42\xb5\x92\xdd\xe0\x0d\x80\x3d\xa6\x63\x60\xf6\x3c\xf0\x48\x81\xa9\xb3\x1b\x2c\xc9\xcb\xdb\xdb\xeb\x04\x12\x14\x6f\x80\xe1\x91\xf2\x1a\xb0\x5d\x67\xf7\x33\x81\xf5\x86\xb7\x90\xdd\x10\x5d\x4f\x06\x02\xd2\x23\xb2\xfc\x20\x07\x68\xd5\xe5\x0e\x83\x74\x20\xb3\xa2\x99\xe7\x61\x52\x39\x14\x4b\x09\x9d\x58\x76\x7c\x08\x2a\x65\xf4\xfb\x52\xf0\x02\xf2\x2a\xd7\x85\x40\x36\x8a\xbf\xcd\x02\xce\x92\x21\x1d\x09\xfb\xbc\xd9\x53\x56\xb2\x92\xb4\x0e\xc5\xff\xa9\xfd\xc8\xd7\x22\xa8\xfb\xe0\x5d\xf0\x15\x5a\xc6\xed\xde\x35\x2f\x0a\x4b\x35\xa8\x5b\xa6\x90\xe0\x34\x78\x23\x34\x31\x56\x42\xa5\x77\xe0\x94\xd5\x96\xde\x0c\x8d\xaa\x91\x2b\xc3\xcd\x36\x63\xef\x1d\x5e\x5b\x84\xe6\xac\xd5\xa0\x3d\x38\x68\x25\x72\x8e\x4c\xd2\xbd\xb4\x2c\xe7\x4d\x23\x0a\xa0\x35\xba\x07\xeb\x26\xad\x00\x2a\xd5\x0b\x56\xcd\x96\xf5\xd0\x0f\x40\x72\xcb\xad\xd7\x46\xaa\x52\x87\xe6\x01\xdd\x02\x6e\x6a\xbe\x41\x44\x10\x63\x85\xdb\x09\xcb\xd8\xf9\x46\x20\xaa\xee\xaa\x1a\xef\x0b\x2d\xac\x7a\xe9\x58\x5e\x73\x55\x09\xc2\x1a\x8c\xe9\x51\xb2\x6c\x1a\xc2\xf2\x6d\x09\xb0\x43\xf7\xd8\xd9\x0c\xc2\xd6\x1c\xc0\x79\xd0\x16\x38\x3a\x2b\xb5\x0a\xdd\xe9\x99\x0b\x93\xdc\xdd\x0f\xcc\x43\xd2\xcf\xc1\x9d\x83\xf7\xe1\x61\xfa\xf4\x9e\x42\xec\xcc\xb5\xa3\xfa\x07\x80\xec\x0f\xde\x74\x22\xd9\x0b\xdd\xc3\x63\x9a\x25\xc7\x01\x21\xc2\x96\x13\x58\xfe\xb5\x6b\x38\xc7\x81\xb4\x0c\x02\x23\x6c\x3b\xc1\x24\x80\x0d\x99\x1f\xf4\x85\x8e\x2b\xb8\x13\x98\xee\x4a\xf4\xcc\x42\xf9\x50\xcc\x0b\xc6\x4b\x0c\x1c\x5a\xfb\xe5\xf3\x07\x88\x82\xab\xa9\xfa\xe1\xdb\xf8\x06\x99\x21\x0c\x44\xbb\x6d\xa0\x34\xad\xf7\x1c\xf1\x07\x27\x85\x67\x83\x9d\xf3\x69\xe6\x68\x78\x60\xc0\xe9\xd4\x99\x2d\xdb\x48\xce\x26\x33\x2a\xbb\x01\x98\x69\xe7\x48\x49\x54\x89\x91\x46\x01\xe2\x5e\x5a\x87\xf5\x34\xca\xa8\x29\xe9\xed\xdc\xe7\x12\xbe\xf1\x76\x15\x3e\x4d\x71\xba\xec\x86\x57\x8f\x01\x5f\x09\x8c\x6f\x2d\x9b\xc2\x9b\xc5\x1d\xf1\x85\x88\x06\xef\xfc\x13\x13\x07\x2c\x7d\xeb\x9c\x58\xb7\x94\x76\x3f\x20\xa7\x07\xb3\xc1\x94\x4a\x38\x47\xd3\x14\xdb\xa1\xaf\x88\x12\xfc\x44\x66\x07\x1f\x64\x1e\xe3\x56\x63\x4d\xc1\x02\x02\xb3\xa5\x26\xb7\x0f\xa1\xe4\x43\x71\xfb\x6c\x94\x0a\x90\xa0\x0e\xb0\x02\xb0\x4a\x2a\x0d\xd2\x15\xca\xa6\x20\xea\x0e\xd3\x60\x8b\x05\xa6\x0a\x0f\x3d\xa1\xe3\x7c\x80\xdc\x59\xc1\x57\x00\xb4\xf0\x26\x40\xe3\x80\xcc\x40\x62\x76\x0d\xc9\x13\xf9\xc1\x67\xdb\x67\x81\x8e\x68\x74\xda\x7c\x4e\x53\xf1\x74\xb9\xf7\xe0\xb7\x46\xaf\x78\x83\xe1\xc0\x31\x8b\xb6\xcd\xce\xef\xf1\xd2\x25\xd3\x67\xd8\xdc\x2f\x43\x0e\xd0\x28\xf9\xc9\xe5\x19\x37\x46\x02\x92\xc9\x3c\x21\x4d\xdf\x90\xd4\x49\xf9\xcc\x40\xc5\x7d\x1d\x6e\xd0\x8f\xa8\x69\xe2\x0d\xa3\xd1\xc2\x44\x03\x3e\xfd\x35\x86\xf9\xde\xed\x19\x26\xdd\xa7\x32\xb1\x79\x4a\x48\xe3\x96\x61\xdb\xec\x42\x2a\x69\x6b\xc8\x77\xef\x69\xa9\x7e\x88\xdc\x27\x26\x7b\xff\x0e\x27\x81\xf6\xab\x17\x76\x64\x59\x4c\x2b\x80\x26\x62\x05\xf8\xc0\xe9\xd0\x8b\x6b\x7e\x27\x92\x35\x6f\xbf\xf9\x6e\xf1\x7d\x6c\x1a\xe8\xed\xe0\x69\x90\x38\xba\xf6\x3d\xc9\x4a\x80\x34\x56\xdd\xbe\xde\xb7\x40\xbb\xe2\x2d\xf9\xf7\x00\x7d\x70\xad\x1b\x7c\x3a\xdd\x81\x30\xc0\x38\x99\x0b\x80\xbc\x43\xc9\xee\x5b\xac\xdd\x2b\x4a\x63\xf3\xca\x5f\xc5\xdf\xdf\xe0\xe5\xc3\x74\x15\xf8\xe9\xfa\xf0\xb6\x28\x86\xaf\xe7\x40\xf3\x20\x2c\x1d\x76\x2e\x5a\x49\xc0\xb2\x0f\xba\xc2\xd9\x00\x3c\xc1\x6d\x7f\xc2\x06\x27\xe4\x46\x14\x71\x7a\x70\xd9\x3b\xc8\x53\x52\x90\x02\x8f\xdf\x31\xa0\x77\x9e\x41\xcb\x7f\x92\xbc\x41\x43\x1c\x0f\x94\x0d\x66\xea\x5a\xdb\xa6\x3e\xc8\x5f\x2c\xb6\x22\x1f\x9e\x71\x60\xc2\x52\xdc\xf0\x2d\xf6\x46\x3f\x26\x73\xc8\x80\xb5\x2e\x64\xb9\x85\x89\x86\xc6\x8c\x93\x22\x8e\x77\xf2\x97\xe3\x50\x41\x99\x7e\x7e\xf8\xab\x39\x7b\x32\x47\xe6\xec\xc8\x63\x50\xae\x59\xd3\x23\xd6\xd1\xa1\x95\xc4\x3b\x82\x2e\x4e\xd9\xf0\xef\xbf\x27\x27\x94\x08\xfb\x4f\x4f\x59\x3f\x1f\xdc\x8d\x7f\x90\x50\xe9\x5d\x09\x18\xc5\x05\x2c\x61\x98\x5c\xd0\xf4\x32\x4f\x48\x87\x37\xe8\x9a\xdf\xa5\xda\xbd\xd8\xa3\x7e\xbe\x3e\xa3\xf5\xcd\x9c\xab\x6e\x9d\x4e\x71\xbf\x98\x66\x02\x3a\xf4\x19\x32\xe7\x79\x20\x47\xae\x1b\x32\xe4\x0c\xb6\xa3\x91\xb9\x03\x97\xff\xe7\x7f\x09\xf8\x20\x6c\x58\xe9\xb0\xcf\xef\x48\xec\xff\x4b\xf6\xfa\xe4\x24\x64\x27\xa1\xd1\x06\xbb\x53\xda\x74\x62\xcc\x37\x0c\xeb\x47\x88\x1a\x8d\x95\xd0\x5b\xa7\x4d\xb7\x11\xb8\x07\x39\xb3\xc5\xcd\x85\x1a\x3a\x05\x75\x36\xb6\x0b\xaa\x11\x1f\xb9\x5f\x58\x03\x48\x57\xe0\x39\x3a\x1a\x04\x4c\xfb\x19\x26\x31\x68\xf9\xa9\x15\x86\x3b\x58\x5a\x68\x41\x39\xde\xb5\x32\x5f\x21\xbe\xe7\x4c\x77\x65\x30\x1e\x1d\x8b\x99\x34\xa4\xad\xd7\x28\x1d\x36\xe8\xbf\x03\x00\x00\xff\xff\x4a\x9c\x64\x6b\xf3\x0e\x00\x00")

func _hardcodedMiddlewareGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedMiddlewareGo,
		"_hardcoded/middleware.go",
	)
}

func _hardcodedMiddlewareGo() (*asset, error) {
	bytes, err := _hardcodedMiddlewareGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_hardcoded/middleware.go", size: 3827, mode: os.FileMode(420), modTime: time.Unix(1481764228, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"_hardcoded/doer.go":       _hardcodedDoerGo,
	"_hardcoded/middleware.go": _hardcodedMiddlewareGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"_hardcoded": &bintree{nil, map[string]*bintree{
		"doer.go":       &bintree{_hardcodedDoerGo, map[string]*bintree{}},
		"middleware.go": &bintree{_hardcodedMiddlewareGo, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
