// Code generated by go-bindata. DO NOT EDIT.
//  memcopy: true
//  compress: true
//  decompress: once
//  metadata: true
//  asset-dir: true
//  restore: true
// sources:
//  ../_hardcoded/doer.go
//  ../_hardcoded/middleware.go

package hardcoded

import (
	"bytes"
	"compress/flate"
	"io"
	"os"
	"path/filepath"
	"strings"
	"sync"
	"time"

	"github.com/tmthrgd/go-bindata/restore"
)

type asset struct {
	name string
	data string
	size int64
	mode os.FileMode
	time time.Time

	once  sync.Once
	bytes []byte
	err   error
}

func (a *asset) Name() string {
	return a.name
}

func (a *asset) Size() int64 {
	return a.size
}

func (a *asset) Mode() os.FileMode {
	return a.mode
}

func (a *asset) ModTime() time.Time {
	return a.time
}

func (*asset) IsDir() bool {
	return false
}

func (*asset) Sys() interface{} {
	return nil
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]*asset{
	"../_hardcoded/doer.go": &asset{
		name: "doer.go",
		data: "" +
			"\xd4\x3a\x7f\x6f\xdb\x46\xb2\x7f\x4b\x9f\x62\x2a\xa0\x17\x32\x91\x49\x3b\x77\x49\x0f\xea\xf3\x3d" +
			"\xb4\xb6\xfb\x52\x5c\x9b\x04\x91\xfb\x1a\x20\x08\xae\x2b\x72\x28\x6d\x4d\xee\xb2\xbb\x4b\xc9\x82" +
			"\xcf\xdf\xfd\x61\x66\x97\x14\x29\xc9\x4e\xee\x5a\x3c\xbc\xa7\x3f\x2c\x91\x3b\x33\x3b\x33\x3b\xbf" +
			"\xd7\xb5\xc8\x6e\xc4\x12\x21\x2b\x25\x2a\x37\x1e\xcb\xaa\xd6\xc6\x41\x34\x1e\x4d\x16\x5b\x87\x76" +
			"\x32\x1e\x4d\x32\xad\x1c\xde\x3a\xfa\x89\x2a\xd3\xb9\x54\xcb\xf4\x57\xab\x15\xbf\x30\x46\x1b\x86" +
			"\x2a\x2a\x86\x90\x3a\x95\xba\x71\xb2\xa4\x87\x52\x2f\xe9\xab\x12\x6e\x95\x1a\xa1\x72\x7a\x50\xe8" +
			"\xc2\x57\xba\x72\xae\xa6\xdf\x76\xab\x32\xfa\x76\xb2\xc2\xc9\x78\x3c\x9a\x2c\xa5\x5b\x35\x8b\x24" +
			"\xd3\x55\x2a\x0a\xbc\x4d\x57\x5b\xeb\x8c\xbc\x3d\x59\xea\xf6\xe7\x64\x08\x95\x6b\xa5\xd7\x42\xad" +
			"\x64\x8e\x29\xae\x51\x39\xab\x1b\x93\xe1\x64\x3c\xd2\x35\x2a\x67\x44\x26\xd5\x12\xfa\x18\xbd\xf7" +
			"\xfd\xdf\x27\x4b\x3d\x19\x8f\x9c\x58\xda\xcf\x84\x4e\x83\x66\x96\xba\x14\x6a\x99\x68\xb3\x4c\x6f" +
			"\x53\x12\x2e\x68\x2d\xcd\xdc\x6d\x90\xb3\xd4\xcb\x25\x1a\x98\x2c\x75\x7d\xb3\x4c\xa4\x4a\x2f\x4a" +
			"\x5c\xa3\x49\x6f\xc4\x76\x8d\x78\xb2\xd4\xc9\xfa\x65\xea\x81\x26\xe3\x78\x3c\x4e\x53\xc8\x35\x1a" +
			"\x90\x16\x84\x02\xa9\x1c\x9a\x42\x64\x08\x85\x36\x30\xc9\xb5\x54\xcb\x09\x10\x69\x30\xf8\x5b\x83" +
			"\xd6\x59\xa8\xb5\xb5\x72\x51\x6e\x61\x23\xdd\x0a\x36\x46\xd4\xb5\x54\xcb\xb1\xdb\xd6\x18\x48\x75" +
			"\x44\xee\xc6\xa3\x4b\x1d\x65\xf0\x94\x28\x24\x17\x7c\xfc\x53\x30\xe1\xf9\x9d\xa7\x18\x43\xd4\x3e" +
			"\xdb\x5a\x2b\x8b\x53\xe0\x03\x8f\xc7\xf7\x63\x4f\x55\xd7\xaf\x45\x85\x17\xee\x16\xac\x33\x4d\xe6" +
			"\xee\xee\x99\xef\x85\xb0\x18\x68\xbc\x12\x2a\x2f\xd1\x40\x8d\xa6\xd0\xa6\xb2\xe0\x56\xc8\xeb\x03" +
			"\xde\x3d\x35\x7a\x7d\x49\x7c\xee\x88\x15\x8d\xca\x20\xca\xbb\xa5\x18\x7e\x07\xdb\x24\xb5\x41\xd7" +
			"\x18\x05\xe1\x58\x92\x4b\x1d\x99\xe4\xc2\x9f\x55\x14\x4f\x21\x9b\x82\x17\x2f\x4d\x21\x9c\x32\x73" +
			"\x24\xf2\xdc\xb6\x2f\xc0\xe9\xa1\xe2\x3d\xf7\x7d\x70\x2f\x00\xed\x97\xb3\xe6\xc7\x3d\x51\x7a\x70" +
			"\xbf\x57\x9a\xf1\x28\x73\xb7\x30\x3b\x87\x9e\x0c\x64\xf3\x74\x28\xf4\x3a\x73\xb7\xc9\x7f\x8b\xb2" +
			"\xc1\xa8\x3b\xa8\xbb\xfb\x38\x89\xc8\x87\xd4\x32\x1e\x8f\xd6\xc2\x80\xad\xa1\x67\xd3\xc9\xbc\x16" +
			"\x6a\x3c\x4a\x53\xb8\x7e\x73\xf9\x66\x46\x82\x03\xfb\x83\xc1\x52\xb8\x20\xbd\x54\x75\xe3\x20\x17" +
			"\x4e\xfc\xe7\x78\x24\x0b\xa8\x85\x41\xe5\x08\x93\x76\xdd\xa7\xf6\x9d\xd1\x55\xcb\x5e\xe6\x6e\xe3" +
			"\xaf\xfb\xf0\x5f\x9c\x83\x92\x25\x69\x6a\x64\x6b\xd8\x43\x76\xc2\x30\x54\x60\x7f\x3a\x58\xbd\x58" +
			"\xc9\x32\x7f\x53\x44\x3b\x62\x3b\x25\xc4\xf1\x78\x74\x0f\x58\x5a\xfc\x3c\xca\x04\xee\xfd\x9e\x39" +
			"\xfe\xbb\x54\x79\x32\x47\x17\xd9\x7a\x0a\x83\xb7\xef\xde\x5e\xf8\x73\xba\x52\x4d\x15\xb3\xf0\x68" +
			"\x0c\x49\x6d\xeb\xe4\xda\x88\x0c\x4d\x14\x27\xdf\xab\x5f\x31\x23\xec\x9e\x69\x8d\x47\xfd\x60\x94" +
			"\xbc\xba\xbe\x7e\xfb\x0a\x45\x8e\xc6\x3e\xb2\x74\x21\x8c\x91\x68\x22\x93\xf8\x17\x71\xfc\x35\xef" +
			"\xd7\xd3\x5a\x30\x68\x25\xcb\x29\x14\x95\x4b\xae\xc8\x38\x8a\x68\x92\xe9\xa6\xcc\xd5\x13\x07\x92" +
			"\x99\xe9\x8c\x77\xe5\x29\x43\xf4\xe5\x3a\x9e\xb0\x2d\x79\xe1\x03\x9d\x3c\xc9\xc9\x29\xfa\x7e\x60" +
			"\xd0\x99\x6d\xeb\xc7\xf4\x20\xd1\xc2\x8b\xd3\xf7\xc7\x9c\x80\x61\x0f\x5c\x60\xf7\x61\x67\x18\x31" +
			"\xd4\x5b\x5d\xca\x6c\x0b\xef\x76\xbf\xc3\x7e\xbd\x37\x90\x63\x21\x15\x5a\x10\x9e\x32\xd4\xfc\x3a" +
			"\xf1\x9b\xf5\x01\x07\xa1\x2d\x4d\xe1\x5b\x91\xdd\xe8\xa2\x20\xbb\x25\xb9\x7c\xdc\x51\x4d\xb5\x20" +
			"\x67\x56\x39\x38\x59\x91\x36\x74\x11\x08\x0b\xe7\xb0\xaa\x9d\x4d\xc6\xa3\x16\x35\x8a\xe1\xc3\x47" +
			"\x4a\x4a\xc9\x65\x63\x84\x93\xda\xfb\x05\xef\x0a\x06\x33\x94\x6b\xf4\x74\xfb\x8a\x98\x82\xb0\xb0" +
			"\xc1\xb2\xa4\x6f\x5a\x34\x68\x9b\xd2\x81\x2e\x18\xbb\x4d\x7c\xc1\xdd\x9f\x58\xf8\xe5\x52\xff\x02" +
			"\x15\xba\x95\xce\x93\xf1\x88\xa9\x47\x83\x08\x30\x85\x07\x02\xc0\x42\xeb\x32\xe8\x6c\x2e\xd5\xb2" +
			"\xc4\xc7\x34\xe7\x56\xc2\x75\xa7\x27\x5a\x6e\x41\xab\x0c\xbd\x36\x0f\x49\x0c\x62\xfa\x11\x85\x0a" +
			"\x07\x5b\xdd\x80\x5d\x91\xa9\x75\xdb\x60\x47\xfb\xcc\x62\xa6\x55\x0e\xa2\x70\x94\x7c\x1c\x14\x42" +
			"\x96\x36\x09\x91\xf0\x60\xbf\x18\x1e\xd6\x7c\x2f\x74\xef\xad\xdc\x9d\xc1\x53\xe0\x37\x73\xde\xed" +
			"\xbe\x6f\x45\xb0\x91\x65\x19\x38\x53\x5a\x9d\xbc\x7d\x33\xbf\x9e\xfa\x5f\xdf\x5c\x5f\xbc\xda\xa5" +
			"\x4e\x16\xe6\xc5\xfb\xf7\xc9\xb8\x8b\x7c\xdf\x3b\xb2\x56\x0b\x4a\x3b\xc8\x1a\x43\x41\xa6\xdc\xb6" +
			"\xd6\xa2\xb6\xfe\x10\x5a\x75\x60\x0e\x8b\xed\x03\x87\xfb\x88\xc0\xfe\xb4\x0d\xfe\x06\x7b\x27\x6e" +
			"\xd0\xd6\xc7\x8e\xbd\x7f\xf4\xa4\x93\x10\x7f\x42\x3c\xf8\xe7\x3f\x49\xa2\xe4\x47\x36\x26\x38\x3f" +
			"\x87\x09\x09\x3c\x39\xf6\x9e\xc4\xa7\x05\x8e\x20\xb6\xa6\x88\xe8\x1a\x7b\xa1\x73\x84\xff\x80\x17" +
			"\xa7\xa7\xfd\xd8\x52\x88\xd2\x62\x3f\x48\x38\xd3\x60\x50\xf3\xd5\x6d\xad\x15\x2a\x27\x45\x79\xd4" +
			"\xfa\x14\xe0\x0e\x62\xe0\xc4\xde\xea\x1e\xc0\x7f\xdc\xf4\x0a\xb9\xa6\x6a\x21\xbc\xe5\x6a\xa7\xb7" +
			"\x4b\x49\xd1\x20\x33\x28\x2c\x79\xf8\x46\x48\xc7\xf6\x61\xb9\x32\x41\xb7\x41\x54\xdd\xc1\xcf\xe0" +
			"\xec\xf4\x74\x0a\xcf\xe9\xcf\x5f\xe8\xcf\x5f\xe9\x0f\x05\x88\xb3\x97\xa7\xa7\x50\xc9\xb2\x94\xde" +
			"\x8a\x2d\x3c\x4b\x4f\xa0\xa9\x29\xff\xbd\xf8\x12\x7e\x95\xce\xa1\x69\x8f\xf6\xb8\x14\x9f\x61\xd0" +
			"\x94\x39\x2a\x71\x83\xd1\xde\xf2\x14\x5e\xc4\xe3\x91\xc2\x5b\x86\x38\x3b\x3d\x6d\x8d\xfc\xc7\x1d" +
			"\x47\xe3\x91\x51\x39\x67\x7f\xa1\xf2\xe4\x35\x6e\xa2\xf6\xc7\x9c\xcb\xdf\x88\x11\x5e\xeb\x4d\x14" +
			"\x27\x3f\x29\x79\xfb\x5a\x28\xed\x53\x23\x17\x07\xa7\xc9\xe9\x0b\x48\x53\x16\xeb\x05\xd5\x67\x19" +
			"\x2a\x17\xe4\x1a\x8f\xa8\xca\x94\x81\xf8\x92\xe3\x7a\x6b\x11\x1f\xe4\x47\x38\x07\x66\xed\x19\x0c" +
			"\x98\x8e\xa2\xc8\xa8\x3c\xf9\xae\xd4\xc2\xbd\xfc\x4b\x14\x3f\x7d\x1e\x9f\x9c\xc5\x4f\xf1\x69\x11" +
			"\xde\x10\x12\xed\xef\x05\x7b\x7a\x0e\xcf\xfb\x56\x65\xd0\xfd\x9f\xf5\xdd\x87\x0e\xf8\xff\xbf\x03" +
			"\xbf\xd6\xc7\xb3\x86\x77\x52\x4a\x90\x8a\xda\x14\xaf\x3c\x72\xa8\x2e\x77\x84\x2c\x3c\x24\xf0\xb8" +
			"\xe3\x52\x38\xa8\x6a\xb7\x05\x5b\xca\x0c\x5b\xe5\x0e\x28\xfc\x9b\x59\x60\x18\xf6\x45\xb9\x11\xdb" +
			"\x5e\xbc\x20\xf9\x1f\xd8\xed\x5f\x4d\xb8\x3d\x1e\xbc\x5a\xdb\x5e\x88\x15\x14\xea\xbd\xa1\x1a\x7e" +
			"\x96\x6e\xd5\xd7\x51\xa7\x0d\x50\xb8\x81\xd0\x29\x7a\x33\xd6\x6b\x34\x46\xe6\xa1\xae\xf0\x6d\x39" +
			"\xe8\x05\x55\x70\x4f\x6c\x57\x8c\x75\x65\x10\x4b\xb4\x47\x9e\x6a\xec\x96\x68\x5b\x7f\x4e\xe1\x81" +
			"\x92\x2b\xde\x87\xec\xf7\x48\x61\x85\xe8\xfb\x2e\x22\x73\xb7\xd3\x81\x9c\x77\xf7\x03\xca\x71\xbf" +
			"\xcf\x79\xda\xd5\x82\x7f\x44\xd3\xd6\x6e\x31\x05\x7d\xb3\xd7\xf1\x84\x16\x67\xc8\x57\x9c\x44\x7d" +
			"\x31\xd9\xd1\xbe\xd0\x37\xad\x57\x74\xba\x38\x87\x3c\xe9\x3d\xb3\x93\x74\x99\x85\xf6\xd9\xad\x25" +
			"\x3b\xc3\xf4\x9d\xd3\x11\x1f\xf7\x0b\x9d\x9f\x8f\xb9\xe6\x9b\x8b\x35\x0e\x0a\xa3\x85\xce\x29\x47" +
			"\x41\x46\x7d\xf0\x06\x61\xc5\x00\xda\x6f\x96\xc0\x1b\xb7\x42\xb3\x91\x7e\x8d\xa3\x20\x03\x88\xd2" +
			"\xa0\xc8\xc9\x7c\x44\xce\x74\xb9\x95\x6e\x8a\x02\x0d\x68\xd5\x45\xb7\x7c\xb0\x15\xa3\x53\xdd\x95" +
			"\xc0\x1c\x91\xd1\x88\xe1\x59\x9a\x5a\x47\xe2\xac\xd1\x14\xa5\xde\xf0\x98\x83\x31\xa4\x56\x36\x7d" +
			"\xfe\xe7\xd3\xaf\x4e\xff\xfa\xd5\xcb\x94\xf6\x92\x6a\x79\x42\x1c\x9f\xe8\xe2\x84\x70\x4f\x02\xed" +
			"\x13\x4a\xbc\xba\x71\x27\x95\xce\x65\x41\xb1\xa1\x5b\xb1\x4e\xb8\xa0\x8b\x45\x53\xc0\x87\x8f\x8b" +
			"\x2d\x3d\xcb\x02\x4c\xf2\x2d\x09\xdf\x6b\x60\x86\x0a\x1b\x8d\x16\x4d\xe1\x23\xe5\x39\xf8\x51\x52" +
			"\xf2\x0e\x45\xfe\x4d\x59\x46\x1e\x97\xf2\xc7\x30\x6a\x12\x95\x41\x1f\x84\x86\x08\xdd\xd3\x61\xfa" +
			"\x4c\xd6\xd6\xbd\x94\xf6\xbe\xe6\xe8\xf7\x75\xfb\xee\xd9\x33\xc6\x3f\xca\xda\xc8\xe4\xdc\xdb\x05" +
			"\x3e\x5e\xeb\xfa\xa2\xd4\x16\x4d\xc4\xc3\x31\xca\xb4\xdf\xb2\xfa\xa3\x45\x53\x70\x5e\x1b\x05\x1a" +
			"\xe7\x60\xf2\xc0\x02\x47\xe7\x56\xa0\x41\x77\xe5\x37\x0d\x9c\x9d\x9f\x43\x89\x2a\x6a\x4d\x2f\xa6" +
			"\x90\xff\x45\xdf\xf8\x42\xa6\xf1\x99\xc5\xf7\x6d\x9e\xc7\x85\x41\x71\x13\xf6\x4a\x53\x60\x0e\xdb" +
			"\xc6\x83\x6d\xd2\x9b\x1b\x1b\x06\x19\xc8\x52\x48\xd5\x26\x0d\x62\x36\x61\x0c\xb2\xe9\x91\x2f\xa3" +
			"\x4b\xc4\xba\x63\xe4\x43\x60\xf0\x63\x3c\x4c\xd5\x81\x87\x10\x75\x33\x69\xb2\x46\xba\x6f\x89\x15" +
			"\x34\xdc\xff\xc9\xaa\x2e\xb1\x42\xe5\x42\x28\xf3\x10\xb0\xf0\x20\x50\x53\xc3\x65\x14\xe7\xec\x39" +
			"\x3a\xc8\x71\xd1\xf0\x6c\x81\x0e\x87\xbe\x75\x8d\x46\x38\x1c\x20\x4b\x05\x02\x2a\x4a\x71\x9b\x15" +
			"\x1a\xa4\x96\x82\xed\x5b\xab\x72\x0b\xa5\x5e\xf6\x58\x01\x36\x41\x5f\xca\x31\x0c\x95\x02\x8b\x52" +
			"\x67\x37\x5c\x00\x74\xc5\x43\x61\x74\x05\x4b\xcd\x83\x8d\x95\xd1\xcd\x72\x15\xd2\xda\x11\x91\x1e" +
			"\x6b\x69\x3d\xff\xfe\xc3\x7d\xd9\x28\x10\xe0\x59\x8c\x1f\xb8\x74\x33\x40\xfe\xf8\xdf\xc9\xdf\x79" +
			"\xfc\xf7\x03\x3f\x90\x36\xc9\x1d\x02\xea\x7c\x7e\xf5\x46\x65\x08\x76\xab\xb2\x84\x7e\xb1\xae\x5f" +
			"\xf9\x11\xe8\x7c\x7e\x75\xb5\xa6\xec\x20\x2d\x60\x45\x55\x1b\x97\x31\xbb\x59\x29\xac\xa5\x00\x8b" +
			"\x66\x8d\xe6\xc4\x12\xa0\x9f\x8c\x26\x5c\x1c\xa1\xcd\x8c\x5c\xf8\x9a\x98\x34\xcc\xda\xa2\x64\x2f" +
			"\xda\xcd\x83\x1a\xf6\x77\xdb\xe9\xe0\x9a\x96\x1f\xf9\x78\x99\xe1\x97\x5f\xad\x56\xb3\x09\x11\x9b" +
			"\xfc\x32\x1e\xb1\x3a\x3e\x1b\x4b\x89\x8a\xb1\x42\x92\xb8\xd0\x8d\x72\xc7\xb0\xa4\x7f\x1d\xb0\x4c" +
			"\x0f\x9a\xb0\x79\x24\xf2\x20\xee\x3e\x36\x76\xd0\x1d\xee\x5b\x5f\x1c\x8b\x25\x7e\x0e\xee\x0e\x9a" +
			"\x08\x7c\x6f\x2f\x06\x96\xf4\xa6\x46\xd5\x27\xc0\x35\x45\x47\x40\x1e\x81\x66\x05\xe8\xb2\x94\x6a" +
			"\xc9\x6c\x7d\x27\x64\xd9\x18\x7c\x4c\x01\x87\xd0\x87\x44\xca\x92\x7c\xbc\x4f\xec\x31\x22\x03\xe8" +
			"\x87\x88\xcd\x9b\x2c\x43\x6b\x3f\x93\x58\x80\xde\x27\x36\x5f\x69\xe3\x82\x16\x30\xff\x94\x78\x43" +
			"\xe8\x03\x5a\x3d\x86\x3e\xad\xaa\x07\x18\xba\x5e\x51\x16\x7c\xab\x75\xf9\x0e\xa9\x10\x23\xa6\x1e" +
			"\x26\x72\x08\x7d\x40\x4f\x56\xa8\x1b\xf7\x99\x4c\x05\x68\x22\x72\xe1\x3b\x99\x0b\xad\x42\x4f\x73" +
			"\x75\x8b\x59\x43\x19\xdb\x1b\xf7\x90\x48\xf6\x38\x34\x11\xfc\x41\x38\x54\xd9\xf6\x5a\x3b\x51\xfe" +
			"\x88\x42\x3d\x6e\xdc\x65\x0f\xfa\x1f\x15\x0a\x32\xcc\xb6\xde\x2b\xf5\x92\xe3\x43\x54\x1e\x8b\x6b" +
			"\x53\x38\x08\x24\x9c\xbc\xca\xe4\x7b\x55\xe8\xcb\x08\x13\x3f\xde\xad\x44\xfd\xc1\x07\x80\x8f\xdd" +
			"\x3c\xef\xee\x9e\xb2\xdc\xd0\xa7\x67\xc7\xbc\x18\x93\x7e\x94\x98\x12\x52\xcf\x95\x67\xc7\x5d\x1f" +
			"\x93\x5d\x70\xd8\xa1\xf4\x3c\x78\xf6\x10\xca\x0e\x86\xf1\x8e\x3a\xee\x6c\x88\x77\x2c\x14\x30\xf2" +
			"\x31\x7f\x9d\xed\x0b\x77\x08\x73\x04\x77\xe8\xa6\xb3\xa3\xb8\x03\x98\x07\x69\xb4\xce\xf0\x18\x8d" +
			"\x00\x73\x40\x63\xcf\x29\x67\xc7\x64\x18\xc2\x1c\x92\x18\x6c\x7f\x5c\x0d\x0f\x6d\x7f\xc4\x05\x67" +
			"\xfb\xb8\x87\x30\x87\x64\x82\xe7\x3d\xc6\x42\x80\x61\xdc\x4f\x39\xdc\x0c\x30\xf9\x84\x0b\x33\x9d" +
			"\x72\xcf\x2b\x0f\x6d\x10\x93\x7d\xcf\x9d\x8e\x47\xf7\xf1\x78\xd0\x7e\x1d\x16\x30\x31\x48\x25\x5d" +
			"\x14\x87\x11\xf9\x5b\x34\x52\xe7\x32\xe3\x89\x59\xa9\x97\x7e\x86\xae\x44\x39\xac\xa1\xa8\x18\x13" +
			"\xd6\x4a\xcb\xf5\x97\x45\xe7\xb8\x94\xe9\x95\x5a\x6e\x65\xd0\xae\x74\x99\x5b\x2e\xb7\x1a\x95\xa3" +
			"\xb1\x4e\xa8\x9c\xc7\x05\x75\x5d\xca\xcc\xb7\xef\x0b\x5c\x89\xb5\xd4\x26\x61\xf4\x9f\x54\xa1\x8d" +
			"\x6b\x94\x70\x58\x6e\xa7\xfd\xca\x25\xd7\x68\xd5\x13\x17\xda\x1e\x58\x1a\x14\x0e\x36\x62\x4b\xac" +
			"\xe0\x6d\xed\x0b\x5c\x69\x99\x4a\x2e\x9c\x98\x82\xd5\xd4\x2b\x19\xb4\xda\x38\xae\x22\x1b\xa3\x78" +
			"\xbe\xaf\x40\x3a\x0b\xb6\xa9\xf9\x62\x9b\x7a\x81\x85\xd1\x22\xcf\x84\x3d\x10\xa3\xa2\x4a\x37\xb3" +
			"\x5c\x37\xf1\x44\xff\xb0\x78\x82\x68\x3e\xbf\x8a\x3d\xfb\x73\xf4\x83\x7f\x3b\x4b\xd3\x47\x6e\xac" +
			"\xa5\xb5\x0d\xda\xf4\xc5\xcb\xa4\x2b\x09\x43\x5d\x47\x9d\x00\x9d\x96\x3f\x90\x51\xc0\x99\x3b\x83" +
			"\xa2\x6a\xaf\x5b\x66\xe7\xad\x5e\x78\xae\xd7\x5f\xe3\x8a\xfd\x18\x92\xbf\xdd\xe2\xe5\x52\x5a\x87" +
			"\x8a\x03\xb0\xbf\xa5\x52\xe8\x92\x1f\xf8\x65\x34\x71\x59\x3d\x99\xc2\xe4\xec\xf9\x57\xc9\x69\x72" +
			"\x9a\x9c\xcd\x4e\x27\x0f\xf4\x56\xb5\x50\x32\x8b\xfc\x55\x11\xf7\x54\xa3\xa5\xbf\x02\x4d\xe6\xa4" +
			"\xa2\x68\xb7\xcd\x31\x7e\x62\x0f\xdf\x13\x95\xd4\xf7\x33\xb2\xcd\xe1\x1a\xcd\x16\xce\x4e\xa1\x9d" +
			"\xb2\x2e\x30\x13\x4d\xe8\x60\x88\x1a\x1a\x79\xdb\x1d\x8d\x30\x48\x47\x2a\xe0\xec\xf4\xa4\x1d\x82" +
			"\x32\xb5\xe0\xb7\xb0\x91\x2a\xd7\x9b\x04\xae\x57\xd2\x42\x89\xee\x89\x85\x86\x8e\xbf\xe2\xc9\xed" +
			"\x31\x92\x4e\xc3\x12\xf9\x6a\xc2\x94\xdb\x40\x4d\x64\x59\xe3\x9b\x0f\xf2\xaf\x70\x6d\x64\x21\x52" +
			"\x9a\x1b\x12\xe1\xd8\xfc\x40\xb2\x91\xd6\x68\x0a\xcc\x5c\xc7\xb8\x6e\x4c\xb8\x5d\x0a\xd4\x5a\x6b" +
			"\x0e\x80\xe5\x16\x2a\xe1\xb2\x55\xc7\xca\x13\x1b\xda\x14\x6a\xf1\xad\x66\xb5\x6c\x56\xa8\x8e\xf5" +
			"\x4d\x81\xa4\xe5\x61\x1f\x64\x2b\xa1\x96\x68\xb9\xf3\x2c\xf5\xf2\x3b\x4e\x92\x2a\xdb\xfa\x99\xf1" +
			"\xf0\x5e\x84\x61\x84\x75\x9c\x7d\xe7\x88\xca\x8f\x9e\xbb\x84\xbb\x97\x9f\xef\xee\x07\x08\x3f\xe8" +
			"\x25\x85\xba\x3d\x1c\x26\x4f\xef\xef\xd8\x28\xb8\xd5\xfe\x07\xb4\x33\xe3\xb0\x9a\xdd\x44\x7b\x57" +
			"\x34\x31\xdc\x41\x37\xca\x92\x8a\x67\x8e\x92\x82\x00\xd1\x18\x35\xa6\xa4\x6d\x26\x61\x4c\x31\x81" +
			"\x67\xd0\xda\x57\xf2\x4d\x9e\x9b\x28\x4e\xe6\xbc\x3d\x5b\x38\x35\xb2\xbf\x75\xe6\xcd\x36\xf9\x1a" +
			"\x37\xa1\x12\x88\x26\xff\x75\x75\x3d\x99\x42\x63\xca\x29\x59\xb3\x47\x38\x62\xe0\xac\xbe\xe4\xad" +
			"\x91\xca\x15\x91\xaf\x01\x20\xd3\x4a\x61\xd6\x5e\x79\xb7\xe7\x30\x9f\x5f\x51\x8f\x82\xa2\x9a\xc1" +
			"\x97\xb6\xbb\x40\xa5\x4f\xa6\x95\x93\xaa\x41\x7e\x62\xf5\x8d\x3c\x64\xc7\x5e\xef\x7f\x53\x92\x79" +
			"\xb3\xf0\x3d\xd8\xcf\xd2\xad\xa2\xc9\x64\x0a\x7f\xea\xcd\xc7\xfc\x60\xed\xb7\xff\x75\x86\xe9\x04" +
			"\x71\xbd\x9b\xfb\x7b\xcc\xe4\xca\x47\xbf\xb0\x35\x4f\x6c\xf6\x0b\x3a\xbf\xb4\xbb\x0f\xa7\x9a\x31" +
			"\xf9\x49\x55\xc2\xd8\x95\x28\x23\x3f\x02\x8a\x70\x9d\x5c\x0a\x27\xa2\x38\x9e\xc2\x9f\xf0\xf0\x36" +
			"\xfb\x80\xad\xc0\x17\x13\x4e\xb8\xe5\xfc\xe2\x1c\x26\x61\xef\x0b\x5d\x55\x42\xe5\x93\xc7\x51\xc9" +
			"\x88\xc9\xe0\xdb\xd1\xe1\xc0\x0b\x3e\xf8\xda\xf3\xe3\x0e\xf4\x60\x09\xce\x01\xc7\x7e\x3d\x4d\xd9" +
			"\x3b\xfb\x8e\xe9\x73\xa4\x2c\x40\x52\xb0\x41\xe9\x56\xde\x4b\x19\x38\x3a\x8b\x19\xb8\x90\xc6\x86" +
			"\x1c\x02\x1b\x7c\xb2\x46\xb0\xe4\x81\xa4\xed\x3e\x2d\xdd\xc3\x7c\x1e\x0f\x97\xa8\x6d\xf4\x7b\xad" +
			"\x44\xeb\xf9\xf9\x00\xe3\xcf\x71\x3f\x8e\x72\xee\xac\x85\xb5\x98\x83\x95\x2a\xe3\x61\x22\xd7\xe6" +
			"\x39\x58\x5d\xa1\x5b\x91\xa1\xec\x71\xd0\xe9\xba\x1d\x95\x8e\x8e\x04\x81\x9e\x5e\x76\x37\x4c\x2d" +
			"\x6c\xdb\x07\xe4\x49\xd9\x96\xfe\xf1\x27\xce\xb5\x3d\x9f\xa3\xf5\x31\x1d\xf7\xf1\xca\xf9\x8f\xe6" +
			"\x2f\xfc\xbf\x88\x2c\x7a\x58\xe4\xa5\xd1\x43\xf4\x63\xf8\x1b\x0c\xa2\xee\x1f\xcd\xd0\xce\x2f\xe9" +
			"\xcf\x3d\xe1\xdc\xc7\x9f\xac\xf1\x7e\xe7\xac\x5d\x16\x90\x27\x7e\x9a\x75\x37\x98\x5e\xce\x0e\xc6" +
			"\x97\x6d\x65\x72\xa9\xa3\x3c\xe9\x8d\xbb\xa6\x6d\xae\xf7\x71\x89\xd5\x72\x2c\x86\x85\x61\xa2\x9f" +
			"\xd6\x7a\x41\x79\x22\x3a\xbc\xcd\xfa\xdb\x79\x77\x9d\x35\xf2\xff\x41\x81\x79\x18\x96\x13\xb6\x50" +
			"\x61\x1b\x9e\x1d\x4a\x9e\xaf\xf5\x9d\x26\xe4\xe1\xde\x66\xda\xf0\xe8\x36\x9a\xbc\x78\xff\x9e\x2b" +
			"\x1e\xbf\xf5\x80\x9b\xfb\x2e\x5f\x1c\x4c\x3c\xb9\x00\xfa\xcc\xf1\xff\xc8\x8f\x7d\xff\x05\x45\x3d" +
			"\x3e\x2d\x7e\x60\xe8\xdd\xcd\xbb\x3f\xa5\xbf\x7f\x5b\x7d\x8f\x68\xef\x7e\x3c\xe4\xc3\xab\x0e\xd2" +
			"\xa7\xa0\x34\x14\xa1\x53\x64\x41\xfd\xc5\xf6\x16\x1d\x3c\x4d\xe3\xa3\xb3\xe4\xff\x09\x00\x00\xff" +
			"\xff",
		size: 10896,
		mode: 0664,
		time: time.Unix(1531951245, 349127592),
	},
	"../_hardcoded/middleware.go": &asset{
		name: "middleware.go",
		data: "" +
			"\xc4\x57\xdd\x6f\xdc\xc6\x11\x7f\x3e\xfe\x15\x53\x16\xb1\x49\x81\xe6\xb9\x05\x9a\x07\x05\x57\x20" +
			"\x50\xe4\x4a\xa8\x15\x0b\xfa\x68\x1e\x82\xa0\xd8\x23\x87\xe4\xfa\x78\xbb\xec\xee\xf0\x78\x07\x41" +
			"\xff\x7b\x31\xbb\x4b\x1e\x4f\x92\x01\xbf\x25\x40\x24\x6a\x66\xe7\xfb\x37\x1f\xee\x44\xb1\x11\x35" +
			"\x82\x45\xb3\x43\x13\x45\x72\xdb\x69\x43\x90\x44\x8b\xb8\xd0\x8a\x70\x4f\x71\xb4\x88\xab\xad\xfb" +
			"\xa5\x90\x96\x0d\x51\xc7\xdf\xa6\x57\x24\xb7\xb8\x2c\x71\xdd\xd7\x71\x14\x2d\x74\x87\x8a\x8c\x28" +
			"\xa4\xaa\x21\xae\x25\x35\xfd\x3a\x2f\xf4\x76\x39\xa3\xcf\xbf\x3f\xd4\x3a\x8e\x16\x24\x6a\xfb\x9d" +
			"\xaf\x97\xc1\x97\x5a\x77\x9b\x3a\x97\x6a\x79\xd1\xe2\x0e\xcd\x72\x23\x0e\x3b\xc4\x0f\xb5\xce\x77" +
			"\x3f\x2e\x5b\x5d\xd7\x68\xe2\x28\x8d\xa2\xe5\x12\x6e\x85\x92\xc5\x8d\x2c\xcb\x16\x07\x61\x10\x5a" +
			"\x5d\x5b\x10\xea\x00\x1d\x33\x6c\x0e\x9f\xb4\x01\xa5\x87\x0c\x06\x7c\x6f\x10\x38\x62\xa9\x7a\x04" +
			"\x6a\x8c\x1e\x38\x10\x6a\xd0\x3f\x86\xbe\x63\x8d\xfc\xb7\x25\x51\x6c\xc0\x6a\xa0\x46\x5a\xd8\x8a" +
			"\x03\x14\x46\xd8\xc6\xbf\x35\xba\x40\x6b\xf3\xa8\xea\x55\xf1\xd2\x7e\xd2\x00\x67\x2f\xbf\x12\xaa" +
			"\x6c\xd1\xa4\x27\x7f\xc1\x53\xb4\x30\x48\xbd\x51\x27\xe4\x4f\xbd\x2a\x12\x56\x96\x0c\x9e\x7e\x87" +
			"\xb6\xd3\xca\xe2\x6f\x46\x12\x9a\x0c\x0c\x9c\x05\xfa\xff\x7a\xb4\x94\xb2\x9e\x45\x89\x15\x1a\x70" +
			"\x62\x9e\xb0\x70\x41\x5c\x1a\x03\xe7\x2b\x30\x58\xe8\x1d\x9a\x24\x65\x86\xac\x60\xe2\xad\x56\xa0" +
			"\x64\xeb\x05\x82\x33\xfc\xf9\xcc\x3f\x76\xc2\x00\x1a\xf7\xbf\x36\x11\x53\xec\x20\xa9\x68\x60\xae" +
			"\x79\xfc\xce\x13\x3a\x74\x18\x4c\x17\xc2\x72\xd2\x8c\x54\xf5\xb9\xd3\xcc\x6a\x56\x50\x6d\x29\xbf" +
			"\x64\x65\x55\x32\x8a\xa5\xd3\x73\x67\x65\xfe\x7a\x7c\xc2\xa4\x12\x2b\xd1\xb7\xf4\x0d\x65\x71\xaf" +
			"\x36\x4a\x0f\x2a\xd4\xed\x87\xbf\xee\x40\x57\xc0\xfe\xc0\x0f\x0f\x71\x36\x69\x3a\x7e\xa5\x3e\x48" +
			"\xfe\xe9\xf1\x93\x7f\x32\x7a\x7b\xe1\xe1\x9f\x98\x7c\xfc\x4a\x53\x6f\xe3\x97\x24\x76\xa2\x71\xe6" +
			"\x3c\x08\x32\x37\x4f\x31\x1a\x13\x9f\xb3\xef\x19\xc4\x0e\x25\x8c\x5e\x8c\xcf\x43\xf4\x89\xeb\x95" +
			"\xfc\x9e\x39\x49\x9a\x3e\xa7\x53\x61\x4e\x32\xf0\xec\x0a\xd3\xe4\xf7\xdc\x92\x57\x0f\x0f\xb7\xc9" +
			"\x90\x01\x73\x9e\xd3\xe8\xd9\xe1\xda\x92\xa0\xde\x9e\x22\x01\x06\x23\x3a\x0b\x02\x4c\x20\xc3\xe0" +
			"\xe8\x91\x8b\xfc\x4d\x09\x4b\xa6\x2f\x88\x8b\xf4\x06\xb2\xa2\x85\x97\x01\xa9\x88\xcd\x3a\x40\x27" +
			"\x16\xce\xde\x52\x95\x82\xfb\x7d\x85\xa2\x44\x93\x14\xba\x44\x16\x73\xf5\xb7\x79\xd0\xb3\x02\xa6" +
			"\x33\xe1\x54\x36\x7f\x29\xea\xa2\x74\x5e\x87\xe6\xff\xd2\xfd\x2a\xb6\x18\xdc\x7d\xf2\x29\xf8\x4d" +
			"\x52\xf3\x70\xc2\x16\x65\x69\x5d\x0f\xea\x0e\x14\x13\x48\x83\x80\x30\xc4\xa0\xd2\x06\x7a\x8b\xb0" +
			"\x3e\xb8\x37\xe3\xa0\x6a\xe5\xda\x08\x73\xc8\xe1\x9a\x98\x6d\x59\xb5\x80\x4e\x4b\xc5\x09\x5a\x63" +
			"\x21\x58\x48\xd2\x7b\x0b\x85\x68\x5b\x2c\x61\x8d\xad\x1e\x40\xaa\xd9\x28\x10\xaa\xf4\x86\x55\x7b" +
			"\x80\x41\x1c\xd8\x72\x27\xac\xf7\x46\xaa\x4a\x87\xe1\x21\x2d\x73\x1a\xb1\x63\x8d\x20\xc0\x22\x1d" +
			"\x8d\xe5\x70\xb9\x43\xd6\xaa\xfb\xba\x61\x7e\xa9\xd1\xaa\xf7\x04\x45\x23\x54\x8d\x4e\xd7\x18\xcc" +
			"\xc0\x96\x65\xdb\x3a\x5d\x7e\x2c\x49\x0b\x61\x7a\x1c\x63\x26\x0d\x5b\x21\x15\x89\xe0\xad\x6c\xdb" +
			"\xde\x4a\xad\xc2\x74\x7a\x95\xc2\xa4\xa0\xfd\x28\x3c\x82\x3e\x03\x3d\x65\x5f\xaa\x3a\x7d\xc9\x77" +
			"\x25\x26\x73\x4b\xae\xff\x0b\xda\xe7\xff\x11\x6d\x8f\xc9\x49\xe9\x9e\x9e\xd3\x3c\x39\x0b\x1a\x22" +
			"\x1e\x39\x41\xe4\x2f\xc7\x81\x73\x16\x48\xab\x60\x30\xe2\xb1\x13\x42\x2a\x68\x1f\x90\x1f\xfc\x85" +
			"\xc2\xa0\x20\x64\xb8\x2b\x1c\xc0\x76\x42\xb9\x9a\x97\x20\x2a\x2e\x1c\x47\xfb\x78\xf7\x19\x3a\x41" +
			"\x8d\xeb\xfe\x06\xc1\xf8\x01\x99\xb3\x9a\x6b\x82\xae\x15\x05\x5a\x9f\x39\x27\x1f\x92\x14\x9e\x8d" +
			"\x71\x66\x73\xe4\x68\x6a\xd0\x40\xe3\x27\xb3\x85\x9d\x14\x30\xdb\x51\xf9\x7d\x27\xd4\x7c\x72\xa4" +
			"\xce\x54\xc5\x95\x66\x03\xb8\x97\x96\xb8\x9f\x26\x1b\x8d\x03\xbd\xcd\x3c\x96\xf8\x8d\x8f\xab\xf4" +
			"\x30\xe5\xed\x72\x5c\x5e\x03\x17\x7c\x8d\x5c\xdf\x46\xb6\xa5\x0f\x4b\x90\x93\x0b\x15\x0d\xd9\xf9" +
			"\x33\x36\xce\x72\x09\x3f\x13\xe1\xb6\x73\xb0\xfb\xaa\xa5\x1a\xc3\x5e\x1f\xa0\x46\x22\xb7\x4d\x79" +
			"\x1c\xfa\x8e\xa8\x8c\xde\xba\xb0\x43\x0e\x72\xaf\xe3\x41\x73\x4f\x19\x82\x41\x52\xe3\xd2\x3e\x96" +
			"\x52\x8c\xcd\xed\xd1\x28\x55\x81\xdc\x07\xdc\x01\xdc\x25\xb5\x26\xe2\xf6\xd1\xbe\x88\xba\x67\x18" +
			"\x1c\xb8\xc1\x54\xe9\x55\xcf\xe8\xbc\x1f\x2c\x88\xb5\xee\x29\x28\xb4\xd1\x62\x11\x54\xf3\x82\xcc" +
			"\x1f\xef\x3e\xe7\xb7\x82\x9a\xc8\x2f\x3e\xdb\xbd\x2a\x74\xe4\x56\xa7\x2d\x32\xb7\x15\xcf\x57\x27" +
			"\x0f\xfe\xd5\xea\xb5\x68\xb9\x1c\xbc\x66\x39\xb6\xc5\xe5\x9e\x99\x94\xcc\x9f\xf1\x70\xbf\x0a\x18" +
			"\x70\xab\xe4\x1b\xcc\x0b\x61\x8c\x44\x93\x98\xdc\x13\xd2\xf4\x27\x67\x75\xd6\x3e\x0b\xdb\xc1\xa9" +
			"\x0f\xf7\x9c\x47\xf6\x34\xf1\x81\xb9\xd5\x02\xd8\x5a\xfc\x4e\x81\xec\x84\x7b\xc1\xa0\xfb\x52\x25" +
			"\xb6\x48\x9d\xa6\xe9\xca\xb0\x5d\xfe\x49\x2a\x69\x9b\x24\x8d\x7c\xa6\xa5\xfa\x8a\x85\x07\x26\x5c" +
			"\xff\xc2\x9b\x40\xfb\xd3\x8b\x27\xb2\x2c\xe7\x1d\xe0\x36\x62\x2d\x55\x1d\x2d\x16\xc4\x59\xdc\x8a" +
			"\x0d\x26\x5b\xd1\xfd\xee\xa7\xc5\x1f\xd3\xd0\xe0\x6c\x87\x4c\xdb\x2e\x9f\x52\x7b\xed\x6c\x25\xb6" +
			"\x3b\x6e\xe9\x53\xbf\x1f\x70\x4f\x37\xa2\x73\xf9\x7d\x83\x3e\xa6\x96\xc6\x9c\xce\x6f\x20\x2e\x30" +
			"\x6f\xe6\x32\x03\xbd\x61\xcb\xf4\x7b\xac\xe9\x83\x83\xb1\xf9\xe0\x59\xf1\x1f\x3f\x31\xf3\x69\x7e" +
			"\x0a\x7c\xf3\x7c\xf8\xb9\x2c\xc7\xbf\x5e\x2b\xca\x82\xb1\x74\xbc\xb9\xdc\x49\x62\xbb\xfc\xb3\xae" +
			"\x79\x37\x50\x12\x87\xb4\xfd\xd7\x60\x81\x72\x87\x65\x9c\xbe\x79\xec\xbd\x29\x53\xb9\x22\x05\x19" +
			"\x7f\x63\x28\x1c\x2e\x68\xff\x12\xbc\xc1\x43\x5e\x0f\x0e\x0d\x66\x9e\x5a\xdb\xa5\xbe\xc8\x8f\x96" +
			"\x47\x91\x2f\xcf\xb4\x30\xad\x86\x56\x1c\x78\x36\xfa\x35\x59\x08\x05\x5b\x5d\xca\xea\x00\x92\x38" +
			"\x98\x69\x53\xc4\xf1\xd1\xfe\x6a\x5a\x2a\x6c\xd3\xef\x0f\xcf\xca\xe0\xc5\x1e\xc9\xe0\x9d\xd7\xe1" +
			"\xb0\x66\xcd\xc0\xba\xde\xbd\x75\x92\xf8\x44\x38\xc6\x39\x8c\xff\xfd\xfd\xe3\x47\x07\x84\xd3\xa7" +
			"\xe7\x30\x64\x63\xba\xf9\x1f\x24\xae\xf5\x6e\x90\x1a\x5d\xe6\xf7\xc8\xe0\xca\xc0\xe4\x9e\x90\x8e" +
			"\x6f\x38\x35\xff\x96\xea\xf8\xe2\x84\x7a\x77\x7b\xe1\xce\x37\x73\xa9\xfa\x6d\x3a\xd7\xfb\x68\xda" +
			"\x99\xd2\x71\xce\xb8\x70\x5e\x17\x72\x92\xba\x77\x81\x5c\xe8\x12\x27\xe1\x5e\x2a\xfa\xdb\x8f\x89" +
			"\x35\x43\xb8\xb0\xd2\xf1\x9e\x3f\x92\xe0\x9f\x2b\xf8\xc7\xc7\x8f\x01\x9d\x4e\x9b\xbb\x60\x8f\x4e" +
			"\x9b\x1e\x27\xbc\x71\x59\x7f\xd5\x83\x5f\x2b\x61\xb6\xce\x87\x6e\x8b\x7c\x07\x91\x39\xf0\xe5\xe2" +
			"\x06\xba\x2b\xea\x62\x1a\x17\xae\x47\x7c\xe5\xbe\xe3\x0c\x70\xbe\xea\x0d\xbc\x7b\x37\x1a\x98\xcf" +
			"\x33\x06\xf1\x3d\xd2\x97\x0e\x8d\x20\xa9\x95\x3b\x50\xce\x8e\xa3\xcc\x77\x88\x9f\x39\xf3\x5b\xd9" +
			"\x1a\xbe\x96\x1d\x92\x46\xd8\x7a\x8f\xd2\xf1\x82\xfe\x7f\x00\x00\x00\xff\xff",
		size: 3827,
		mode: 0664,
		time: time.Unix(1490986499, 479020008),
	},
}

// AssetAndInfo loads and returns the asset and asset info for the
// given name. It returns an error if the asset could not be found
// or could not be loaded.
func AssetAndInfo(name string) ([]byte, os.FileInfo, error) {
	a, ok := _bindata[filepath.ToSlash(name)]
	if !ok {
		return nil, nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
	}

	a.once.Do(func() {
		fr := flate.NewReader(strings.NewReader(a.data))

		var buf bytes.Buffer
		if _, a.err = io.Copy(&buf, fr); a.err != nil {
			return
		}

		if a.err = fr.Close(); a.err == nil {
			a.bytes = buf.Bytes()
		}
	})
	if a.err != nil {
		return nil, nil, &os.PathError{Op: "read", Path: name, Err: a.err}
	}

	return a.bytes, a, nil
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	a, ok := _bindata[filepath.ToSlash(name)]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
	}

	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	data, _, err := AssetAndInfo(name)
	return data, err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}

	return names
}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	return restore.Asset(dir, name, AssetAndInfo)
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	return restore.Assets(dir, name, AssetDir, AssetAndInfo)
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree

	if name != "" {
		var ok bool
		for _, p := range strings.Split(filepath.ToSlash(name), "/") {
			if node, ok = node[p]; !ok {
				return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
			}
		}
	}

	if len(node) == 0 {
		return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
	}

	rv := make([]string, 0, len(node))
	for name := range node {
		rv = append(rv, name)
	}

	return rv, nil
}

type bintree map[string]bintree

var _bintree = bintree{
	"..": bintree{
		"_hardcoded": bintree{
			"doer.go":       bintree{},
			"middleware.go": bintree{},
		},
	},
}
