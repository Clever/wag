// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../_hardcoded/doer.go (10.38kB)
// ../_hardcoded/middleware.go (1.683kB)
// ../_hardcoded/tracing.go (6.966kB)

package hardcoded

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __hardcodedDoerGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x3a\x7f\x6f\x1b\x37\xb2\x7f\x4b\x9f\x62\x22\xe0\x2e\xbb\x8e\xbc\x92\x73\xe7\xf4\xa0\x3e\x1f\xd0\xda\xee\x6b\xf1\xd2\x24\xa8\xdc\xd7\x00\x41\x70\xa5\x76\x47\x12\x6b\x8a\x54\x48\xae\x64\xc1\xe7\xef\xfe\x30\x43\xee\x6a\x57\x5a\x3b\xb9\x6b\xf1\xf0\x9e\xff\x90\xb4\xcb\x99\xe1\xcc\x70\x7e\xd3\x6b\x91\xdf\x8a\x05\x42\xae\x24\x6a\xdf\xef\xcb\xd5\xda\x58\x0f\x49\xbf\x37\x98\xed\x3c\xba\x41\xbf\x37\xc8\x8d\xf6\x78\xe7\xe9\x27\xea\xdc\x14\x52\x2f\x46\xbf\x39\xa3\xf9\x85\xb5\xc6\x32\x94\x34\x23\x69\x4a\x2f\x15\x3d\x28\xb3\xa0\xaf\x95\xf0\xcb\x91\x15\xba\xa0\x07\x8d\x3e\x7e\x8d\x96\xde\xaf\xe9\xb7\xdb\xe9\x9c\xbe\xbd\x5c\xe1\xa0\xdf\xef\x0d\x16\xd2\x2f\xcb\x59\x96\x9b\xd5\x48\xcc\xf1\x6e\xb4\xdc\x39\x6f\xe5\xdd\xe9\xc2\x54\x3f\x07\x6d\xa8\xc2\x68\xb3\x11\x7a\x29\x0b\x1c\xe1\x06\xb5\x77\xa6\xb4\x39\x0e\xfa\x3d\x65\x16\x0b\xb4\x30\x58\x98\xf5\xed\x22\x93\x7a\x74\xa9\x70\x83\x76\x74\x2b\x76\x1b\xc4\xd3\x85\xc9\x36\xaf\x46\x01\x68\xd0\x4f\xfb\xfd\xd1\x08\x0a\x83\x16\xa4\x03\xa1\x41\x6a\x8f\x76\x2e\x72\x84\xb9\xb1\x30\x28\x8c\xd4\x8b\x01\x10\xdf\x60\xf1\x53\x89\xce\x3b\x58\x1b\xe7\xe4\x4c\xed\x60\x2b\xfd\x12\xb6\x56\xac\xd7\x52\x2f\xfa\x7e\xb7\xc6\x48\xaa\x26\x72\xdf\xef\x5d\x99\x24\x87\x13\xa2\x90\x5d\xb2\xb2\x87\x60\xe3\xf3\x4f\x81\x62\x0a\x49\xf5\xec\xd6\x46\x3b\x1c\x02\xab\x37\xed\x3f\xf4\x03\x55\xb3\x7e\x23\x56\x78\xe9\xef\xc0\x79\x5b\xe6\xfe\xfe\x81\xf9\x9e\x09\x87\x91\xc6\xf7\x42\x17\x0a\x2d\xac\xd1\xce\x8d\x5d\x39\xf0\x4b\xe4\xf5\x16\xef\x81\x1a\xbd\xbe\x22\x3e\xf7\xc4\xe6\xa5\xce\x21\x29\xea\xa5\x14\x7e\x07\xdb\x24\xb5\x45\x5f\x5a\x0d\x79\x76\x65\x12\x9b\xf6\x7b\xa3\x11\x54\xaf\xfc\x1d\x63\xd1\x42\x76\x19\x4c\x2c\x49\x87\x90\x0f\x21\x48\x1c\x40\xed\xae\x12\x89\x1e\x24\x3a\x38\x1f\xbf\x6f\x1f\x44\x90\x86\x61\x1b\xe2\xd0\xee\x05\xec\xff\xe8\x44\x98\x1f\xbb\x7b\x67\x94\xcc\x77\xf0\xd3\xfe\x77\xdc\xaf\xf1\x06\x0a\x9c\x4b\x8d\x0e\x44\xa0\x0c\x6b\x7e\x9d\x85\xcd\x9a\x80\xad\x53\x1e\x8d\xe0\x5b\x91\xdf\x9a\xf9\xdc\x45\x41\xc3\x11\xe8\x72\x35\x43\x0b\x42\x17\xe0\xe5\x4a\xea\x05\x98\x79\x24\x2c\xbc\xc7\xd5\xda\xbb\xac\xdf\xab\x50\x93\x14\x3e\x7c\x24\xa7\xc8\xae\x4a\x2b\xbc\x34\x9a\x29\xf3\xae\x60\x31\x47\xb9\xc1\x40\xb7\xa9\x88\x21\x08\x07\x5b\x54\x8a\xbe\x69\xd1\xa2\x2b\x95\x07\x33\x67\xec\xca\xf1\xe2\x39\x3e\x77\xf0\xeb\x95\xf9\x15\x56\xe8\x97\xa6\xc8\xfa\x3d\xa6\x9e\xb4\x8e\x76\x08\x8f\x9c\xec\xcc\x18\x15\x75\x36\x95\x7a\xa1\xf0\x29\xcd\xf9\xa5\xf0\xf5\xe9\x89\x8a\x5b\x30\x3a\xc7\xa0\xcd\x63\x12\x2d\xf3\xee\x50\xa8\xf0\xb0\x33\x25\xb8\xa5\x29\x55\x51\x6f\x83\x35\xed\x33\x87\xb9\xd1\x05\x88\xb9\x27\x3f\xf4\x30\x17\x52\xb9\x2c\xda\xf7\xd1\x7e\x29\x3c\xae\xf9\x86\x15\x1f\xac\xdc\x9f\xc1\x09\xf0\x9b\x29\xef\xf6\xd0\xb4\x22\xd8\x4a\xa5\x22\x67\xda\xe8\xd3\x77\x6f\xa7\x37\xc3\xf0\xeb\x9b\x9b\xcb\xef\xf7\x51\x84\x85\x39\x7f\xff\x3e\x23\xd4\x9b\xb7\x57\x6f\x27\xf0\x83\x27\x6b\x75\xa0\x8d\x87\xbc\xb4\x16\xb5\x57\xbb\xca\x5a\xf4\x2e\x1c\x42\xa5\x0e\x2c\x60\xb6\x7b\xe4\x70\x9f\x10\x38\x9c\xb6\xc5\x4f\x70\x70\xe2\x16\xdd\xba\xeb\xd8\x9b\x47\x4f\x3a\x91\x73\x7e\xfb\xec\x02\xb4\x54\xf0\xcf\x7f\x92\x44\xd9\x8f\x6c\x4c\x70\x71\x01\x03\x12\x78\xd0\xf5\x9e\xc4\xa7\x85\x7e\xaf\x47\x7b\x65\x53\x2f\x7c\xe9\x2e\x4d\x81\xf0\x1f\x70\x3e\x1e\x13\xf1\x4a\xe3\x73\xa1\x1c\xf6\x7b\x0f\xf5\x11\x78\x5b\x62\x54\xf3\xf5\xdd\xda\x68\xd4\x5e\x0a\xd5\x69\x7d\x1a\x70\x0f\xd1\x72\xe2\x60\x75\x8f\xe0\x3f\x6d\x7a\x73\xb9\xa1\xc0\x19\xdf\x72\xe0\x6f\xec\xa2\x28\x1a\xe4\x16\x85\x23\x0f\xdf\x0a\xe9\xd9\x3e\x1c\x07\x69\xf4\x5b\x44\x5d\x1f\xfc\x04\xce\xc6\xe3\x21\xbc\xa4\x8f\xbf\xd2\xc7\xdf\xe8\x83\x02\xc4\xd9\xab\xf1\x18\x56\x52\x29\x19\xac\xd8\xc1\x8b\xd1\x29\x94\x6b\xf0\x06\xce\xff\x04\xbf\x49\xef\xd1\x56\x47\xdb\x2d\xc5\x17\x18\x34\x4c\x2e\x60\x25\x6e\x31\x39\x58\x1e\xc2\x79\xda\xef\x69\xbc\x63\x88\xb3\xf1\xb8\x32\xf2\x1f\xf7\x1c\xf5\x7b\x56\x17\xb4\x4c\xb9\x3d\x7b\x83\xdb\xa4\xfa\x31\xe5\xf4\x9b\x30\xc2\x1b\xb3\x4d\xd2\xec\x67\x2d\xef\xde\x08\x6d\x92\x34\x4d\xfb\x3d\x24\xac\x71\x36\x3e\x87\xd1\x88\xc5\x3a\xa7\x54\x95\xa3\xf6\x51\xae\x7e\x8f\x12\xae\x8c\xc4\x17\x1c\xd7\x2b\x8b\xf8\x20\x3f\xc2\x05\x30\x6b\x2f\xa0\xc5\x74\x92\x24\x56\x17\xd9\x77\xca\x08\xff\xea\xaf\x49\x7a\xf2\x32\x3d\x3d\x4b\x4f\xf0\x64\x1e\xdf\x10\x12\xed\x1f\x04\x3b\xb9\x80\x97\x4d\xab\xb2\xe8\xff\xcf\xfa\xee\x63\x07\xfc\xff\xdf\x81\xdf\x98\xee\xac\x11\x9c\x94\x12\xa4\xa6\x8a\x2d\x28\x8f\x1c\xaa\xce\x1d\x31\x0b\xb7\x09\x3c\xed\xb8\x14\x0e\x56\x6b\xbf\x03\xa7\x64\x8e\x95\x72\x5b\x14\xfe\xcd\x2c\xd0\x0e\xfb\x42\x6d\xc5\xae\x11\x2f\x48\xfe\x47\x76\xfb\x57\x13\x6e\x83\x87\xa0\xd6\xaa\x2c\x64\x05\xc5\x12\xaa\xad\x86\x5f\xa4\x5f\x36\x75\x54\x6b\x03\x34\x6e\x21\x16\xf6\xc1\x8c\xcd\x06\xad\x95\x45\xac\x2b\x42\x3f\x00\x66\xf6\x1b\xe6\xfe\xb9\xab\x8b\xb1\xba\x0c\x62\x89\x0e\xc8\x27\xb9\xbf\xab\x88\x56\x25\xdd\x10\x1e\x29\xb9\xd2\x43\xc8\x66\xb9\x18\x57\x88\xfe\x7f\x0b\x55\x22\x51\x1e\xb6\xe4\xbc\x7f\x68\x51\xe6\x8a\xb1\xaa\x5e\x4f\xea\x5a\xf0\x8f\xa8\x5f\xab\x2d\x86\x60\x6e\x39\x2c\xed\xab\xd5\x2c\x30\xd7\xe6\x2b\xcd\x92\xa6\x98\xec\x68\xcf\xcc\x6d\xe5\x15\xb5\x2e\x2e\xa0\xc8\x1a\xcf\xec\x24\x75\x66\xa1\x7d\xf6\x6b\xd9\xde\x30\xfb\xbd\x8d\xb0\x5d\x3e\x1e\x16\x6a\x3f\xef\x73\xcd\x37\x15\x1b\x6c\x15\x46\x33\x53\x50\x8e\x82\x9c\x5a\x82\x2d\xc2\x92\x01\x4c\xd8\x2c\x83\xb7\x7e\x89\x76\x2b\xc3\x1a\x47\x41\x06\x10\xca\xa2\x28\xc8\x7c\x44\xc1\x74\xb9\xab\x28\xe7\x73\xb4\x60\x74\x1d\xdd\x8a\xd6\x56\x8c\x4e\x75\x57\x06\x53\x44\x46\x23\x86\x27\xa3\x91\xf3\x24\xce\x06\xed\x5c\x99\x2d\xb7\x71\x8c\x21\x8d\x76\xa3\x97\x7f\x19\x7f\x35\xfe\xdb\x57\xaf\x46\xb4\x97\xd4\x8b\x53\xe2\xf8\xd4\xcc\x4f\x09\xf7\x34\xd2\x3e\xa5\xc4\x6b\x4a\x7f\xba\x32\x85\x9c\x53\x6c\xa8\x57\x9c\x17\x3e\xea\x62\x56\xce\xe1\xc3\x47\x6a\x63\xf9\x0c\x6c\xf6\x2d\x09\x1f\xe3\x1d\x9d\x46\x5b\x61\xbd\xde\xac\x9c\x87\x48\x79\x01\xa1\x95\xcd\x7e\x42\x51\x7c\xa3\x54\x12\x70\x29\x7f\xb4\xa3\x26\x51\xa9\x8c\x56\x4b\xc5\xd8\xfd\x1e\x9d\xe4\x43\x3f\x64\xb2\xaa\xee\xa5\xb4\xf7\x35\x47\xbf\xaf\xab\x77\x2f\x5e\x30\x7e\x27\x6b\x3d\x5b\x58\xc2\x89\x7c\xbc\x31\xeb\x4b\x65\x1c\xda\x84\xbb\x72\xca\xb4\xdf\xb2\xfa\x93\x59\x39\xe7\xbc\xd6\x8b\x34\x2e\xc0\x16\x91\x05\x8e\xce\x95\x40\x45\x56\x50\xab\x15\xba\xab\xb0\x69\xe4\xec\xe2\x02\x14\xea\xa4\x32\xbd\x94\x42\xfe\xb3\xa6\xf1\xc5\x4c\x13\x32\x0b\xd3\x4b\x03\x8f\x33\x8b\xe2\x36\xee\x35\x1a\x01\x73\x58\x35\x1e\x6c\x93\xd1\xdc\xe6\xfb\x17\x32\x64\x46\x2d\x55\xc5\x84\x5b\x1f\x28\xd3\xad\x59\x92\x8c\xc9\x91\xc1\x33\xfd\x50\x67\x2b\xc4\x75\xcd\xe9\x87\x28\xc1\xc7\xb4\x9d\xcb\x23\x93\x31\x2c\xe7\xd2\xe6\xa5\xf4\xdf\x12\xaf\x68\xb9\x41\x94\xab\xb5\xc2\x15\x6a\x1f\x63\x5d\x80\x80\x59\x00\x81\x35\x75\x64\x56\x73\x52\x9f\xa2\x87\x02\x67\xe5\x82\x9c\x84\x4e\x8f\xbe\xcd\x1a\xad\xf0\xd8\x42\x96\x1a\x04\xac\x28\x07\x6e\x97\x68\x91\x7a\x0e\x76\x00\xa3\xd5\x0e\x94\x59\x34\x58\x01\xb6\xd1\x50\xeb\x31\x0c\x69\x64\xa6\x4c\x7e\xcb\x15\x42\x5d\x5d\xcc\xad\x59\xc1\xc2\x50\xe6\xf3\x4b\x6b\xca\xc5\x32\xe6\xbd\x0e\x91\x9e\xea\x79\x03\xff\xe1\x8f\x1b\xb7\x5e\x24\xf0\x46\xac\x90\x30\xa5\x5e\xd4\xf3\x12\xfe\x0b\xbf\xb3\xff\xe2\x51\xc9\x6b\x7e\x20\x6d\x92\xbf\x44\xd4\xe9\xf4\xfa\xad\xce\x11\xdc\x4e\xe7\x19\xfd\x62\x5d\x7f\x1f\x66\x34\xd3\xe9\xf5\xf5\x86\xd2\x87\x74\x80\x2b\x2a\xeb\xb8\xce\xd9\x0f\x73\x60\x23\x05\x38\xb4\x1b\xb4\xa7\x8e\x00\xc3\xe8\x26\xe3\xea\x09\x5d\x6e\xe5\x2c\x14\xcd\xa4\x61\xd6\x16\x55\x03\xa2\xda\x3c\xaa\xe1\x70\xb7\xbd\x0e\x6e\x68\xf9\x89\xbf\x20\x33\xfc\xfa\x9b\x33\x7a\x32\x20\x62\x83\x5f\xfb\x3d\x56\xc7\x17\x63\x69\xb1\x62\xac\x98\x45\x2e\x4d\xa9\x7d\x17\x96\x0c\xaf\x23\x96\x6d\x40\x13\xf6\x35\x85\x9e\x47\x71\x0f\xb1\xb1\x86\xae\x71\xdf\x85\xea\x59\x2c\x8e\x59\xef\xc0\xdd\x43\x13\x81\x1f\xdc\x65\xcb\x92\xde\xae\x51\x37\x09\x70\xd1\x51\x13\x90\x1d\xd0\xac\x00\xa3\x94\xd4\x0b\x66\xeb\x3b\x21\x55\x69\xf1\x29\x05\x1c\x43\x1f\x13\x51\x8a\x7c\xbc\x49\xec\x29\x22\x2d\xe8\xc7\x88\x4d\xcb\x3c\x47\xe7\xbe\x90\x58\x84\x3e\x24\x36\x5d\x1a\xeb\xa3\x16\xb0\xf8\x9c\x78\x6d\xe8\x23\x5a\x0d\x86\x3e\xaf\xaa\x47\x18\xba\x59\x52\x9a\x7c\x67\x8c\xfa\x09\xa9\x52\x23\xa6\x1e\x27\x72\x0c\x7d\x44\x4f\xae\xd0\x94\xfe\x0b\x99\x8a\xd0\x44\xe4\x32\xb4\x3a\x97\x46\xc7\xa6\xe7\xfa\x0e\xf3\x92\x52\x7a\x30\xee\x36\x91\xfc\x69\x68\x22\xf8\x5a\x78\xd4\xf9\xee\xc6\x78\xa1\x7e\x44\xa1\x9f\x36\x6e\xd5\x80\xfe\xc7\x0a\x05\x19\x66\x55\x10\x2a\xb3\xe0\xf8\x90\xa8\xae\xb8\x36\x84\xa3\x40\xc2\xd9\x4d\x65\x3f\xe8\xb9\xb9\x4a\x30\xa3\xb0\x30\x84\x95\x58\x7f\x08\x01\xe0\x63\x3d\xf0\xbb\x7f\xa0\x94\xd5\xf6\xe9\x49\x97\x17\x63\xd6\x8c\x12\x43\x42\x6a\xb8\x72\x27\x0a\x21\xed\x83\xc3\x1e\xa5\xe1\xc1\xc7\x78\x11\x65\x0f\xc3\x78\x9d\x8e\x3b\x69\xe3\x75\x85\x02\x46\xee\xf2\xd7\xc9\xa1\x70\xc7\x30\x1d\xb8\x6d\x37\x9d\x74\xe2\xb6\x60\x1e\xa5\x51\x39\xc3\x53\x34\x22\xcc\x11\x8d\x03\xa7\x9c\x74\xc9\xd0\x86\x39\x26\xd1\xda\xbe\x5b\x0d\x8f\x6d\xdf\xe1\x82\x93\x43\xdc\x63\x98\x63\x32\xd1\xf3\x9e\x62\x21\xc2\x30\xee\xe7\x1c\x6e\x02\x98\x7d\xc6\x85\x99\x8e\x3a\xf0\xca\x63\x1b\xc4\xec\xd0\x73\x87\xfd\xde\x43\xda\x6f\xf5\x67\xc7\x05\x4c\x0a\x52\x4b\x9f\xa4\x71\x86\xfe\x0e\xad\x34\x85\xcc\x79\xa4\xa6\xcc\x22\x0c\xd9\xb5\x50\xed\x1a\x8a\x8a\x31\xe1\x9c\x74\x5c\x7f\x39\xf4\x9e\x4b\x99\x46\xa9\xe5\x97\x16\xdd\xd2\xa8\xc2\x71\xb9\x55\xea\x02\xad\xf3\x42\x17\x3c\x4f\x58\xaf\x95\xcc\x43\x7f\x3f\xc3\xa5\xd8\x48\x63\x33\x46\xff\x59\xcf\x8d\xf5\xa5\x16\x1e\xd5\x6e\xd8\xac\x5c\x0a\x83\x4e\x3f\xf7\xb1\x2f\x82\x85\x45\xe1\x61\x2b\x76\xc4\x0a\xde\xad\x43\x05\x2c\x1d\x53\x29\x84\x17\x43\x70\x86\x9a\x29\x8b\xce\x58\xcf\x55\x64\x69\x35\x5f\x00\x68\x90\xde\x81\x2b\xd7\x7c\xe5\x46\xcd\xc2\xcc\x1a\x51\xe4\xc2\x1d\x89\xb1\xa2\x4a\x37\x77\x5c\x37\xf1\xc8\xff\xb8\x78\x82\x64\x3a\xbd\x4e\x03\xfb\x53\x0c\x37\x03\x6e\x32\x1a\x3d\x71\xa5\x26\x9d\x2b\xd1\x8d\xce\x5f\x65\x75\x49\x18\xeb\x3a\x6a\x15\xe8\xb4\xc2\x81\xf4\x22\xce\xd4\x5b\x14\xab\xea\x3e\x66\x72\x51\xe9\x85\x07\x7f\xcd\x35\xae\xda\xbb\x90\xb2\xa9\x17\xd6\xf3\xb2\x92\xce\xa3\xe6\x00\x6c\x99\x98\x46\x9f\xbd\xe6\x97\xc9\xc0\xe7\xeb\xc1\x10\x06\x67\x2f\xbf\xca\xc6\xd9\x38\x3b\x9b\x8c\x07\x8f\x34\x5f\x6b\xa1\x65\x9e\x50\x4f\xc2\x8d\x42\xbf\xd7\x5b\x18\x96\x3d\x9b\x92\x8a\x92\xfd\x36\x5d\xfc\xa4\x01\xbe\x21\x2a\xa9\xef\x17\x64\x9b\xc3\x0d\xda\x1d\x9c\x8d\xa1\x1a\xc3\xce\x30\x17\x65\x6c\x71\x88\x1a\x5a\x79\x57\x1f\x8d\xb0\x48\x47\x2a\xe0\x6c\x7c\x5a\x4d\x49\x99\x5a\xf4\x5b\xd8\x4a\x5d\x98\x6d\x06\x37\x4b\xe9\x40\xa1\x7f\xee\xa0\xa4\xe3\x5f\xf1\x68\xb7\x8b\xa4\x37\xb0\x40\xbe\xbb\xb0\x6a\x17\xa9\x89\x3c\x2f\x43\xf3\x41\xfe\x15\xef\x95\x1c\x24\xda\x70\x43\x22\x3c\x9b\x1f\x48\x36\xd2\x35\xda\x39\xe6\xbe\x66\xdc\x94\x36\x5e\x3f\x45\x6a\x95\x35\x47\x40\xb5\x83\x95\xf0\xf9\xb2\x66\xe5\xb9\x8b\x6d\x0a\x82\x50\xce\xb0\x5a\xb6\x4b\xd4\x5d\x7d\x53\x24\xe9\x78\x1a\x08\xf9\x52\xe8\x05\x3a\x6e\x4d\x95\x59\x7c\xc7\x49\x52\xe7\xbb\x30\x54\x6e\x5f\x9c\x30\x8c\x70\x9e\xb3\xef\x14\x51\x87\xd9\x74\x9d\x70\x0f\xf2\xf3\xfd\x43\x0b\xe1\xb5\x59\x50\xa8\x3b\xc0\x61\xf2\xf4\xfe\x9e\x8d\x82\x7b\xf1\x7f\x40\x35\x54\x8e\xab\xf9\x6d\x72\x70\x87\x93\xc2\x3d\xd4\xb3\x2e\xa9\x79\x28\x29\x29\x08\x10\x8d\x5e\x69\x15\x6d\x33\x88\x73\x8c\x01\xbc\x80\xca\xbe\xb2\x6f\x8a\xc2\x26\x69\x36\xe5\xed\xd9\xc2\xa9\x99\xfd\x54\x9b\x37\xdb\xe4\x1b\xdc\xc6\x4a\x20\x19\xfc\xe7\xf5\xcd\x60\x08\xa5\x55\x43\xb2\xe6\x80\xd0\x61\xe0\xac\xbe\xec\x9d\x95\xda\xcf\x93\x50\x03\x40\x6e\xb4\xc6\xdc\x73\x67\x68\xea\x73\x98\x4e\xaf\xa9\x47\x41\xb1\x9a\xc0\x9f\xdc\x20\x74\xea\x81\x44\x6e\xb4\x97\xba\x44\x7e\x62\xf5\xf5\x02\x64\xcd\x5e\xe3\xf2\x3c\x9b\x96\xb3\xd0\x83\xfd\x22\xfd\x32\x19\x0c\x86\xf0\xe7\xc6\x00\x2d\x4c\xde\x3e\xfd\xaf\x33\x4c\x27\x88\x9b\xfd\xc5\x40\xc0\xcc\xae\x43\xf4\x8b\x5b\xf3\x48\xe7\xb0\xa0\x0b\x4b\x91\xd5\xc9\x05\x50\xcd\x98\xfd\xac\x57\xc2\xba\xa5\x50\x49\x98\x11\x25\xb8\xc9\xae\x84\x17\x49\x9a\x0e\xe1\xcf\x98\x7e\xdd\x21\x58\x9b\xad\xc8\x17\x13\xce\xb8\xe5\x7c\x76\x01\x83\xb8\xf7\xa5\x59\xad\x84\x2e\x06\x8f\xa2\x86\xef\xd1\x08\x6e\x4c\x21\x76\xec\x61\x16\x21\xa7\x7c\x12\x66\xdd\x41\x3e\x08\x62\x53\x24\x8a\x33\x59\x72\x43\xf4\xae\x9e\x2c\x54\xf1\x9f\x00\x43\xea\x89\x84\xab\x6e\x19\x7e\xd0\xfc\x2f\x0d\x05\x0a\x05\x5b\x63\x15\xfb\x33\xa3\xf3\x76\x94\xc7\x1c\xdf\x10\x56\x7b\x92\xcb\xaf\x85\x73\x20\x43\xc6\xaa\x07\xc2\x59\x4d\xfc\x35\xb1\xb0\x35\xd6\xee\x40\xcc\xa8\x65\x28\xe2\xa0\x42\xba\x10\x21\xb6\xb8\x9f\xb3\x30\x31\x5a\xce\x0f\x8a\x4c\x9e\xf9\xd5\x34\xbd\x81\x42\x3a\x31\x53\x18\x67\x2e\x2b\x53\x60\x43\xc7\xdc\xa0\x3f\xbb\x80\x22\x6b\x0e\x30\x9e\x56\x30\x85\x09\x0a\x29\xd5\xf4\xb6\x15\x67\x3e\x04\x9a\x1f\xf7\xa0\x47\x4b\x70\x01\xb8\x3f\x2b\x52\x77\x33\xf4\x85\x2a\x44\xce\x41\x52\x38\x47\xe9\x97\x21\x0e\x32\x70\x72\x96\x32\xf0\x5c\x5a\x17\xb3\x34\x6c\xf1\xf9\x06\xc1\x51\x8c\x0b\xe7\xb5\xa7\x65\x1a\x98\x2f\xd3\xf6\x12\x35\xe6\x61\xaf\xa5\xa8\x62\x6b\xd1\xc2\xf8\x4b\xda\xcc\x54\x5c\x9d\x90\xd2\xb1\xa0\xa3\xcd\x79\x9e\xcb\xdd\x4f\x01\xce\xac\xd0\x2f\xe9\x34\x0e\x38\xa8\x35\x5d\x4d\xab\x7b\x1d\x61\xb6\xa1\x97\xfd\x25\x5f\x05\x5b\x75\x5a\x45\xa6\xaa\xe6\x2a\xfd\x8c\xe7\x54\xe7\xd3\xd9\x81\xd0\x61\x77\xf7\x26\x7f\x34\x7f\x0f\x80\xca\xf1\x49\x36\xae\x2e\xa7\xe5\x2c\x79\x8c\x7e\x0a\x7f\x87\x56\x5e\xfb\xa3\x19\xda\x47\x3e\xfa\x78\x20\x9c\x87\xf4\xb3\x55\xf4\xef\xbc\xee\x90\x73\x28\xb2\xe0\x7b\xf7\xad\x01\xf2\xe4\x68\x82\x5c\xd5\x7e\x57\x26\x69\xf9\xe3\xb0\xaa\xa6\x42\xe4\x67\xb5\x74\x65\x89\x38\xae\x0d\x03\xf3\x20\x68\x9c\x07\x37\x2f\x14\xff\x7e\x51\xdf\x28\xf6\xc2\x3f\xb1\x60\x11\xef\x2b\x08\x5b\xe8\xb8\x0d\x4f\x67\x25\x4f\x30\x9b\x4e\x13\x2b\x9d\xc6\x66\xc6\xf2\xf4\x3c\x19\x9c\xbf\x7f\xcf\x35\x65\xd8\xba\xc5\xcd\x43\x9d\x91\x8f\x66\xca\x1c\x57\xbe\xf0\x06\xa6\x17\x26\xef\xff\x82\xa2\x9e\x1e\xd8\x3f\x72\xef\x50\x5f\x39\x7c\x4e\x7f\xff\xb6\xfa\x9e\xd0\xde\x43\xbf\xcd\x47\x50\x1d\x8c\x4e\x40\x1b\x98\xc7\x5e\x9c\x05\x0d\xff\x5b\xb0\x43\x0f\x27\xa3\xb4\x73\x5a\xff\x3f\x01\x00\x00\xff\xff\xf9\x92\x58\x00\x8c\x28\x00\x00")

func _hardcodedDoerGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedDoerGo,
		"../_hardcoded/doer.go",
	)
}

func _hardcodedDoerGo() (*asset, error) {
	bytes, err := _hardcodedDoerGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/doer.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x67, 0x40, 0x30, 0xf6, 0x1d, 0xf8, 0x4a, 0x93, 0x70, 0x27, 0x31, 0x1b, 0xd8, 0x2e, 0xf4, 0x23, 0xf7, 0x20, 0x69, 0x6, 0x68, 0x99, 0x67, 0x51, 0x9c, 0xbf, 0x32, 0xc9, 0xe4, 0x1a, 0x1c, 0x29}}
	return a, nil
}

var __hardcodedMiddlewareGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\xcd\x6e\xe3\x36\x10\x3e\x5b\x4f\x31\x65\x11\x84\x5a\x38\xf2\x1e\x8a\x1e\x02\xf8\x50\xa4\x9b\xe6\xb2\xc0\x62\x13\xb4\x05\x8a\x02\xcb\x50\x23\x89\xb0\x4c\xaa\xc3\x91\x55\x23\xf0\xbb\x17\x43\x49\x4e\x14\xa4\xe9\xa9\x07\xcb\xe4\xcc\x7c\xdf\xfc\xb3\x33\x76\x67\x6a\x84\x88\x74\x40\xca\x32\xb7\xef\x02\x31\xe8\x6c\xa5\xaa\x3d\xab\x6c\xa5\x3c\xf2\xa6\x61\xee\xe4\x4c\xbd\x67\xb7\xc7\x4d\x89\x8f\x7d\xad\xb2\x6c\xa5\xea\xd0\xed\xea\xc2\xf9\xcd\x4d\x8b\x07\xa4\xcd\xce\x1c\x0f\x88\x57\x75\x28\x0e\x3f\x6e\xda\x50\xd7\x48\x2a\xcb\xb3\x6c\xb3\x81\x2f\xc6\x3b\xfb\xd9\x95\x65\x8b\x83\x21\x84\x36\xd4\x11\x8c\x3f\x42\x27\x8a\x58\xc0\x6d\x20\xf0\x61\x58\xc3\x80\x97\x84\x60\x83\x67\xe7\x7b\x04\x6e\x28\x0c\xce\xd7\xc0\x0d\x8e\xc6\xd0\x77\xc2\x28\xf7\xc8\xc6\xee\x20\x06\xe0\xc6\x45\xd8\x9b\x23\x58\x32\xb1\x19\x6d\x29\x58\x8c\xb1\xc8\xaa\xde\xdb\xd7\xfe\x75\x03\x92\x56\x71\x67\x7c\xd9\x22\xe5\x8b\x1b\x3c\x65\x2b\x42\xee\xc9\x2f\xc4\xb7\xbd\xb7\x5a\xc8\xf4\x30\xca\xbf\x62\xec\x82\x8f\xf8\x1b\x39\x46\x5a\x03\xc1\x87\x49\xfe\x57\x8f\x91\x73\xe1\x59\x95\x58\x21\x41\x82\x8d\x82\x55\x4a\xe2\x13\x11\x5c\x6f\x81\xd0\x86\x03\x92\xce\x45\xe1\x2a\x38\xeb\xb6\x5b\xf0\xae\x1d\x01\x53\x30\x72\x3c\xc9\xe7\x60\x08\x90\xd2\x2f\x50\x26\x92\x38\x38\xb6\x0d\xbc\x64\x9e\xcf\x85\xe6\x63\x87\x93\x6b\x6b\xa2\x14\x8d\x9c\xaf\xaf\x13\xb3\xd0\x6c\xa1\xda\x73\xf1\x49\xc8\x2a\x3d\xc3\xf2\xb3\x79\xf2\xf2\xd2\x7a\x36\x11\x51\x89\x95\xe9\x5b\xfe\x17\x32\xd5\xfb\x9d\x0f\x83\x9f\xfa\x76\xf1\xfd\x01\x42\x05\x12\x0f\x5c\x3c\xa8\xf5\x99\xe9\xf9\x94\x8f\x49\xca\x77\x9c\x9f\xe2\x96\xc2\xfe\x26\x78\xc6\xbf\x59\x53\x31\x9f\xf2\x7c\xf4\xf1\xb3\x56\x09\xaa\xd6\x29\x82\x09\xf3\xf9\x49\x21\x91\xba\x96\xd8\xd7\xa0\xd2\x94\x30\x19\x8b\xea\x7a\xca\x5e\xa7\x21\x2e\xee\x45\xa3\xf3\xfc\x94\x9f\x1b\xb3\xa8\xc0\x29\x35\xa6\x29\xee\x65\x41\xee\x1e\x1e\xbe\xe8\x61\x0d\xa2\x39\xe5\xd9\x29\xcd\x75\x64\xc3\x7d\x5c\x4e\x02\x0c\x64\xba\x08\x06\x68\x12\xc3\x90\xe4\x59\xca\xfc\x4d\x44\x64\xea\x2d\x4b\x93\xde\x98\xac\x6c\x35\x62\xc0\x79\x16\xb7\x69\xa0\x75\x84\x0f\x6f\x51\xe5\x90\xfe\xef\xd0\x94\x48\xda\x86\x12\x05\x96\xfa\x1f\x8b\x89\x67\x0b\x22\x17\xc1\x12\x5b\xbc\x86\xce\x59\xfe\x8a\x14\x5d\xf0\x5f\x8d\xaf\x11\x4a\xb4\xae\xc4\x08\x43\x83\xdc\x20\x01\x07\x30\xd6\x62\xc7\x60\xe0\x30\x1a\x16\x63\xaa\x0b\x58\x5a\x81\x49\x3f\x75\x21\x87\xc7\x10\xda\xe4\xe1\xa6\x75\xe8\x79\x02\xdc\x34\x68\x77\x2f\x1e\x0b\x2b\xf7\x98\xb6\xda\x26\xbb\x67\x3f\xa9\x16\xef\x81\x5f\x6d\xfa\x1a\xc8\xd7\x8b\xc0\xfe\xc7\xdd\x9f\xb3\x95\x45\x2f\xc6\xb2\x16\xbf\x20\x6b\xf5\xfb\xd5\x18\xf2\xd5\x14\x88\x92\x31\xfb\xaf\x81\xff\xa9\x2c\xe7\x9b\x1a\xcb\x70\x35\x39\x50\xeb\xb9\x20\xc2\xe3\x2a\xf8\x8e\x7c\x3d\xd7\x7a\x5a\xfd\x61\xd1\xdc\x1f\x3e\x7e\xcc\x5f\x48\xf5\x1f\x7f\x3e\x1e\x19\xb5\xec\xee\x7d\x47\xce\x73\xa5\xbf\x3d\xa9\x3d\xc6\x68\x6a\xd9\x1a\xb5\xac\x3b\x5c\x5e\xc4\x4b\xf0\x81\xa7\xce\x63\xb9\x86\xae\x45\x79\x2e\xfa\xae\x26\x53\xa2\x3a\x7d\x7b\x0e\x2a\x4f\xbe\xce\xaf\xd8\xe9\x9d\x9d\xfa\x27\x00\x00\xff\xff\x64\xba\x96\x25\x93\x06\x00\x00")

func _hardcodedMiddlewareGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedMiddlewareGo,
		"../_hardcoded/middleware.go",
	)
}

func _hardcodedMiddlewareGo() (*asset, error) {
	bytes, err := _hardcodedMiddlewareGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/middleware.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x17, 0x73, 0xff, 0x36, 0x5d, 0xfe, 0x40, 0x7c, 0x33, 0x99, 0xc8, 0x19, 0x37, 0x47, 0x59, 0x51, 0x96, 0xb, 0x22, 0x81, 0x1c, 0x7d, 0xe4, 0x3, 0x2f, 0x2d, 0x3c, 0x2d, 0xc5, 0x23, 0x70, 0xb8}}
	return a, nil
}

var __hardcodedTracingGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x59\x6f\x6f\xdb\x38\xf2\x7e\x2d\x7d\x8a\x59\x03\xdd\x4a\x85\x22\x27\xdb\x36\xbf\x45\x16\x79\x91\x26\x69\x6b\x20\xc9\x06\x4d\x7e\xb7\x38\x1c\x0e\x05\x2d\x8d\x25\x22\x12\xa9\x23\x29\xff\xb9\x20\xdf\xfd\x30\x43\x49\xb6\x63\x27\xd7\x5e\x5e\xa8\x16\xff\x0c\x9f\x19\x0e\x9f\x67\xa8\x36\x22\x7b\x10\x05\x82\x33\x22\x93\xaa\x08\x43\x59\x37\xda\x38\x88\xc2\x60\x94\x69\xe5\x70\xe9\x46\x61\x30\x42\x95\xe9\x5c\xaa\x62\x3c\x95\x4a\x98\xd5\x56\x53\x89\x4b\x7a\x9f\xd5\x3c\x52\xa1\x1b\x97\xce\x35\xf4\x5b\x5b\x7a\x5a\x67\x32\xad\xe6\xf4\xd3\xc9\x1a\x47\x61\x18\x8c\x0a\x9d\xea\x06\x95\xc3\x0a\x6b\x74\x66\x95\x4a\x3d\xa6\xe5\x8c\x9c\x8e\xa5\xb2\xce\xb4\x35\x2a\x27\x9c\xd4\x6a\x5c\x48\x57\xb6\xd3\x34\xd3\xf5\xb8\xd0\x46\x56\x95\x18\xd7\xed\x72\xac\x1d\x56\x75\xcb\x4b\xff\x8c\xb5\x1e\x1f\xcf\xef\x81\xee\x33\x40\xfd\xaf\xf5\x8d\x71\x49\x91\x42\x63\xc7\xda\x55\xaf\x9a\x79\x36\x94\x1f\x85\x69\xb2\x57\xe7\x34\x46\x37\xa2\x60\xd0\xa3\x30\xb0\xf9\x03\x6d\x11\xc2\xcb\x13\x6c\xfe\x30\xe6\x31\xaf\x9a\x1d\x46\xf9\xa7\x43\xeb\x5e\x1d\xbf\x61\xb1\x79\x28\x52\xa9\xc6\xe7\x15\xce\xd1\x8c\x1f\xc4\x6a\x8e\x78\x50\xe8\x74\x7e\x3c\xae\x74\x51\xa0\x19\x85\x71\x18\x8e\xc7\xd0\x43\xd7\x06\x9c\x86\xd6\x62\x1a\xce\x85\xd9\x6c\xde\x70\x2e\xbd\xc7\xa5\xbb\x16\xcd\xed\xba\xf7\x74\xbb\x9f\x10\x9c\xfb\x5c\x7c\x7c\x82\xf1\x98\x93\x15\x1b\x61\x50\x39\x28\x51\xe4\x68\x78\xd9\x1c\x67\xa2\xad\xdc\xb9\xae\x2a\xcc\x9c\x36\xb7\x94\xc8\x0b\x61\x21\x2b\x85\x2a\x30\x87\x99\xd1\x35\x7c\xfc\xf8\xfb\xf1\x21\x48\x05\x37\x7a\x8e\xf5\x14\x0d\x08\x95\x83\x2b\x11\xbe\x68\xa8\xe4\xd4\x08\xb3\x22\x6b\xa5\xb0\xea\xad\x83\x29\xa2\x82\xb6\xc9\x85\xc3\x1c\x16\x25\x2a\x90\x0e\xa4\x5d\x37\x21\x64\x42\x91\x93\x40\xdb\x9a\x5e\xec\x01\xc1\xde\xef\x45\xd7\x4a\xe5\x8e\x8e\xe1\x14\x3e\xbc\x3f\xfa\x3f\x76\xe2\x0e\x5d\xdb\x7c\xa9\xf4\x54\x54\xec\xf8\xad\xd1\x73\x99\xa3\x39\x53\xf9\x65\x97\x45\x60\xd1\x11\x00\x10\x0a\xfa\xcc\xa2\x40\xfb\xdf\x09\x59\x11\x16\x16\x58\x55\xf4\x2f\x79\xb6\xb5\xb5\x50\xb0\x75\x1f\x45\x8a\x34\xdb\x87\x19\xed\x16\x37\x15\xa8\xd0\xd0\x46\xd8\x61\xfb\xc6\x63\xb8\x2f\x71\xbd\x1a\x85\x6c\x98\x29\x0c\x82\x41\xd7\x1a\x85\x39\x05\x56\x9b\xc1\x5e\x49\xd1\xa9\x2a\x8f\x2f\xc7\x19\x81\x2f\x5b\x97\xeb\x85\x4a\xc3\x59\xab\xb2\x1f\xf1\x37\xca\xdc\x12\x3a\x32\x4a\xbb\x44\x88\x21\xea\x8f\x44\x7a\xd7\x08\xd5\x8f\x4d\xe0\xdd\xd0\xce\xf6\x4c\x6f\x30\x01\x34\x46\x9b\x18\x1e\xc3\x60\x3c\x86\xa3\x94\xc2\x48\x51\xec\x9d\xe2\xe6\xdf\x86\x66\xb6\x61\x06\x2f\xb9\xf7\x7d\x0a\xc2\x5a\x59\xa8\xad\x18\x6e\x0c\xe2\x51\x93\x19\x2c\xf0\x2d\x05\xa5\x55\x4a\xaa\x02\x2a\x4d\x41\x58\x25\x14\x0f\x05\x14\x28\xd0\xb3\x19\x58\x51\x37\x95\x54\x45\x0a\x7f\xba\x12\xcd\x42\x5a\xf4\x6d\xe8\x11\xbe\x01\x6d\x60\x51\x0a\x47\xe7\x0d\xee\xbf\x9d\x9d\x4f\x6e\xbe\x7c\xbf\x3b\xbb\xbe\xbd\xa2\x1f\xb7\xdf\xfe\xfc\x74\xf6\x69\x72\x35\xb9\xff\x3b\xd8\x06\x33\x39\x93\x68\xd3\x30\xe8\xcd\xde\x1a\x3d\x15\x53\x59\x49\xb7\x82\x93\x53\x38\x4c\x0f\x8f\xc2\x40\xda\x2b\x02\x43\x0d\xda\xa6\x5f\xd0\xa1\x9a\x47\xa3\xef\x93\xbb\xef\x57\x7f\x9e\x9f\x5d\x8d\x62\x38\x3d\x85\x91\x33\x2d\x9d\x79\x39\x83\x7e\xfc\x63\x18\xec\x35\x7c\x0a\x47\xe9\x61\x18\x3c\x01\x56\x16\x41\xce\x60\xfe\xcc\xf4\x6b\xb0\x47\xf1\x1f\x30\x87\x5f\x4e\x61\x34\x7a\x69\x81\xcf\x46\xd7\x97\x6a\xce\x9b\x47\x96\x3b\x31\x49\x6f\x85\xb1\xf8\xb9\xd2\xc2\x45\xf3\x04\x8e\x3f\xc4\x61\x40\x70\x69\xd4\x2f\xa7\xa0\xa4\x47\x1c\xf8\xb4\xa4\xf7\xc4\x3f\x66\xb5\x4b\x2f\x29\x0f\x66\xd1\x28\xd3\x6d\x95\x83\xd2\x0e\x1a\xb2\x06\x6f\xdf\xd8\xb7\x94\xa7\x33\x32\x3b\x4a\x60\x4e\x46\x9f\x5e\x74\xfc\x65\xb4\x61\xf0\x14\x86\x81\xc8\x73\x86\x4c\x4b\xde\x35\x46\x2a\x37\x8b\x46\x6f\xec\xc9\x9b\x7c\x94\xec\xe7\x8a\xaf\xda\xba\x64\x2f\x51\xc4\x3e\xb3\x2e\xe7\x68\x56\x70\xf4\x11\x2c\x66\x5a\xe5\x74\xc8\xdf\x56\x94\x85\x2b\xc2\x9d\x69\xa5\x30\x73\xf4\x73\xfb\xc0\x67\xbd\x29\x10\x8e\xed\xd0\xb9\xec\x96\xe1\xe4\x24\x9e\x05\x3d\xf3\x89\x5a\x6a\xeb\x4e\x98\x8f\x68\xe8\x5f\x94\xb2\x7d\x22\x4b\x45\xa9\x9e\xb7\x19\x4f\x70\xa5\xb4\x44\x85\x02\xac\xcc\x31\x13\x26\x61\x5e\x58\x6c\xcc\x60\x13\x5d\xfa\x6f\x8c\xef\x5b\x7a\xbb\xba\xc1\x01\xed\xc1\x80\x36\x0d\x83\xdc\x48\xca\x7d\x4a\xa9\x4e\x33\xd3\x1b\x5c\x5c\x70\x6b\x14\x06\xc1\xd0\xfa\x97\x74\xe5\x37\xec\x22\x20\xb5\xba\x45\x23\x75\x1e\x1d\x7d\x7c\x47\x35\x47\x7a\xc7\xf1\x8a\x93\xe7\x53\x2e\x55\xde\x68\xa9\x5c\x44\x9b\xb5\xdb\x3d\x51\x16\xb3\xd6\x60\x44\x5d\x71\x18\xe0\xc0\x32\x5d\x3a\xf2\x36\xde\xe0\x62\xa0\xaa\x30\x08\x32\xb7\x24\x43\x1e\xba\x9f\xb7\x9b\x99\xaf\x26\x26\x13\x15\x64\x06\x85\xa3\xe8\xf4\xab\x9e\xc0\x9b\xf9\x88\x97\x8e\x7d\x86\xb9\x86\x30\x28\x5c\x6c\x33\x5d\xb4\x86\xb9\x27\x47\xe3\x30\x20\x61\x4f\xef\xd0\x3d\x9b\xe6\x9a\x38\x0c\xbc\x92\xa7\x94\xc9\x1d\xd5\x12\xfd\xc6\xe9\x44\xcd\xf4\x45\x34\xb2\x4e\x18\x02\x75\xe0\x99\x6f\x94\x40\x37\xe1\x9a\xbc\x1a\x51\x18\xd1\xda\xd1\x09\xf8\x3f\x7a\xa7\x60\x8c\x7a\x20\x07\x46\x38\x1c\x9d\xec\x03\x96\x84\xc1\x53\x1c\xf6\x91\x59\xfb\xe0\x1a\x0e\x51\xf8\xf4\xa3\xfa\xf8\x59\x9b\x7b\xb4\xac\xd2\x35\x0a\xc5\x07\x62\x8a\x24\x64\x2c\x4f\xad\x92\x0e\xa8\xee\x91\xaa\xf0\x62\xa9\x72\xa8\x25\xc5\xdc\xab\xa5\xa5\x25\x40\x4c\xf5\x1c\x59\xc5\x74\xeb\x28\xc1\xe9\x80\x6c\xce\x4d\x61\xe2\x3a\xdd\xb3\x24\xc5\x52\x1d\xd4\x58\x6b\x5f\x3d\x0c\x4a\x49\x06\x70\x29\x6a\xc9\x89\xde\x49\x2b\xe6\x60\x1b\xa1\xec\x8f\x6b\x60\xe7\x53\x14\x43\xf4\x6e\x28\xdc\xd2\x89\xba\xe6\x15\x7f\x4e\xfd\x06\x6c\x27\xa7\xb0\xb6\x75\x83\x8b\xe7\xe6\xa2\xf8\x47\x72\xec\x28\x3d\xfc\x2f\x39\xf5\xda\x96\x72\x00\x5e\x36\x0f\x2f\xa8\xfc\x3e\x4a\x66\xde\x3e\xfe\x10\xbf\x18\x04\x72\xbe\xc3\x32\x8c\xb8\xd9\x59\x3a\x0c\x98\xf7\x38\x61\xb6\x98\x72\x72\xb1\x2e\x8d\x52\x98\x6c\x16\x3a\x3d\x1c\x4a\xb5\x85\x36\x0f\x10\x09\x07\x15\x0a\xeb\x60\x21\x5d\xe9\xa9\xcf\x6b\x3b\x1d\xde\x9e\x83\x37\x2d\x42\xdd\x5a\x37\x24\x48\x57\x8a\x4d\x2e\x2c\xe5\xdc\x4c\x9b\xba\x5a\x81\x70\x60\x84\xca\x75\xed\x2b\x59\xb2\x80\xca\x49\x83\x94\x4d\x99\x4f\x50\xa9\xdc\xf1\x87\xd4\x2f\xf1\xb9\xcb\xbd\xa6\xc2\x64\xcb\x93\xe5\x81\x11\xab\xed\xd5\x73\x8d\x96\xb5\x30\xd7\x8c\x96\x4c\x0c\x41\x22\x2e\xbc\xf3\xe8\xd7\x65\xd7\x2d\x17\xe0\x9f\x84\xc5\x3c\xda\x0e\xf8\xe4\xe2\x1b\x49\x4a\xd7\xb5\x87\x82\x62\xa6\x5a\x5f\x54\x5a\x84\x5a\x2c\x65\xdd\xd6\x96\x2b\x49\xa7\xa1\x68\x85\xc9\x41\x14\x82\x2e\x6f\x60\x75\x8d\xae\xe4\xd3\xa3\xe9\xb9\x30\x5a\x15\x7c\x68\x2d\x2a\xba\x81\x82\x00\xe7\xf5\x2b\x17\x4e\x40\xab\x70\xd9\x60\xe6\x30\xaf\x56\x3b\x4e\x34\x42\x5d\xc9\x5a\x3a\xbb\x5d\x3e\xfa\x36\x2e\x19\xce\x1c\xdd\x1b\x5b\x87\xe7\xba\x55\x8e\x3b\x4e\xe0\xe8\xf0\x90\x10\x07\x97\x73\x54\x6e\xb3\x83\xfe\xfa\xce\x2b\xa9\x1e\x9e\xf7\xf5\x9d\x4f\xec\xf1\x36\x96\x95\xca\x36\x32\xdd\x4b\x8c\x27\xb9\xeb\x76\x79\x87\x66\x8e\xe6\x5a\xe6\x79\x85\x8b\x75\x85\x6d\xa1\x5e\x37\xb9\x52\x38\xb0\x25\x97\x31\x53\x04\xe1\x9c\xc8\x4a\xcc\x29\x84\x02\x36\xee\xca\x60\xd9\x18\x97\xf1\x13\xe7\xb7\xda\x2d\x78\x9f\x55\x61\x4f\x80\x49\xdd\x7a\x4a\xf2\x1a\x2e\xf2\xdc\xbf\xfb\xfb\x1f\x48\x35\xd3\x64\x96\x92\xc8\xe0\xbf\x5a\xb4\xee\xa0\xab\x39\xb3\x5e\x01\xc8\xfa\x37\x59\x94\x0e\x94\x5e\xd0\xbd\x48\xab\x6a\x05\xb6\x6d\xf8\x83\x02\x0d\xa2\xbd\xa2\x8c\x96\x8a\x0d\x51\x56\x0b\xe7\xbd\xb8\x10\x4e\xe4\x9a\xb5\x0e\x33\xd7\x13\xe3\x9e\x38\x44\xe4\x8b\xcc\xf0\x46\xd4\x48\xd5\xa0\x54\x45\x0c\x34\x38\xa2\xcb\x7c\xfa\x55\xa8\x9c\xce\x18\x6c\xbe\xd1\xb9\xd7\xae\xa2\x48\xb0\x66\xf3\x87\x83\x74\xbf\xcd\x64\xe8\xa7\x3d\x5a\x5f\x4a\x6d\xb4\xbe\xbe\xc6\x6b\x4e\xf3\x2b\xc3\xeb\x6b\xf7\x83\x3d\x86\x2d\xa0\x9f\x69\x3e\x1b\x31\x0b\x3f\xef\x1b\xda\x46\x2b\x8b\x7f\x19\xc9\x4c\x67\xe0\x5d\xd7\xce\x61\x8f\x7d\x61\x3b\x1e\xf7\x38\xe9\xa2\x0a\xb8\xa4\x7d\x22\x5d\x61\x01\x6b\x84\x4a\x79\x17\x9a\xd6\xf1\x7d\x55\x75\x7b\x97\xb9\xe5\xf3\x7d\x23\x6b\x76\x90\x02\x3e\x0d\x9b\xe2\x6f\xfa\x1b\x57\x44\x5e\x73\x91\x6d\x33\xae\xc4\x79\xe8\xd0\xf9\x07\xd8\x2c\xfd\x2a\x6c\x47\x00\x51\x87\x33\x20\x2c\x93\x8b\xc4\x5b\x9f\x5c\xf0\xcc\x8c\xa7\xd2\xa0\xf4\x8e\x77\x30\x8a\x13\x6a\x1d\xe6\x0e\xcd\x6c\x82\xae\xf6\x5d\x7a\x50\xed\x8f\x94\xab\x25\x2e\xbb\xdd\xf7\x97\x54\xa6\x3d\x4a\xae\x04\xac\x26\xcf\xc0\x95\x9a\xee\x53\xda\xe7\x57\xa6\x8d\xc1\xca\xd7\x53\x95\x2e\xac\xbf\xf4\xd3\x7a\x96\x09\xdb\xf2\x4a\x72\x06\x15\xaa\xa8\xc3\xca\x77\xa1\xf7\xbf\xc1\xaf\xbf\x72\xab\xf7\x84\x1b\x8f\x8e\xe1\x11\x68\x0b\xb6\xca\x6c\x9f\xcf\x27\xd4\x3b\x5d\x39\x84\xe8\xfd\x6f\x07\x59\x29\x0c\x81\x8d\x13\xf8\xbd\x6b\x3d\x3a\x5e\xb7\x76\x34\xcf\x64\xd6\x50\x0d\x91\x7b\x20\x41\x07\xe1\x93\x4d\xe0\x3b\xc5\xac\xc4\x65\x7a\x81\x99\xce\xb1\x0b\x4d\x8f\xd1\x0f\xdf\x53\xb5\x6d\x6e\x5c\x7a\x96\xe7\xfd\xdb\x88\x67\x7e\x97\xf9\x28\xf1\x73\x83\xed\x0b\x0a\xdd\x4e\xfc\x57\xbe\xf4\x93\x2c\x2e\x55\x2e\x85\x4a\xff\x9f\xe3\x1b\x0d\xa8\xfe\xf1\xfb\xc9\x3f\xe3\xb8\x5b\xdc\x07\xe6\x65\xa8\x5d\xe0\x7e\x1e\x29\x4d\xfc\xdf\x80\xf6\x90\x7a\x8c\x74\x8b\xf3\x8f\x32\x65\x46\xf9\x7a\x7f\x7f\x1b\x99\x45\x02\x2c\xc7\x4f\x31\x57\xd4\x9e\x7c\x7d\x45\xa0\x2c\xd3\x56\xcf\xba\x74\x78\xdc\xd0\xea\x3f\x8b\x10\x8f\x65\x95\x44\xe5\x7a\x4e\xb4\x3d\xc5\x3a\xf1\x80\xcc\x73\x62\x7b\xd6\xc2\x88\x26\x01\x4c\x8b\xd4\x1f\xf6\xee\x06\x38\xac\x97\x0c\x1f\xa3\x3a\x8b\x64\xaf\xfb\xf4\x01\x73\x51\xb5\xac\x8f\x4d\x4b\x97\xbe\xee\xa0\x83\x22\x26\xd4\xad\xe3\xa2\x60\xf7\x53\x8d\xb4\x3c\xbe\xff\xfc\x45\xd3\xba\x8f\x17\x5a\x11\x47\x03\x8a\xac\xec\x97\xe3\xd3\xd3\x7d\x0b\x86\x85\x56\x6f\x19\xc0\x14\x0b\xae\x9b\x9d\xac\xfc\x69\xa2\x7b\x9c\x92\x4e\x8a\x4a\xfe\x1b\x73\x88\x30\x2d\x12\xf2\x56\xaa\x4e\x6a\xbc\xa4\xb4\x4d\xdc\x11\xf9\x66\x4c\xa3\xa9\xb0\xb8\x8e\xb0\x27\x37\xdd\xaa\xfc\xde\xc8\xa6\xe1\xe2\xae\x11\x8a\xb8\xf8\xdc\x2d\xff\xc6\x3e\x4b\xe5\xd0\xcc\x44\x86\x8f\x4f\xf1\xee\x84\x8d\xb2\xce\x6c\x34\x3f\x6e\xad\x73\x02\x5b\xaf\xbb\x8b\x9c\xec\xb4\x70\x42\xb8\x55\x83\x5b\x66\x89\x76\xda\xcc\xd1\xa2\xdb\x8e\x00\xec\x42\x0b\x83\xd7\x7c\x19\xea\xdf\x88\x32\x6d\x63\x5a\x0c\x83\x91\x68\x87\xff\xa3\x77\x5b\x3a\xb1\x59\xd9\x0f\x3a\xe3\x3f\x6d\xa7\x5b\x61\x27\x1d\x72\xe9\x76\x14\xf8\xc2\xdb\x0d\x26\xbd\x7b\x56\x0a\x73\x51\xff\x65\xa7\xa8\x8f\xe3\x9d\x89\x2f\x08\xe5\xce\xb8\xbb\x2e\x1c\x9f\x99\x2b\xe9\x8e\xc1\xe2\x47\x15\x9e\xce\x3b\x46\xdf\xa3\x79\xbe\xc3\x4b\xca\x3c\x01\xfd\x40\x44\xb3\xc1\x1b\x29\xc7\x36\x32\x2e\x7d\x1e\xef\x38\x8d\xba\x2a\xa1\x53\x2f\xfd\xd0\x29\x53\x17\xac\xf9\x40\x0d\x7d\x0e\xa5\xd7\x1e\xcd\x78\x4c\x25\x3b\x82\xb0\x43\x44\xdf\xda\xa1\x86\xee\xcf\x1e\x7f\xe5\xf0\xf5\x5d\x9c\x6e\x6c\x5b\x5f\xcb\x5d\x7a\x69\x26\xc7\xcf\xa8\xcf\xcb\x60\x27\xd8\xbe\xc8\x5a\x8b\x11\x97\x47\x7c\x4e\x85\xe2\x6c\xea\x0f\x66\xf7\x9d\xbb\x3b\x4e\x7b\x6d\xee\xc9\x94\x8e\xaf\x7d\xb2\x4f\x2e\x86\x7a\xe9\x31\xfc\x71\xc9\x27\xc1\xdf\x96\xfa\x5d\x99\xef\x2f\x55\xcf\xc6\xed\xea\x79\xb2\x33\x66\xa7\x12\x20\x22\x0e\x7c\x89\xb1\x86\xd7\x8d\xdf\x44\xb9\xce\xb2\xb4\x0b\xc7\x26\xf0\x64\xeb\xbf\x10\xbe\x72\xf0\xce\x85\x31\x12\x4d\x64\xba\xf7\x78\xa3\x8e\xfb\x99\x9a\xe4\x29\xfc\x4f\x00\x00\x00\xff\xff\xe6\xe6\x42\x5b\x36\x1b\x00\x00")

func _hardcodedTracingGoBytes() ([]byte, error) {
	return bindataRead(
		__hardcodedTracingGo,
		"../_hardcoded/tracing.go",
	)
}

func _hardcodedTracingGo() (*asset, error) {
	bytes, err := _hardcodedTracingGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../_hardcoded/tracing.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf5, 0x4d, 0xd0, 0xa4, 0x31, 0x36, 0xe0, 0xe7, 0xb5, 0xe0, 0x7b, 0xc1, 0xf1, 0x1e, 0xba, 0xad, 0x67, 0x15, 0x12, 0x78, 0x74, 0x25, 0x5d, 0xc4, 0x16, 0x52, 0x52, 0xa1, 0xd, 0x89, 0xba, 0x58}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../_hardcoded/doer.go":       _hardcodedDoerGo,
	"../_hardcoded/middleware.go": _hardcodedMiddlewareGo,
	"../_hardcoded/tracing.go":    _hardcodedTracingGo,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"..": {nil, map[string]*bintree{
		"_hardcoded": {nil, map[string]*bintree{
			"doer.go":       {_hardcodedDoerGo, map[string]*bintree{}},
			"middleware.go": {_hardcodedMiddlewareGo, map[string]*bintree{}},
			"tracing.go":    {_hardcodedTracingGo, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
